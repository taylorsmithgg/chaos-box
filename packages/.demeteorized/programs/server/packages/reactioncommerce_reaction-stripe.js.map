{"version":3,"sources":["reactioncommerce:reaction-stripe/server/register.coffee","reactioncommerce:reaction-stripe/server/stripe.coffee","reactioncommerce:reaction-stripe/common/collections.coffee","reactioncommerce:reaction-stripe/common/routing.coffee","reactioncommerce:reaction-stripe/lib/stripe.coffee"],"names":[],"mappings":"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","file":"/packages/reactioncommerce_reaction-stripe.js","sourcesContent":["ReactionCore.registerPackage\n  name: 'reaction-stripe' # usually same as meteor package\n  autoEnable: false # auto-enable in dashboard\n  settings: # private package settings config (blackbox)\n    mode: false\n    api_key: \"\"\n  registry: [\n    # all options except route and template\n    # are used to describe the\n    # dashboard 'app card'.\n    {\n      provides: 'dashboard'\n      label: 'Stripe'\n      description: \"Stripe Payment for Reaction Commerce\"\n      icon: 'fa fa-cc-stripe' # glyphicon/fa\n      cycle: '3' # Core, Stable, Testing (currently testing)\n      container: 'dashboard'  #group this with settings\n    }\n    # configures settings link for app card\n    # use 'group' to link to dashboard card\n    {\n      route: 'stripe'\n      provides: 'settings'\n      container: 'dashboard'\n    }\n    # configures template for checkout\n    # paymentMethod dynamic template\n    {\n      template: 'stripePaymentForm'\n      provides: 'paymentMethod'\n    }\n  ]\n  # array of permission objects\n  permissions: [\n    {\n      label: \"Stripe\"\n      permission: \"dashboard/payments\"\n      group: \"Shop Settings\"\n    }\n  ]\n","Fiber = Npm.require(\"fibers\")\nFuture = Npm.require(\"fibers/future\")\n\nMeteor.methods\n  #submit (sale, authorize)\n  stripeSubmit: (transactionType, cardData, paymentData) ->\n    check transactionType, String\n    check cardData,\n      name: String\n      number: ValidCardNumber\n      expire_month: ValidExpireMonth\n      expire_year: ValidExpireYear\n      cvv2: ValidCVV\n      type: String\n    check paymentData,\n      total: String\n      currency: String\n\n    Stripe = Npm.require(\"stripe\")(Meteor.Stripe.accountOptions())\n    chargeObj = Meteor.Stripe.chargeObj()\n    if transactionType is \"authorize\"\n      chargeObj.capture = false\n    chargeObj.card = Meteor.Stripe.parseCardData(cardData)\n    chargeObj.amount = parseFloat(paymentData.total) * 100\n    chargeObj.currency = paymentData.currency\n\n    fut = new Future()\n    @unblock()\n\n    Stripe.charges.create chargeObj, Meteor.bindEnvironment((error, result) ->\n      if error\n        fut.return\n          saved: false\n          error: error\n      else\n        fut.return\n          saved: true\n          response: result\n      return\n    , (e) ->\n      ReactionCore.Events.warn e\n      return\n    )\n    fut.wait()\n\n  # capture (existing authorization)\n  stripeCapture: (transactionId, captureDetails) ->\n    Stripe = Npm.require(\"stripe\")(Meteor.Stripe.accountOptions())\n\n    fut = new Future()\n    @unblock()\n    Stripe.charges.capture transactionId, captureDetails, Meteor.bindEnvironment((error, result) ->\n      if error\n        fut.return\n          saved: false\n          error: error\n      else\n        fut.return\n          saved: true\n          response: result\n      return\n    , (e) ->\n      ReactionCore.Events.warn e\n      return\n    )\n    fut.wait()\n\n\n# Validators\nValidCardNumber = Match.Where((x) ->\n    /^[0-9]{14,16}$/.test x\n)\n\nValidExpireMonth = Match.Where((x) ->\n    /^[0-9]{1,2}$/.test x\n)\n\nValidExpireYear = Match.Where((x) ->\n    /^[0-9]{4}$/.test x\n)\n\nValidCVV = Match.Where((x) ->\n    /^[0-9]{3,4}$/.test x\n)\n","###\n#  Meteor.settings.stripe =\n#    mode: false  #sandbox\n#    api_key: \"\"\n#  see: https://stripe.com/docs/api\n###\n\nReactionCore.Schemas.StripePackageConfig = new SimpleSchema([\n  ReactionCore.Schemas.PackageConfig\n  {\n    \"settings.mode\":\n      type: Boolean\n      defaultValue: false\n    \"settings.api_key\":\n      type: String\n      label: \"API Client ID\"\n  }\n])\n\nReactionCore.Schemas.StripePayment = new SimpleSchema\n  payerName:\n    type: String\n    label: \"Cardholder name\"\n  cardNumber:\n    type: String\n    min: 14\n    max: 16\n    label: \"Card number\"\n  expireMonth:\n    type: String\n    max: 2\n    label: \"Expiration month\"\n  expireYear:\n    type: String\n    max: 4\n    label: \"Expiration year\"\n  cvv:\n    type: String\n    max: 4\n    label: \"CVV\"\n\nReactionCore.Schemas.StripePayment.messages\n  \"regEx payerName\": \"[label] must include both first and last name\"\n","Router.map ->\n  @route 'stripe',\n    controller: ShopAdminController\n    path: 'dashboard/settings/stripe',\n    template: 'stripe'\n    waitOn: ->\n      return ReactionCore.Subscriptions.Packages","Meteor.Stripe =\n  accountOptions: ->\n    # Note: Stripe does not have a flag for indicating sandbox vs production,\n    #       it infers automatically based on the api key provided.\n    settings = ReactionCore.Collections.Packages.findOne(name: \"reaction-stripe\").settings\n    return settings.api_key\n\n  # submit a payment authorization to Stripe\n  authorize: (cardInfo, paymentInfo, callback) ->\n    Meteor.call \"stripeSubmit\", \"authorize\", cardInfo, paymentInfo, callback\n    return\n\n  # TODO - add a \"charge\" function that creates a new charge and captures all at once\n\n  # capture an existing charge, can capture a portion or whole amount.\n  capture: (transactionId, amount, callback) ->\n    captureDetails =\n      amount: amount\n\n    Meteor.call \"stripeCapture\", transactionId, captureDetails, callback\n    return\n\n  # config is for the stripe configuration settings.\n  config: (options) ->\n    @accountOptions = options\n    return\n\n  chargeObj: ->\n    amount: \"\"\n    currency: \"\"\n    card: {}\n    capture: true\n    currency: \"\"\n\n  # parseCardData puts card data into a stripe friendly format.\n  parseCardData: (data) ->\n    number: data.number\n    name: data.name\n    cvc: data.cvv2\n    exp_month: data.expire_month\n    exp_year: data.expire_year\n"]}