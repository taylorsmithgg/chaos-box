{"version":3,"sources":["reactioncommerce:reaction-auth-net/server/register.coffee","reactioncommerce:reaction-auth-net/server/authnet.coffee","reactioncommerce:reaction-auth-net/common/routing.coffee","reactioncommerce:reaction-auth-net/common/collections.coffee","reactioncommerce:reaction-auth-net/lib/authnet.coffee"],"names":[],"mappings":"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","file":"/packages/reactioncommerce_reaction-auth-net.js","sourcesContent":["ReactionCore.registerPackage\n  name: 'reaction-auth-net' # usually same as meteor package\n  autoEnable: false # auto-enable in dashboard\n  settings: # private package settings config (blackbox)\n    mode: false\n    client_id: \"\"\n    client_secret: \"\"\n  registry: [\n    # all options except route and template\n    # are used to describe the\n    # dashboard 'app card'.\n    {\n      provides: 'dashboard'\n      label: 'Authorize.net'\n      description: \"Accept Authorize.net Payments\"\n      icon: 'fa fa-credit-card' # glyphicon/fa\n      cycle: '4' # Core, Stable, Testing (currently testing)\n      container: 'dashboard'  #group this with settings\n    }\n    # configures settings link for app card\n    # use 'group' to link to dashboard card\n    {\n      route: 'authnet'\n      provides: 'settings'\n      container: 'dashboard'\n    }\n    # configures template for checkout\n    # paymentMethod dynamic template\n    {\n      template: 'authnetPaymentForm'\n      provides: 'paymentMethod'\n    }\n  ]\n  # array of permission objects\n  permissions: [\n    {\n      label: \"Authorize.net\"\n      permission: \"dashboard/payments\"\n      group: \"Shop Settings\"\n    }\n  ]\n","AuthNet = Npm.require(\"paynode\").use(\"authorizenet\")\nFiber = Npm.require(\"fibers\")\nFuture = Npm.require(\"fibers/future\")\n\nMeteor.methods\n  #submit (sale, authorize)\n  authnetSubmit: (transactionType, cardData, paymentData) ->\n    ReactionCore.Events.info(\"authnetSubmit: \" + transactionType + cardData + paymentData)\n    paymentObj = Meteor.AuthNet.paymentObj(cardData, paymentData)\n\n    client = AuthNet.createClient Meteor.AuthNet.accountOptions()\n\n    fut = new Future()\n    @unblock()\n    client.performAimTransaction(paymentObj).on(\"success\", (error, result) ->\n      ReactionCore.Events.info \"Processed successfully.\"\n      fut.return\n        saved: true\n        response: result\n      return\n    , (e) ->\n      console.error e\n      return\n    # fut.wait()\n    ).on \"failure\", (error, result) ->\n      ReactionCore.Events.warn \"Encountered an error\"\n      fut.return\n        saved: false\n        error: result.responsereasontext\n      return\n    , (e) ->\n      console.error e\n      return\n    fut.wait()\n\n\n  # capture (existing authorization)\n  authnetCapture: (captureDetails) ->\n    ReactionCore.Events.info (\"Capture Info: \" + transactionId + captureDetails)\n\n    client = AuthNet.createClient Meteor.AuthNet.accountOptions()\n\n    fut = new Future()\n    @unblock()\n    client.performAimTransaction(captureDetails).on(\"success\", (error, result) ->\n      ReactionCore.Events.info \"Processed successfully.\"\n      fut.return\n        saved: true\n        response: result\n      return\n    , (e) ->\n      console.error e\n      return\n    # fut.wait()\n    ).on \"failure\", (error, result) ->\n      ReactionCore.Events.warn \"Encountered an error\"\n      fut.return\n        saved: false\n        error: result.responsereasontext\n      return\n    , (e) ->\n      console.error e\n      return\n    fut.wait()\n","Router.map ->\n  @route 'authnet',\n    controller: ShopAdminController\n    path: 'dashboard/settings/authnet',\n    template: 'authnet'\n    waitOn: ->\n      return ReactionCore.Subscriptions.Packages\n","###\n#  Meteor.settings.authnet =\n#    mode: false  #sandbox\n#    client_id: \"\"\n#    client_secret: \"\"\n#  see: https://developer.authnet.com/webapps/developer/docs/api/\n#  see: https://github.com/authnet/rest-api-sdk-nodejs\n###\n\nReactionCore.Schemas.AuthNetPackageConfig = new SimpleSchema([\n  ReactionCore.Schemas.PackageConfig\n  {\n    \"settings.mode\":\n      type: Boolean\n      defaultValue: false\n    \"settings.api_id\":\n      type: String\n      label: \"API Login ID\"\n      min: 60\n    \"settings.transaction_key\":\n      type: String\n      label: \"Transaction Key\"\n      min: 60\n  }\n])\n\nReactionCore.Schemas.AuthNetPayment = new SimpleSchema\n  payerName:\n    type: String\n    label: \"Cardholder name\",\n    regEx: /^\\w+\\s\\w+$/\n  cardNumber:\n    type: String\n    min: 16\n    label: \"Card number\"\n  expireMonth:\n    type: String\n    max: 2\n    label: \"Expiration month\"\n  expireYear:\n    type: String\n    max: 4\n    label: \"Expiration year\"\n  cvv:\n    type: String\n    max: 4\n    label: \"CVV\"\n\nReactionCore.Schemas.AuthNetPayment.messages\n  \"regEx payerName\": \"[label] must include both first and last name\"\n","Meteor.AuthNet =\n  accountOptions: ->\n    settings = ReactionCore.Collections.Packages.findOne(\"name\" : \"reaction-auth-net\").settings\n    if settings?.mode is true then mode = 'secure.authorize.net' else mode = 'test.authorize.net'\n    options =\n      level: mode\n      login: settings?.client_id || Meteor.settings.authnet.client_id\n      tran_key: settings?.client_secret || Meteor.settings.authnet.client_secret\n    return options\n\n  #authorize submits a payment authorization to AuthNet\n  authorize: (cardData, paymentData, callback) ->\n    Meteor.call \"authnetSubmit\", \"authorize\", cardData, paymentData, callback\n    return\n\n  # TODO - add a \"charge\" function that creates a new charge and captures all at once\n\n  capture: (authCode, amount, callback) ->\n    captureDetails =\n      x_type: \"CAPTURE_ONLY\"\n      x_amount: amount\n      x_auth_code: authCode\n\n    Meteor.call \"authnetCapture\", captureDetails, callback\n    return\n\n  #config is for the authnet configuration settings.\n  config: (options) ->\n    @accountOptions = options\n    return\n\n  paymentObj: (cardData, paymentData)->\n    x_type: \"AUTH_ONLY\"\n    x_method: \"CC\"\n    x_card_num: cardData.number\n    x_card_code: cardData.cvv2\n    x_exp_date: cardData.expire_date\n    x_amount: paymentData.total\n    x_first_name: cardData.first_name\n    x_last_name: cardData.last_name\n    x_currency_code: paymentData.currency\n"]}