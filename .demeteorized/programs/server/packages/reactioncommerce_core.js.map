{"version":3,"sources":["reactioncommerce:core/lib/statemachine/state-machine.js","reactioncommerce:core/common/packageGlobals.js","reactioncommerce:core/common/common.coffee","reactioncommerce:core/common/register.coffee","reactioncommerce:core/common/routing.coffee","reactioncommerce:core/common/schemas/packages.coffee","reactioncommerce:core/common/schemas/shops.coffee","reactioncommerce:core/common/schemas/shipping.coffee","reactioncommerce:core/common/schemas/products.coffee","reactioncommerce:core/common/schemas/tags.coffee","reactioncommerce:core/common/schemas/cart.coffee","reactioncommerce:core/common/schemas/orders.coffee","reactioncommerce:core/common/schemas/translations.coffee","reactioncommerce:core/common/schemas/taxes.coffee","reactioncommerce:core/common/schemas/discounts.coffee","reactioncommerce:core/common/collections/collections.coffee","reactioncommerce:core/common/collections/collectionFS.coffee","reactioncommerce:core/common/helpers/helpers.coffee","reactioncommerce:core/common/hooks/hooks.coffee","reactioncommerce:core/server/app.coffee","reactioncommerce:core/server/publications.coffee","reactioncommerce:core/server/fixtures.coffee","reactioncommerce:core/server/factories.coffee","reactioncommerce:core/server/methods/methods.coffee","reactioncommerce:core/server/methods/cart/methods.coffee","reactioncommerce:core/server/methods/cart/checkout/methods.coffee","reactioncommerce:core/server/methods/orders/methods.coffee","reactioncommerce:core/server/methods/products/methods.coffee","reactioncommerce:core/server/methods/accounts/accounts.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,E;;AAEA,4F;;AAEA,uD;AACA,8G;;AAEA,E;;AAEA,oB;;AAEA,sB;;AAEA,iF;;AAEA,qB;;AAEA,iF;;AAEA,a;AACA,uF;AACA,yF;AACA,yF;AACA,8G;AACA,M;;AAEA,Y;AACA,2G;AACA,2G;AACA,qF;AACA,M;;AAEA,kB;AACA,mB;;AAEA,iF;;AAEA,mC;;AAEA,kM;AACA,mD;AACA,kD;AACA,uC;AACA,0C;AACA,yB;;AAEA,6B;AACA,gK;AACA,wC;AACA,+C;AACA,oG;AACA,Q;;AAEA,oB;AACA,mD;AACA,sE;AACA,O;;AAEA,8C;AACA,uB;;AAEA,4B;AACA,qC;AACA,+D;AACA,O;;AAEA,kC;AACA,2C;AACA,qC;AACA,O;;AAEA,2B;AACA,yI;AACA,iK;AACA,iE;AACA,kQ;;AAEA,gE;;AAEA,oC;AACA,6B;;AAEA,iB;;AAEA,M;;AAEA,iF;;AAEA,2D;AACA,iB;AACA,a;AACA,gE;AACA,S;AACA,kB;AACA,yJ;AACA,S;AACA,O;AACA,M;;AAEA,oK;AACA,oK;AACA,oK;AACA,oK;AACA,oK;;AAEA,oK;AACA,oK;AACA,oK;AACA,oK;;AAEA,sD;AACA,gF;AACA,8E;AACA,qB;AACA,M;;AAEA,qD;AACA,6D;AACA,6D;AACA,M;;AAEA,qD;AACA,4E;AACA,4E;AACA,sD;AACA,qB;AACA,qF;AACA,kC;AACA,M;;AAEA,qD;AACA,6D;AACA,6D;AACA,M;;AAEA,iF;;AAEA,qC;AACA,yB;;AAEA,iC;AACA,oE;AACA,4F;;AAEA,4B;AACA,0K;;AAEA,8B;AACA,8J;;AAEA,2E;AACA,+C;;AAEA,0B;AACA,8D;AACA,kD;AACA,S;;AAEA,oK;AACA,uB;AACA,sC;AACA,+E;AACA,2B;AACA,8D;AACA,8D;AACA,8D;AACA,+C;AACA,U;AACA,2H;AACA,gC;AACA,6D;AACA,S;;AAEA,wE;AACA,8B;AACA,iC;AACA,+C;AACA,S;AACA,gD;AACA,6C;AACA,S;AACA,c;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","file":"/packages/reactioncommerce:core.js","sourcesContent":["/*\n\n  Javascript State Machine Library - https://github.com/jakesgordon/javascript-state-machine\n\n  Copyright (c) 2012, 2013 Jake Gordon and contributors\n  Released under the MIT license - https://github.com/jakesgordon/javascript-state-machine/blob/master/LICENSE\n\n*/\n\n(function (window) {\n\n  var StateMachine = {\n\n    //---------------------------------------------------------------------------\n\n    VERSION: \"2.2.0\",\n\n    //---------------------------------------------------------------------------\n\n    Result: {\n      SUCCEEDED:    1, // the event transitioned successfully from one state to another\n      NOTRANSITION: 2, // the event was successfull but no state transition was necessary\n      CANCELLED:    3, // the event was cancelled by the caller in a beforeEvent callback\n      PENDING:      4  // the event is asynchronous and the caller is in control of when the transition occurs\n    },\n\n    Error: {\n      INVALID_TRANSITION: 100, // caller tried to fire an event that was innapropriate in the current state\n      PENDING_TRANSITION: 200, // caller tried to fire an event while an async transition was still pending\n      INVALID_CALLBACK:   300 // caller provided callback function threw an exception\n    },\n\n    WILDCARD: '*',\n    ASYNC: 'async',\n\n    //---------------------------------------------------------------------------\n\n    create: function(cfg, target) {\n\n      var initial   = (typeof cfg.initial == 'string') ? { state: cfg.initial } : cfg.initial; // allow for a simple string, or an object with { state: 'foo', event: 'setup', defer: true|false }\n      var terminal  = cfg.terminal || cfg['final'];\n      var fsm       = target || cfg.target  || {};\n      var events    = cfg.events || [];\n      var callbacks = cfg.callbacks || {};\n      var map       = {};\n\n      var add = function(e) {\n        var from = (e.from instanceof Array) ? e.from : (e.from ? [e.from] : [StateMachine.WILDCARD]); // allow 'wildcard' transition if 'from' is not specified\n        map[e.name] = map[e.name] || {};\n        for (var n = 0 ; n < from.length ; n++)\n          map[e.name][from[n]] = e.to || from[n]; // allow no-op transition if 'to' is not specified\n      };\n\n      if (initial) {\n        initial.event = initial.event || 'startup';\n        add({ name: initial.event, from: 'none', to: initial.state });\n      }\n\n      for(var n = 0 ; n < events.length ; n++)\n        add(events[n]);\n\n      for(var name in map) {\n        if (map.hasOwnProperty(name))\n          fsm[name] = StateMachine.buildEvent(name, map[name]);\n      }\n\n      for(var name in callbacks) {\n        if (callbacks.hasOwnProperty(name))\n          fsm[name] = callbacks[name]\n      }\n\n      fsm.current = 'none';\n      fsm.is      = function(state) { return (state instanceof Array) ? (state.indexOf(this.current) >= 0) : (this.current === state); };\n      fsm.can     = function(event) { return !this.transition && (map[event].hasOwnProperty(this.current) || map[event].hasOwnProperty(StateMachine.WILDCARD)); }\n      fsm.cannot  = function(event) { return !this.can(event); };\n      fsm.error   = cfg.error || function(name, from, to, args, error, msg, e) { throw e || msg; }; // default behavior when something unexpected happens is to throw an exception, but caller can override this behavior if desired (see github issue #3 and #17)\n\n      fsm.isFinished = function() { return this.is(terminal); };\n\n      if (initial && !initial.defer)\n        fsm[initial.event]();\n\n      return fsm;\n\n    },\n\n    //===========================================================================\n\n    doCallback: function(fsm, func, name, from, to, args) {\n      if (func) {\n        try {\n          return func.apply(fsm, [name, from, to].concat(args));\n        }\n        catch(e) {\n          return fsm.error(name, from, to, args, StateMachine.Error.INVALID_CALLBACK, \"an exception occurred in a caller-provided callback function\", e);\n        }\n      }\n    },\n\n    beforeAnyEvent:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onbeforeevent'],                       name, from, to, args); },\n    afterAnyEvent:   function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onafterevent'] || fsm['onevent'],      name, from, to, args); },\n    leaveAnyState:   function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onleavestate'],                        name, from, to, args); },\n    enterAnyState:   function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onenterstate'] || fsm['onstate'],      name, from, to, args); },\n    changeState:     function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onchangestate'],                       name, from, to, args); },\n\n    beforeThisEvent: function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onbefore' + name],                     name, from, to, args); },\n    afterThisEvent:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onafter'  + name] || fsm['on' + name], name, from, to, args); },\n    leaveThisState:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onleave'  + from],                     name, from, to, args); },\n    enterThisState:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onenter'  + to]   || fsm['on' + to],   name, from, to, args); },\n\n    beforeEvent: function(fsm, name, from, to, args) {\n      if ((false === StateMachine.beforeThisEvent(fsm, name, from, to, args)) ||\n          (false === StateMachine.beforeAnyEvent( fsm, name, from, to, args)))\n        return false;\n    },\n\n    afterEvent: function(fsm, name, from, to, args) {\n      StateMachine.afterThisEvent(fsm, name, from, to, args);\n      StateMachine.afterAnyEvent( fsm, name, from, to, args);\n    },\n\n    leaveState: function(fsm, name, from, to, args) {\n      var specific = StateMachine.leaveThisState(fsm, name, from, to, args),\n          general  = StateMachine.leaveAnyState( fsm, name, from, to, args);\n      if ((false === specific) || (false === general))\n        return false;\n      else if ((StateMachine.ASYNC === specific) || (StateMachine.ASYNC === general))\n        return StateMachine.ASYNC;\n    },\n\n    enterState: function(fsm, name, from, to, args) {\n      StateMachine.enterThisState(fsm, name, from, to, args);\n      StateMachine.enterAnyState( fsm, name, from, to, args);\n    },\n\n    //===========================================================================\n\n    buildEvent: function(name, map) {\n      return function() {\n\n        var from  = this.current;\n        var to    = map[from] || map[StateMachine.WILDCARD] || from;\n        var args  = Array.prototype.slice.call(arguments); // turn arguments into pure array\n\n        if (this.transition)\n          return this.error(name, from, to, args, StateMachine.Error.PENDING_TRANSITION, \"event \" + name + \" inappropriate because previous transition did not complete\");\n\n        if (this.cannot(name))\n          return this.error(name, from, to, args, StateMachine.Error.INVALID_TRANSITION, \"event \" + name + \" inappropriate in current state \" + this.current);\n\n        if (false === StateMachine.beforeEvent(this, name, from, to, args))\n          return StateMachine.Result.CANCELLED;\n\n        if (from === to) {\n          StateMachine.afterEvent(this, name, from, to, args);\n          return StateMachine.Result.NOTRANSITION;\n        }\n\n        // prepare a transition method for use EITHER lower down, or by caller if they want an async transition (indicated by an ASYNC return value from leaveState)\n        var fsm = this;\n        this.transition = function() {\n          fsm.transition = null; // this method should only ever be called once\n          fsm.current = to;\n          StateMachine.enterState( fsm, name, from, to, args);\n          StateMachine.changeState(fsm, name, from, to, args);\n          StateMachine.afterEvent( fsm, name, from, to, args);\n          return StateMachine.Result.SUCCEEDED;\n        };\n        this.transition.cancel = function() { // provide a way for caller to cancel async transition if desired (issue #22)\n          fsm.transition = null;\n          StateMachine.afterEvent(fsm, name, from, to, args);\n        }\n\n        var leave = StateMachine.leaveState(this, name, from, to, args);\n        if (false === leave) {\n          this.transition = null;\n          return StateMachine.Result.CANCELLED;\n        }\n        else if (StateMachine.ASYNC === leave) {\n          return StateMachine.Result.PENDING;\n        }\n        else {\n          if (this.transition) // need to check in case user manually called transition() but forgot to return StateMachine.ASYNC\n            return this.transition();\n        }\n\n      };\n    }\n\n  }; // StateMachine\n\n  //===========================================================================\n\n  if (\"function\" === typeof define) {\n    define(function(require) { return StateMachine; });\n  }\n  else {\n    window.StateMachine = StateMachine;\n  }\n\n}(this));\n\n","// exported, global/window scope\nReactionCore = {};\nReactionCore.Schemas = {};\nReactionCore.Collections = {};\nReactionCore.Helpers = {};\nReactionCore.Packages = {};\nReactionCore.MetaData = {};\nReactionCore.Locale = {};\nReactionCore.Events = {};\n\nif (Meteor.isClient) {\n  ReactionCore.Alerts = {};\n  ReactionCore.Subscriptions = {};\n}\n\n// convenience\nAlerts = ReactionCore.Alerts;\nSchemas = ReactionCore.Schemas;\n","###\n# Common settings for CollectionFS\n###\nFS.HTTP.setBaseUrl('/assets')\n\nFS.HTTP.setHeadersForGet([\n  ['Cache-Control', 'public, max-age=31536000']\n])","# Define register method\nReactionCore.registerPackage = (packageInfo) ->\n  ReactionCore.Packages[packageInfo.name] = packageInfo\n\n# Register core packages\nReactionCore.registerPackage\n  name: 'reaction-commerce'\n  depends: ['fileUploader', 'staffAccountsManager','paymentMethod', 'mailService', 'analytics', 'shipmentMethod']\n  label: 'Settings'\n  description: 'Reaction Shop'\n  icon: 'fa fa-shopping-cart'\n  settingsRoute: 'dashboard/settings/shop'\n  overviewRoute: 'dashboard'\n  overViewLabel: 'App Gallery'\n  priority: '3'\n  hidden: true\n  autoEnable: true\n  hasWidget: true\n  shopPermissions: [\n    {\n      label: \"Customers\"\n      permission: \"dashboard/customers\"\n      group: \"Shop Management\"\n    }\n    {\n      label: \"Promotions\"\n      permission: \"dashboard/promotions\"\n      group: \"Shop Management\"\n    }\n    {\n      label: \"Products\"\n      permission: \"dashboard/products\"\n      group: \"Shop Content\"\n    }\n    {\n      label: \"General Shop\"\n      permission: \"dashboard/settings\"\n      group: \"Shop Settings\"\n    }\n  ]\n\nReactionCore.registerPackage\n  name: 'reaction-commerce-orders'\n  provides: ['orderManager']\n  label: 'Orders'\n  overviewRoute: 'dashboard/orders'\n  hasWidget: true\n  hidden: true\n  autoEnable: true\n  shopPermissions: [\n    {\n      label: \"Orders\"\n      permission: \"dashboard/orders\"\n      group: \"Shop Management\"\n    }\n  ]\n\nReactionCore.registerPackage\n  name: 'reaction-commerce-staff-accounts'\n  provides: ['staffAccountsManager']\n  label: 'Admin Access'\n  settingsRoute: 'dashboard/settings/account'\n  hidden: true\n  autoEnable: true\n  shopPermissions: [\n    {\n      label: \"Dashboard Access\"\n      permission: \"dashboard/settings/account\"\n      group: \"Shop Settings\"\n    }\n  ]\n","###\n# Helper method to set default/parameterized product variant\n###\nsetProduct = (productId, variantId) ->\n  unless productId.match /^[A-Za-z0-9]{17}$/\n    product = Products.findOne({handle: productId.toLowerCase()})\n    productId = product?._id\n\n  setCurrentProduct productId\n  setCurrentVariant variantId\n  return\n\n###\n#  Global Reaction Routes\n#  Extend/override in reaction/client/routing.coffee\n###\nRouter.configure\n  notFoundTemplate: \"notFound\"\n  loadingTemplate: \"loading\"\n  onBeforeAction: ->\n    @render \"loading\"\n    Alerts.removeSeen()\n    @next()\n    return\n\n@LandingController = RouteController.extend\n  onAfterAction: ->\n    ReactionCore.MetaData.refresh(@route, @params)\n    return\n  layoutTemplate: \"layout\"\nLandingController = @LandingController\n\n@ShopController = RouteController.extend\n  waitOn: ->\n    @subscribe \"shops\"\n    @subscribe \"cart\", Session.get \"sessionId\", Meteor.userId()\n  onBeforeAction: () ->\n    unless ReactionCore.isVendor(@route.getName()) or ReactionCore.hasPermission(@route.getName())\n      @render('unauthorized')\n    else\n      @next()\n    return\n  onAfterAction: ->\n    ReactionCore.MetaData.refresh(@route, @params)\n    return\n  layoutTemplate: \"coreLayout\"\n  yieldTemplates:\n    layoutHeader:\n      to: \"layoutHeader\"\n    dashboard:\n      to: \"dashboard\"\nShopController = @ShopController\n\n@ShopAdminController = @ShopController.extend\n  waitOn: ->\n    @subscribe \"shops\"\n  onBeforeAction: () ->\n    unless ReactionCore.hasPermission(@route.getName())\n      @render('unauthorized')\n    else\n      @next()\n    return\n\nShopAdminController = @ShopAdminController\n\nRouter.map ->\n  # default index route, normally overriden parent meteor app\n  @route \"index\",\n    controller: LandingController\n    path: \"/\"\n    name: \"index\"\n    template: \"index\"\n\n  @route \"products\",\n    controller: ShopController\n    path: \"/products\"\n    name: \"products\"\n    template: \"products\"\n    waitOn: ->\n      @subscribe \"products\"\n\n  # home page intro screen for reaction-commerce\n  @route 'dashboard',\n    controller: ShopAdminController\n    template: 'dashboardPackages'\n    onBeforeAction: ->\n      Session.set \"dashboard\", true\n      @next()\n\n  @route 'dashboard/settings/shop',\n    controller: ShopAdminController\n    path: '/dashboard/settings/shop'\n    template: 'settingsGeneral'\n    data: ->\n      Shops.findOne()\n\n  @route 'dashboard/settings/account',\n    controller: ShopAdminController\n    path: '/dashboard/settings/account'\n    template: 'settingsAccount'\n\n\n  # list page of customer records\n  @route 'dashboard/customers',\n    controller: ShopAdminController\n\n  # list page of shop orders\n  @route 'dashboard/orders',\n    controller: ShopAdminController\n    path: 'dashboard/orders/'\n    template: 'orders'\n    data: ->\n      Orders.find(@params._id)\n\n  # display products by tag\n  @route 'product/tag',\n    controller: ShopController\n    path: 'product/tag/:_id'\n    template: \"products\"\n    waitOn: ->\n      @subscribe \"products\"\n    subscriptions: ->\n      @subscribe \"tags\"\n    data: ->\n      if @ready()\n        id = @params._id\n        if id.match  /^[A-Za-z0-9]{17}$/\n          return tag: Tags.findOne(id)\n        else\n          return tag: Tags.findOne(slug: id.toLowerCase())\n\n  # product view / edit page\n  @route 'product',\n    controller: ShopController\n    path: 'product/:_id/:variant?'\n    template: 'productDetail'\n    waitOn: ->\n      return Meteor.subscribe 'product', @params._id\n    onBeforeAction: ->\n      variant = @params.variant || @params.query.variant\n      setProduct @params._id, variant\n      @next()\n      return\n    data: ->\n      product = selectedProduct()\n      if @ready() and product\n        unless product.isVisible\n          unless ReactionCore.hasPermission(@url)\n            @render 'unauthorized'\n        return product\n\n  #checkout\n  @route 'cartCheckout',\n    layoutTemplate: \"layout\"\n    path: 'checkout',\n    template: 'cartCheckout'\n    yieldTemplates:\n      checkoutHeader:\n        to: \"layoutHeader\"\n    waitOn: ->\n      @subscribe \"cart\", Session.get \"sessionId\", Meteor.userId()\n    subscriptions: ->\n      @subscribe \"shops\"\n      @subscribe \"products\"\n      @subscribe \"shipping\"\n      @subscribe \"packages\"\n      @subscribe \"userOrders\", Meteor.userId()\n    data: ->\n      if @.ready()\n        return Cart.findOne()\n\n  #completed orders\n  @route 'cartCompleted',\n    controller: ShopController\n    path: 'completed/:_id',\n    template: 'cartCompleted'\n    waitOn: ->\n      @subscribe \"userOrders\", Meteor.userId()\n    data: ->\n      if @.ready()\n        if Orders.findOne(@params._id)\n          return Orders.findOne(@params._id)\n        else\n          @render 'unauthorized'\n","###\n# Packages\n###\nReactionCore.Schemas.PackageConfig = new SimpleSchema\n  shopId:\n    type: String\n    index: 1\n    autoValue: ->\n      if this.isInsert\n        return ReactionCore.getShopId() or \"1\" if Meteor.isClient\n        # force the correct value upon insert\n        return ReactionCore.getShopId()\n      else\n        # don't allow updates\n        this.unset();\n  name:\n    type: String\n    index: 1\n  enabled:\n    type: Boolean\n    defaultValue: true\n  property:\n    type: String\n    optional: true\n  settings:\n    type: Object\n    optional: true\n    blackbox: true\n  registry:\n    type: Object\n    optional: true\n    blackbox: true","###\n# Shops\n###\nReactionCore.Schemas.ShopMember = new SimpleSchema\n  userId:\n    type: String\n  isAdmin:\n    type: Boolean\n    optional: true\n  permissions:\n    type: [String]\n    optional: true\n\nReactionCore.Schemas.CustomEmailSettings = new SimpleSchema\n  username:\n    type: String\n    optional: true\n  password:\n    type: String\n    optional: true\n  host:\n    type: String\n    optional: true\n  port:\n    type: Number\n    allowedValues: [25, 587, 465, 475, 2525]\n    optional: true\n\nReactionCore.Schemas.Metafield = new SimpleSchema\n  key:\n    type: String\n    max: 30\n    optional: true\n  namespace:\n    type: String\n    max: 20\n    optional: true\n  scope:\n    type: String\n    optional: true\n  value:\n    type: String\n    optional: true\n  valueType:\n    type: String\n    optional: true\n  description:\n    type: String\n    optional: true\n\nReactionCore.Schemas.Address = new SimpleSchema\n  _id:\n    type: String\n    optional: true\n  fullName:\n    type: String\n    label: 'Full name'\n  address1:\n    label: \"Address 1\"\n    type: String\n  address2:\n    label: \"Address 2\"\n    type: String\n    optional: true\n  city:\n    type: String\n    label: \"City\"\n  company:\n    type: String\n    optional: true\n    label: \"Company\"\n  phone:\n    type: String\n    label: \"Phone\"\n  region:\n    label: \"State/Province/Region\"\n    type: String\n  postal:\n    label: \"ZIP/Postal Code\"\n    type: String\n  country:\n    type: String\n    label: \"Country\"\n  isCommercial:\n    label: \"This is a commercial address\"\n    type: Boolean\n    defaultValue: false\n  isDefault:\n    label: \"This is my default address\"\n    type: Boolean\n    defaultValue: true\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n\n#if i18n.t('addressSchema.fullName') isnt 'addressSchema.fullName' then return i18n.t('addressSchema.fullName')\n# MySchema.labels password: \"Enter your password\"\n# AddressSchema.labels\n#   password: \"Enter your password\"\n#   test: \"test\"\n\nReactionCore.Schemas.Currency = new SimpleSchema\n  symbol:\n    type: String\n    defaultValue: \"$\"\n  format:\n    type: String\n    defaultValue: \"%s%v\"\n  precision:\n    type: String\n    defaultValue: \"0\"\n    optional: true\n  decimal:\n    type: String\n    defaultValue: \".\"\n    optional: true\n  thousand:\n    type: String\n    defaultValue: \",\"\n    optional: true\n\nReactionCore.Schemas.Country = new SimpleSchema\n  name:\n    type: String\n  code:\n    type: String\n\nReactionCore.Schemas.currencyEngine = new SimpleSchema\n  provider:\n    type: String\n    defaultValue: \"OXR\"\n  apiKey:\n    type: String\n    optional: true\n    label: \"Open Exchange Rates App ID\"\n\nReactionCore.Schemas.Shop = new SimpleSchema\n  _id:\n    type: String\n    optional: true\n  name:\n    type: String\n    index: 1\n  description:\n    type: String\n    optional: true\n  keywords:\n    type: String\n    optional: true\n  addressBook:\n    type: [ReactionCore.Schemas.Address]\n  domains:\n    type: [String]\n    defaultValue: [\"localhost\"] #see simple schema issue #73\n  email:\n    type: String\n  currency:\n    type: String\n    defaultValue: \"USD\"\n  currencyEngine:\n    type: ReactionCore.Schemas.currencyEngine\n  currencies:\n    type: [ReactionCore.Schemas.Currency]\n  public:\n    type: String\n    optional: true\n  timezone:\n    type: String\n  baseUOM:\n    type: String\n    optional: true\n    defaultValue: \"OZ\"\n    label: \"Base Unit of Measure\"\n  canCheckoutAsGuest:\n    type: Boolean\n    defaultValue: false\n  ownerId:\n    type: String\n  members:\n    type: [ReactionCore.Schemas.ShopMember]\n    index: 1\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n  useCustomEmailSettings:\n    type: Boolean\n    optional: true\n  customEmailSettings:\n    type: ReactionCore.Schemas.CustomEmailSettings\n  createdAt:\n    type: Date\n  updatedAt:\n    type: Date\n    autoValue : ->\n      new Date()  if @isUpdate\n    optional: true","ReactionCore.Schemas.Shipping = new SimpleSchema\n  shopId:\n    type: String\n    index: 1\n    autoValue: ->\n      if this.isInsert\n        return ReactionCore.getShopId() or \"1\" if Meteor.isClient\n        # force the correct value upon insert\n        return ReactionCore.getShopId()\n      else\n        # don't allow updates\n        this.unset();\n  provider:\n    type: ReactionCore.Schemas.ShippingProvider\n  methods:\n    type: [ReactionCore.Schemas.ShippingMethod]\n    optional: true\n\nReactionCore.Schemas.ShipmentQuote = new SimpleSchema\n  carrier:\n    type: Number\n  method:\n    type: Number\n  tracking:\n    type: String\n    optional: true\n  label:\n    type: String\n    optional: true\n  value:\n    type: String\n    optional: true\n\nReactionCore.Schemas.Shipment = new SimpleSchema\n  address:\n    type: ReactionCore.Schemas.Address\n    optional: true\n  shipmentMethod:\n    type: ReactionCore.Schemas.ShipmentQuote\n    optional: true\n\n\nReactionCore.Schemas.ShippingProvider = new SimpleSchema\n  name:\n    type: String\n    label: \"Service Name\"\n  label:\n    type: String\n    label: \"Public Label\"\n  enabled:\n    type: Boolean\n    defaultValue: true\n  serviceAuth:\n    type: String\n    label: \"Auth\"\n    optional: true\n  serviceSecret:\n    type: String\n    label: \"Secret\"\n    optional: true\n  serviceUrl:\n    type: String\n    label: \"Service URL\"\n    optional: true\n\nReactionCore.Schemas.ShippingParcel = new SimpleSchema\n  containers:\n    type: String\n    optional: true\n  length:\n    type: Number\n    optional: true\n  width:\n    type: Number\n    optional: true\n  height:\n    type: Number\n    optional: true\n  weight:\n    type: Number\n    optional: true\n\n\nReactionCore.Schemas.ShippingMethod = new SimpleSchema\n  name:\n    type: String\n    label: \"Method Code\"\n  label:\n    type: String\n    label: \"Public Label\"\n  group:\n    type: String\n    label: \"Group\"\n  cost:\n    type: Number\n    label: \"Cost\"\n    decimal: true\n    optional: true\n  handling:\n    type: Number\n    label: \"Handling\"\n    optional: true\n    decimal: true\n    defaultValue: 0\n    min: 0\n  rate:\n    type: Number\n    label: \"Rate\"\n    decimal: true\n    min: 0\n  enabled:\n    type: Boolean\n    label: \"Enabled\"\n    defaultValue: true\n  validRanges:\n    type: Array\n    optional: true\n    label: \"Matching Cart Ranges\"\n  'validRanges.$':\n    type: Object\n    optional: true\n  'validRanges.$.begin':\n    type: Number\n    decimal: true\n    label: \"Begin\"\n    optional: true\n  'validRanges.$.end':\n    type: Number\n    decimal: true\n    label: \"End\"\n    optional: true\n  validLocales:\n    type: Array\n    optional: true\n    label: \"Matching Locales\"\n  'validLocales.$':\n    type: Object\n    optional: true\n  'validLocales.$.origination':\n    type: String\n    label: \"From\"\n    optional: true\n  'validLocales.$.destination':\n    type: String\n    label: \"To\"\n    optional: true\n  'validLocales.$.deliveryBegin':\n    type: Number\n    label: \"Shipping Est.\"\n    optional: true\n  'validLocales.$.deliveryEnd':\n    type: Number\n    label: \"Delivery Est.\"\n    optional: true\n","# XXX Unused?\nReactionCore.Schemas.Social = new SimpleSchema\n  service:\n    type: String\n  handle:\n    type: String\n\n###\n# Products\n###\nReactionCore.Schemas.VariantMedia = new SimpleSchema\n  mediaId:\n    type: String\n    optional: true\n  priority:\n    type: Number\n    optional: true\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n  updatedAt:\n    type: Date\n    optional: true\n  createdAt:\n    type: Date\n\nReactionCore.Schemas.ProductPosition = new SimpleSchema\n  tag:\n    type: String\n    optional: true\n  position:\n    type: Number\n    optional: true\n  weight:\n    type: String\n    optional: true\n  updatedAt:\n    type: Date\n\nReactionCore.Schemas.ProductVariant = new SimpleSchema\n  _id:\n    type: String\n  parentId:\n    type: String\n    optional: true\n  cloneId:\n    type: String\n    optional: true\n  index:\n    type: String\n    optional: true\n  barcode:\n    label: \"Barcode\"\n    type: String\n    optional: true\n  compareAtPrice:\n    label: \"MSRP\"\n    type: Number\n    optional: true\n    decimal: true\n    min: 0\n  fulfillmentService:\n    label: \"Fulfillment service\"\n    type: String\n    optional: true\n  weight:\n    label: \"Weight\"\n    type: Number\n    min: 0\n  inventoryManagement:\n    type: Boolean\n    label: \"Inventory Tracking\"\n  inventoryPolicy:\n    type: Boolean\n    label: \"Deny when out of stock\"\n  lowInventoryWarningThreshold:\n    type: Number\n    label: \"Warn @\"\n    min: 0\n    optional: true\n  inventoryQuantity:\n    type: Number\n    label: \"Quantity\"\n    optional: true\n    custom: ->\n      if Meteor.isClient\n        if checkChildVariants(@.docId) is 0 and !@.value then return \"required\"\n  price:\n    label: \"Price\"\n    type: Number\n    decimal: true\n    min: 0\n    optional: true\n    custom: -> #required if no child variants (options) present\n      if Meteor.isClient\n        if checkChildVariants(@.docId) is 0 and !@.value then return \"required\"\n  sku:\n    label: \"SKU\"\n    type: String\n    optional: true\n  taxable:\n    label: \"Taxable\"\n    type: Boolean\n    optional: true\n  title:\n    label: \"Label\"\n    type: String\n  optionTitle:\n    label: \"Option\"\n    type: String\n    optional: true\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n  positions:\n    type: [ReactionCore.Schemas.ProductPosition]\n    optional: true\n  createdAt:\n    label: \"Created at\"\n    type: Date\n    optional: true\n  updatedAt:\n    label: \"Updated at\"\n    type: Date\n    optional: true\n  minimumQty:\n    label: \"Minimum Quantity\"\n    type: Number\n    min: 1\n    optional: true\n\nReactionCore.Schemas.Product = new SimpleSchema\n  _id:\n    type: String\n    optional: true\n  cloneId:\n    type: String\n    optional: true\n  shopId:\n    type: String\n  title:\n    type: String\n  pageTitle:\n    type: String\n    optional: true\n  description:\n    type: String\n    optional: true\n  productType:\n    type: String\n  vendor:\n    type: String\n    optional: true\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n  variants:\n    type: [ReactionCore.Schemas.ProductVariant]\n  requiresShipping:\n    label: \"Require a shipping address\"\n    type: Boolean\n    defaultValue: true\n    optional: true\n  parcel:\n    type: ReactionCore.Schemas.ShippingParcel\n    optional: true\n  hashtags:\n    type: [String]\n    optional: true\n    index: 1\n  twitterMsg:\n    type: String\n    optional: true\n    max: 140\n  facebookMsg:\n    type: String\n    optional: true\n    max: 255\n  instagramMsg:\n    type: String\n    optional: true\n    max: 255\n  pinterestMsg:\n    type: String\n    optional: true\n    max: 255\n  metaDescription:\n    type: String\n    optional: true\n  handle:\n    type: String\n    optional: true\n    index: 1\n  isVisible:\n    type: Boolean\n    index: 1\n  publishedAt:\n    type: Date\n    optional: true\n  publishedScope:\n    type: String\n    optional: true\n  templateSuffix:\n    type: String\n    optional: true\n  createdAt:\n    type: Date\n  updatedAt:\n    type: Date\n    autoValue : ->\n      new Date() if @isUpdate\n    optional: true","###\n# Tags\n###\nReactionCore.Schemas.Tag = new SimpleSchema\n  name:\n    type: String\n    index: 1\n  slug:\n    type: String\n  position:\n    type: Number\n    optional: true\n  relatedTagIds:\n    type: [String]\n    optional: true\n    index: 1\n  isTopLevel:\n    type: Boolean\n  shopId:\n    type: String\n    index: 1\n  createdAt:\n    type: Date\n  updatedAt:\n    type: Date","###\n# Carts\n###\nReactionCore.Schemas.CartItem = new SimpleSchema\n  _id:\n    type: String\n  productId:\n    type: String\n  quantity:\n    label: \"Quantity\"\n    type: Number\n    min: 0\n  variants:\n    type: ReactionCore.Schemas.ProductVariant\n\nReactionCore.Schemas.Cart = new SimpleSchema\n  shopId:\n    type: String\n    index: 1\n  sessionId:\n    type: String\n    optional: true\n    custom: -> #required if userId isn't set\n      userIdField = @siblingField \"userId\"\n      return \"required\" if @isInsert and !@value and !userIdField.value\n      #TODO: This update logic as is would not be correct because we also need to\n      #look up the existing doc and see if userId is already set, in which case\n      #it's OK to unset sessionId. Collection2 should provide the doc _id so\n      #that we can do this lookup.\n      #return \"required\" if @isUpdate and (@operator is \"$unset\" or @value is null) and !userIdField.value\n    index: 1\n  userId:\n    type: String\n    optional: true\n    index: 1\n  items:\n    type: [ReactionCore.Schemas.CartItem]\n    optional: true\n  requiresShipping:\n    label: \"Require a shipping address\"\n    type: Boolean\n    defaultValue: true\n    optional: true\n  shipping:\n    type: ReactionCore.Schemas.Shipment\n    optional: true\n    blackbox: true\n  payment:\n    type: ReactionCore.Schemas.Payment\n    optional: true\n    blackbox: true\n  totalPrice:\n    label: \"Total Price\"\n    type: Number\n    optional: true\n    decimal: true\n    min: 0\n  state:\n    type: String\n    defaultValue: \"new\"\n    optional: true\n  createdAt:\n    type: Date\n    autoValue: ->\n      if @isInsert\n        return new Date\n      else if @isUpsert\n        return $setOnInsert: new Date\n    denyUpdate: true\n  updatedAt:\n    type: Date\n    autoValue: ->\n      if @isUpdate\n        return $set: new Date\n      else if @isUpsert\n        return $setOnInsert: new Date\n    optional: true","###\n# Payments Schema\n###\nReactionCore.Schemas.PaymentMethod = new SimpleSchema\n  processor:\n    type: String\n  storedCard:\n    type: String\n    optional: true\n  method:\n    type: String\n    optional: true\n  transactionId:\n    type: String\n  status:\n    type: String\n    allowedValues: [\"created\", \"approved\", \"failed\", \"canceled\", \"expired\", \"pending\", \"voided\", \"settled\"]\n  mode:\n    type: String\n    allowedValues: [\"authorize\", 'capture','refund','void']\n  createdAt:\n    type: Date\n    optional: true\n  updatedAt:\n    type: Date\n    optional :true\n  authorization:\n    type: String\n    optional: true\n  amount:\n    type: Number\n    decimal: true\n  transactions:\n    type: [Object]\n    optional: true\n    blackbox: true\n\nReactionCore.Schemas.Payment = new SimpleSchema\n  address:\n    type: ReactionCore.Schemas.Address\n    optional: true\n  paymentMethod:\n    type: [ReactionCore.Schemas.PaymentMethod]\n    optional: true\n\n\n###\n# Orders\n###\nReactionCore.Schemas.Document = new SimpleSchema\n  docId:\n    type: String\n  docType:\n    type: String\n    optional: true\n\nReactionCore.Schemas.History = new SimpleSchema\n    event:\n      type: String\n    userId:\n      type: String\n    updatedAt:\n      type: Date\n\nReactionCore.Schemas.OrderItems = new SimpleSchema\n  additionalField:\n    type: String\n    optional: true\n  status:\n    type: String\n  history:\n    type: [ReactionCore.Schemas.History]\n    optional: true\n  documents:\n    type: [ReactionCore.Schemas.Document]\n    optional: true","# Translations\nReactionCore.Collections.Translations = new Mongo.Collection \"Translations\"\n","# Tax Rates\nReactionCore.Schemas.TaxRates = new SimpleSchema\n  country:\n    type: String\n  county:\n    type: String\n    optional: true\n  rate:\n    type: Number\n\n# Tax Methods\nReactionCore.Schemas.Taxes = new SimpleSchema\n  shopId:\n    type: String\n  cartMethod:\n    label: \"Calculation Method\"\n    type: String\n    allowedValues: ['unit','row','total']\n  taxLocale:\n    label: \"Taxation Location\"\n    type: String\n    allowedValues: ['shipping','billing', 'origination', 'destination']\n  taxShipping:\n    label: \"Tax Shipping\"\n    type: Boolean,\n    defaultValue: false\n  taxIncluded:\n    label: \"Taxes included in product prices\"\n    type: Boolean\n    defaultValue: false\n  discountsIncluded:\n    label: \"Tax before discounts\"\n    type: Boolean\n    defaultValue: false\n  rates:\n    label: \"Tax Rate\"\n    type: [ReactionCore.Schemas.TaxRates]","# Discount Types\nReactionCore.Schemas.DiscountType = new SimpleSchema\n  percentage:\n    type: Number\n    optional: true\n    label: \"Percentage\"\n  fixed:\n    type: Number\n    optional: true\n    label: \"Price Discount\"\n  shipping:\n    type: Boolean\n    label: \"Free Shipping\"\n    optional: true\n\n# Discount Rules\nReactionCore.Schemas.DiscountRules = new SimpleSchema\n  validUses:\n    type: Number\n    optional: true\n  products:\n    type: [String]\n    optional: true\n  codes:\n    type: [String]\n    optional: true\n  range:\n    type: [Object]\n    optional: true\n  'range.$.begin':\n    type: Number\n    optional: true\n  'range.$.end':\n    type: Number\n    optional: true\n\n# Discounts\nReactionCore.Schemas.Discounts = new SimpleSchema\n  shopId:\n    type: String\n  beginDate:\n    type: Date\n    optional: true\n  endDate:\n    type: Date\n    optional: true\n  discount:\n    type: ReactionCore.Schemas.DiscountType\n  rules:\n    type: ReactionCore.Schemas.DiscountRules\n\n\n\n\n","# Cart\nReactionCore.Collections.Cart = Cart = @Cart = new Mongo.Collection \"Cart\"\nReactionCore.Collections.Cart.attachSchema ReactionCore.Schemas.Cart\n\n# Customers (not currently actively used)\nReactionCore.Collections.Customers = Customers = @Customers = new Mongo.Collection \"Customers\"\nReactionCore.Collections.Customers.attachSchema ReactionCore.Schemas.Customer\n\n# Orders\nReactionCore.Collections.Orders = Orders = @Orders = new Mongo.Collection \"Orders\"\nReactionCore.Collections.Orders.attachSchema [ReactionCore.Schemas.Cart, ReactionCore.Schemas.OrderItems]\n\n# Packages\nReactionCore.Collections.Packages = new Mongo.Collection \"Packages\"\nReactionCore.Collections.Packages.attachSchema ReactionCore.Schemas.PackageConfig\n\n# Products\nReactionCore.Collections.Products = Products = @Products = new Mongo.Collection \"Products\"\nReactionCore.Collections.Products.attachSchema ReactionCore.Schemas.Product\n\n# Shipping\nReactionCore.Collections.Shipping = new Mongo.Collection \"Shipping\"\nReactionCore.Collections.Shipping.attachSchema ReactionCore.Schemas.Shipping\n\n# Taxes\nReactionCore.Collections.Taxes = new Mongo.Collection \"Taxes\"\nReactionCore.Collections.Taxes.attachSchema ReactionCore.Schemas.Taxes\n\n# Discounts\nReactionCore.Collections.Discounts = new Mongo.Collection \"Discounts\"\nReactionCore.Collections.Discounts.attachSchema ReactionCore.Schemas.Discounts\n\n# Shops\nReactionCore.Collections.Shops = Shops = @Shops = new Mongo.Collection \"Shops\",\n  transform: (shop) ->\n    for index, member of shop.members\n      member.index = index\n      member.user = Meteor.users.findOne member.userId\n    return shop\n\nReactionCore.Collections.Shops.attachSchema ReactionCore.Schemas.Shop\n\n# Tags\nReactionCore.Collections.Tags = Tags = @Tags = new Mongo.Collection \"Tags\"\nReactionCore.Collections.Tags.attachSchema ReactionCore.Schemas.Tag","\nReactionCore.Collections.FileStorage = new FS.Collection \"FileStorage\",\n  stores: [ new FS.Store.GridFS(\"docfiles\") ]\n\nReactionCore.Collections.Media = new FS.Collection \"media\",\n  stores: [\n    new FS.Store.GridFS(\"image\"), #default unaltered image\n    new FS.Store.GridFS(\"large\", #large PDP image\n      transformWrite: (fileObj, readStream, writeStream) ->\n        if gm.isAvailable  # requires installation of imagemagick\n          # Store 1000x1000 px images for the products\n          gm(readStream, fileObj.name).resize(\"1000\", \"1000\").stream().pipe writeStream\n        else\n          readStream.pipe(writeStream);\n        return\n    ),\n    new FS.Store.GridFS(\"medium\", #large PDP image\n      transformWrite: (fileObj, readStream, writeStream) ->\n        if gm.isAvailable  # requires installation of imagemagick\n          # Store 600x600 px images for the product grids (optional)\n          gm(readStream, fileObj.name).resize(\"600\", \"600\").stream().pipe writeStream\n        else\n          readStream.pipe(writeStream);\n        return\n    ),\n    new FS.Store.GridFS(\"small\", #cart image\n      transformWrite: (fileObj, readStream, writeStream) ->\n        if gm.isAvailable # requires installation of imagemagick\n          # Store 235x235 px images for the cart\n          gm(readStream).resize(\"235\", \"235\" + '^').gravity('Center').extent(\"235\", \"235\").stream('PNG').pipe(writeStream);\n        else\n          readStream.pipe(writeStream);\n        return\n    ),\n    new FS.Store.GridFS(\"thumbnail\", #checkout & admin image\n      transformWrite: (fileObj, readStream, writeStream) ->\n        if gm.isAvailable # requires installation of imagemagick\n          # Store 100x100 px images for the cart\n          gm(readStream).resize(\"100\", \"100\" + '^').gravity('Center').extent(\"100\", \"100\").stream('PNG').pipe(writeStream);\n        else\n          readStream.pipe(writeStream);\n        return\n    )\n  ]\n  filter:\n    allow:\n      contentTypes: [\"image/*\"]\n","# Packages\nReactionCore.Collections.Packages.helpers\n  info: ->\n    return ReactionCore.Packages[@name]\n","applyVariantDefaults = (variant) ->\n  _.defaults(variant,\n    _id: Random.id()\n    inventoryManagement: true\n    inventoryPolicy: true\n    updatedAt: new Date()\n    createdAt: new Date()\n    minimumQty: 1\n  )\n\nProducts.before.insert (userId, product) ->\n  product.shopId = product.shopId || ReactionCore.getCurrentShop()._id # avoid calling if present\n  _.defaults(product,\n    productType: \"Simple\"\n    handle: getSlug product.title\n    isVisible: false\n    updatedAt: new Date()\n    createdAt: new Date()\n  )\n  for variant in product.variants\n    applyVariantDefaults(variant)\n\nProducts.before.update (userId, product, fieldNames, modifier, options) ->\n  #set default variants\n  updatedAt: new Date()\n\n  if modifier.$push\n    if modifier.$push.variants\n      applyVariantDefaults(modifier.$push.variants)\n\n  # keep quantity of parent variants in sync with the aggregate quantity of\n  # of their children\n  if modifier.$set?['variants.$']?.inventoryQuantity >= 0\n    qty = modifier.$set['variants.$'].inventoryQuantity || 0\n    for variant in product.variants when variant._id isnt modifier.$set['variants.$']._id and variant.parentId is modifier.$set['variants.$'].parentId\n      qty += variant.inventoryQuantity || 0\n    parentVariant = (variant for variant in product.variants when variant._id is modifier.$set['variants.$'].parentId)[0]\n    if parentVariant?.inventoryQuantity isnt qty\n      Products.direct.update({'_id': product._id, 'variants._id':modifier.$set['variants.$'].parentId }, {$set: {'variants.$.inventoryQuantity':qty } })\n\n  unless _.indexOf(fieldNames, 'positions') is -1\n    addToSet = modifier.$addToSet?.positions\n    if addToSet\n      createdAt = new Date()\n      updatedAt = new Date()\n      if addToSet.$each\n        for position of addToSet.$each\n          createdAt = new Date()\n          updatedAt = new Date()\n      else\n        addToSet.updatedAt = updatedAt\n  if modifier.$set then modifier.$set.updatedAt = new Date()\n  # if modifier.$addToSet then modifier.$addToSet.updatedAt = new Date()\n","###\n# configure bunyan logging module for reaction server\n# See: https://github.com/trentm/node-bunyan#levels\n###\nisDebug = Meteor.settings.isDebug\n\n# acceptable levels\nlevels = [\"FATAL\",\"ERROR\",\"WARN\", \"INFO\", \"DEBUG\", \"TRACE\"]\n\n#\n# if debug is true, or NODE_ENV development environment and not false\n# set to lowest level, or any defined level set to level\n#\nif isDebug is true or ( process.env.NODE_ENV is \"development\" and isDebug isnt false )\n  # set logging levels from settings\n  if typeof isDebug isnt 'boolean' and typeof isDebug isnt 'undefined' then isDebug = isDebug.toUpperCase()\n  unless _.contains levels, isDebug\n    isDebug = \"WARN\"\n\n# Define bunyan levels and output to Meteor console\nReactionCore.Events = logger.bunyan.createLogger(\n  name: \"reactioncommerce:core\"\n  serializers: logger.bunyan.stdSerializers\n  streams: [\n    {\n      level: \"debug\"\n      stream: (unless isDebug is \"DEBUG\" then logger.bunyanPretty() else process.stdout )\n    }\n    {\n      level: \"error\"\n      path: \"reaction.log\" # log ERROR and above to a file\n    }\n  ]\n)\n# set bunyan logging level\nReactionCore.Events.level(isDebug)\n###\n# Global reaction shop permissions methods\n###\n_.extend ReactionCore,\n  getCurrentShopCursor: (client) ->\n    domain = @getDomain(client)\n    cursor = Shops.find({domains: domain}, {limit: 1})\n    if !cursor.count()\n      ReactionCore.Events.info \"Reaction Configuration: Add a domain entry to shops for: \", domain\n    return cursor\n\n  getCurrentShop: (client) ->\n    cursor = @getCurrentShopCursor(client)\n    return cursor.fetch()[0]\n\n  getShopId: (client) ->\n    return @getCurrentShop(client)._id\n\n  getDomain: (client) ->\n    #todo: eventually we want to use the host domain to determine\n    #which shop from the shops collection to use here, hence the unused client arg\n    return Meteor.absoluteUrl().split('/')[2].split(':')[0]\n\n  findMember: (shop, userId) ->\n    shop = @getCurrentShop() unless shop\n    userId = Meteor.userId() unless userId\n    return _.find shop.members, (member) ->\n      userId is member.userId\n\n  hasPermission: (permissions, shop, userId) ->\n    return false unless permissions\n    shop = @getCurrentShop() unless shop\n    userId = Meteor.userId() unless userId\n    permissions = [permissions] unless _.isArray(permissions)\n    has = @hasOwnerAccess(shop, userId)\n    unless has\n      member = @findMember(shop, userId)\n      if member\n        has = member.isAdmin or _.intersection(permissions, member.permissions).length\n    return has\n\n  hasOwnerAccess: (shop, userId) ->\n    shop = @getCurrentShop() unless shop\n    userId = Meteor.userId() unless userId\n    return Roles.userIsInRole(userId, \"admin\") or userId is shop.ownerId\n\n  canCheckoutAsGuest = (client) ->\n    return @getCurrentShop(client).canCheckoutAsGuest || false\n","Cart  = ReactionCore.Collections.Cart\nCustomers = ReactionCore.Collections.Customers\nDiscounts = ReactionCore.Collections.Discounts\nFileStorage = ReactionCore.Collections.FileStorage\nMedia = ReactionCore.Collections.Media\nOrders = ReactionCore.Collections.Orders\nPackages = ReactionCore.Collections.Packages\nProducts = ReactionCore.Collections.Products\nShipping =  ReactionCore.Collections.Shipping\nShops = ReactionCore.Collections.Shops\nTags = ReactionCore.Collections.Tags\nTaxes = ReactionCore.Collections.Taxes\nTranslations = ReactionCore.Collections.Translations\n\n###\n# Generic Security Rule Manager\n###\n\naddAllowFuncForAll = (collections, types, fetch, func) ->\n  rules = {fetch: fetch}\n  _.each types, (t) ->\n    rules[t] = func\n  _.each collections, (c) ->\n    c.allow rules\n\naddDenyFuncForAll = (collections, types, fetch, func) ->\n  rules = {fetch: fetch}\n  _.each types, (t) ->\n    rules[t] = func\n  _.each collections, (c) ->\n    c.deny rules\n\nSecurity =\n  # This one should be called for any collections you don't explicitly call allow on because one allow function is required\n  defaultAllow: (collections) ->\n    addAllowFuncForAll collections, [\"insert\", \"update\", \"remove\"], [], (userId) ->\n      return true\n  # For FS.Collections only, allows downloads for any user, even if not logged in\n  allowAnonymousFileDownloads: (collections) ->\n    addAllowFuncForAll collections, [\"download\"], [], (userId) ->\n      return true\n  # Allow inserts, updates, and removes only if the user is in one of the given roles\n  allowOnlyRoles: (roles, types, collections) ->\n    addDenyFuncForAll collections, types, [], (userId) ->\n      return !Roles.userIsInRole(userId, roles)\n  # Allow updates and removes only if doc.shopId matches the current shop\n  mustMatchShop: (collections) ->\n    addDenyFuncForAll collections, [\"update\", \"remove\"], [\"shopId\"], (userId, doc) ->\n      return doc.shopId isnt ReactionCore.getShopId()\n  # Allow updates only if doc.shopId is not being changed\n  cantChangeShop: (collections) ->\n    addDenyFuncForAll collections, [\"update\"], [], (userId, doc, fields, modifier) ->\n      return !!modifier.$set?.shopId\n  # Allow only if doc.userId matches the current userId, which might be null\n  mustMatchUser: (types, collections) ->\n    addDenyFuncForAll collections, types, [\"userId\"], (userId, doc) ->\n      return userId? and doc.userId? and doc.userId isnt userId\n  # Allow inserts, updates, and removes only if fileObj.metadata.shopId matches the current shop\n  fileMustBelongToShop: (collections) ->\n    addDenyFuncForAll collections, [\"insert\", \"update\", \"remove\"], [], (userId, fileObj) ->\n      return fileObj.metadata.shopId isnt ReactionCore.getShopId(@)\n  # Deny all\n  denyAll: (types, collections) ->\n    addDenyFuncForAll collections, types, [], ->\n      return true\n\n\n###\n# Method to Auto-Set Props on Insert\n###\n\nAutoSet = (prop, collections, valFunc) ->\n  _.each collections, (c) ->\n    c.deny\n      # Set prop on insert\n      insert: (userId, doc) ->\n        doc[prop] = valFunc()\n        return false\n      fetch: []\n\nAutoSet \"shopId\", [ Packages, Orders, Cart, Tags, Shipping, Taxes, Discounts ], ->\n  return ReactionCore.getShopId()\n\n###\n# We add some common security rules through simple Security methods\n###\n\nSecurity.defaultAllow [ Media, FileStorage, Packages, Products, Orders, Cart, Tags, Translations, Discounts, Taxes, Shipping ]\n\nSecurity.allowOnlyRoles ['admin'], [\"insert\", \"update\", \"remove\"], [ Media, FileStorage, Products, Tags, Translations, Discounts, Taxes, Shipping ]\n\nSecurity.allowOnlyRoles ['admin'], [\"update\", \"remove\"], [ Shops ]\n\nSecurity.allowOnlyRoles ['owner'], [\"remove\"], [ Orders ]\n\nSecurity.mustMatchShop [ Packages, Products, Orders, Cart, Tags, Discounts, Taxes, Shipping ]\n\nSecurity.cantChangeShop [ Packages, Products, Orders, Cart, Tags, Discounts, Taxes, Shipping ]\n\n# Must use server methods to create and remove carts\nSecurity.denyAll [\"insert\", \"remove\"], [ Cart ]\n\n# Can update all session carts if not logged in or user cart if logged in as that user\n# TODO: should verify session match, but doesn't seem possible? Might have to move all cart updates to server methods, too?\nSecurity.mustMatchUser [\"update\"], [ Cart ]\n\nSecurity.fileMustBelongToShop [ Media, FileStorage ]\n\nSecurity.allowAnonymousFileDownloads [ Media, FileStorage ] #todo: allowing anonymous for FileStorage is probably not correct\n\n###\n# Extra client access rights for shops\n# XXX These should be verified and might be able to be folded into Security above\n###\nShops.allow\n  insert: (userId, doc) ->\n    # the user must be logged in, and the document must be owned by the user\n    return userId and doc.ownerId is userId\n  update: (userId, doc, fields, modifier) ->\n    return doc.ownerId is userId\n  remove: (userId, doc) ->\n    return doc.ownerId is userId\n  fetch: [\"ownerId\"]\n\n###\n# Beyond this point is publication functions\n###\n\n###\n# Reaction Server / amplify permanent sessions\n# If no id is passed we create a new session\n# Load the session\n# If no session is loaded, creates a new one\n###\nServerSessions = new Mongo.Collection(\"ReactionSessions\")\nMeteor.publish 'ReactionSessions', (id) ->\n  created = new Date().getTime()\n  id = ServerSessions.insert(created: created) unless id\n  serverSession = ServerSessions.find(id)\n  if serverSession.count() is 0\n    id = ServerSessions.insert(created: created)\n    serverSession = ServerSessions.find(id)\n  return serverSession\n\n###\n# CollectionFS - Image/Video Publication\n###\nMeteor.publish \"media\", () ->\n  return Media.find({ 'metadata.shopId': ReactionCore.getShopId(@) }, {sort: {\"metadata.priority\": 1}})\n\n###\n# CollectionFS - Generated Docs (invoices) Publication\n###\nMeteor.publish \"FileStorage\", () ->\n  #todo: this should be more secure and more filtered\n  return FileStorage.find()\n\n###\n# i18n - translations\n###\nMeteor.publish \"Translations\", () ->\n  #todo: this should be more secure and more filtered\n  return Translations.find()\n\n###\n# get any user name,social profile image\n# should be limited, secure information\n###\nMeteor.publish \"UserProfile\", (profileId) ->\n  if profileId?\n    if Roles.userIsInRole(this.userId, ['dashboard/orders','owner','admin','dashboard/customers'])\n      return Meteor.users.find _id: profileId,\n        fields:\n          profile: 1\n          emails: 1\n    else\n      ReactionCore.Events.info \"user profile access denied\"\n      return []\n  else\n    ReactionCore.Events.info \"profileId not defined. access denied\"\n    return []\n\n###\n#  Packages contains user specific configuration\n#  settings, package access rights\n###\nMeteor.publish \"Packages\", ->\n  shop = ReactionCore.getCurrentShop(this)\n  if shop\n    return Packages.find\n      shopId: shop._id\n    ,\n      sort:\n        priority: 1\n  else\n    return []\n\n###\n# shop collection\n###\nMeteor.publish 'shops', ->\n  ReactionCore.getCurrentShopCursor(@)\n\nMeteor.publish 'shopMembers', ->\n  self = @\n  handle = ReactionCore.getCurrentShopCursor(self).observeChanges\n    added: (id) ->\n      shop = Shops.findOne id\n      memberIds = _.pluck shop.members, \"userId\"\n      Meteor.users.find({_id: {$in: memberIds}}, {fields: {emails: 1, 'profile': 1}}).forEach (user) ->\n        self.added(\"users\", user._id, user)\n    changed: (id) ->\n      shop = Shops.findOne id\n      memberIds = _.pluck shop.members, \"userId\"\n      Meteor.users.find({_id: {$in: memberIds}}, {fields: {emails: 1, 'profile': 1}}).forEach (user) ->\n        self.added(\"users\", user._id, user)\n  self.ready()\n  self.onStop ->\n    handle.stop()\n  return\n\n###\n# product collection\n###\nMeteor.publish 'products', (userId) ->\n  shop = ReactionCore.getCurrentShop(@)\n  if shop\n    selector = {shopId: shop._id}\n    unless Roles.userIsInRole(this.userId, ['admin'])\n      selector.isVisible = true\n    return Products.find(selector)\n  else\n    return []\n\nMeteor.publish 'product', (productId) ->\n  shop = ReactionCore.getCurrentShop(@) #todo: wire in shop\n  if productId.match /^[A-Za-z0-9]{17}$/\n    return Products.find(productId)\n  else\n    return Products.find({handle: { $regex : productId, $options:\"i\" } })\n\n###\n# orders collection\n###\nMeteor.publish 'orders', ->\n  if Roles.userIsInRole(this.userId, ['admin','owner'])\n    return Orders.find( shopId: ReactionCore.getShopId(@) )\n  else\n    return []\n\nMeteor.publish 'userOrders', (userId) ->\n  return Orders.find\n    shopId: ReactionCore.getShopId(@)\n    userId: this.userId\n\n###\n# cart collection\n###\nMeteor.publish 'cart', (sessionId) ->\n  return unless sessionId\n  check(sessionId, String)\n  shopId = ReactionCore.getShopId(@)\n\n  # createCart will create for session if necessary, update user if necessary,\n  # sync all user's carts, and return the cart\n  cart = createCart sessionId, @userId, shopId\n\n  return Cart.find _id: cart._id\n\n###\n# tags\n###\nMeteor.publish \"tags\", ->\n  return Tags.find(shopId: ReactionCore.getShopId())\n\n###\n# shipping\n###\nMeteor.publish \"shipping\", ->\n  return Shipping.find(shopId: ReactionCore.getShopId())\n\n###\n# taxes\n###\nMeteor.publish \"taxes\", ->\n  return Taxes.find(shopId: ReactionCore.getShopId())\n\n###\n# discounts\n###\nMeteor.publish \"discounts\", ->\n  return Discounts.find(shopId: ReactionCore.getShopId())\n\n","###\n# Fixtures is a global object that it can be reused in packages\n# assumes collection data in reaction-core/private/data, optionally jsonFile\n# use jsonFile when calling from another package, as we can't read the assets from here\n# ex:\n#   jsonFile =  Assets.getText(\"private/data/Shipping.json\")\n#   Fixtures.loadData ReactionCore.Collections.Shipping, jsonFile\n###\nPackageFixture = ->\n  loadData: (collection, jsonFile) ->\n    return if collection.find().count() > 0\n    ReactionCore.Events.info \"Loading fixture data for \"+collection._name\n    unless jsonFile\n      json = EJSON.parse Assets.getText(\"private/data/\"+collection._name+\".json\")\n    else\n      json = EJSON.parse jsonFile\n\n    for item,value in json\n      collection._collection.insert item, (error, result) ->\n        if error\n          ReactionCore.Events.info (error + \"Error adding \" + value + \" items to \" + collection._name)\n          return false\n    if value > 0\n      ReactionCore.Events.info (\"Success adding \" + value + \" items to \" + collection._name)\n      return\n    else\n      ReactionCore.Events.info (\"No data imported to \" + collection._name)\n      return\n\n  loadI18n: (collection) ->\n    return if collection.find().count() > 0\n    languages = [\"ar\",\"cn\",\"cs\",\"de\",\"en\",\"es\",\"fr\",\"he\",\"it\",\"my\",\"pl\",\"pt\",\"ru\",\"sl\",\"sv\",\"vi\"]\n    ReactionCore.Events.info \"Loading fixture data for languages to \" + collection._name\n    for language in languages\n      json = EJSON.parse Assets.getText(\"private/data/i18n/\"+language+\".json\")\n      for item,value in json\n        collection._collection.insert item, (error, result) ->\n          if error\n            ReactionCore.Events.info (error + \"Error adding \" + language + \" items to \" + collection._name)\n            return\n        ReactionCore.Events.info (\"Success adding \"+ language + \" to \" + collection._name)\n\n# instantiate fixtures\n@Fixtures = new PackageFixture\n\n# helper for creating admin users\ngetDomain = (url) ->\n  unless url then url = process.env.ROOT_URL\n  domain = url.match(/^https?\\:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1]\n  return domain\n\n###\n# Three methods to create users default (empty db) admin user\n###\ncreateDefaultAdminUser = ->\n  # options from set env variables\n  options = {}\n  options.email = process.env.METEOR_EMAIL #set in env if we want to supply email\n  options.username = process.env.METEOR_USER\n  options.password = process.env.METEOR_AUTH\n  domain = getDomain()\n\n  # options from mixing known set ENV production variables\n  if process.env.METEOR_EMAIL\n    url = process.env.MONGO_URL #pull from default db connect string\n    options.username = \"Administrator\"\n    unless options.password then options.password = url.substring(url.indexOf(\"/\") + 2,url.indexOf(\"@\")).split(\":\")[1]\n    ReactionCore.Events.warn (\"\\nIMPORTANT! DEFAULT USER INFO (ENV)\\n  EMAIL/LOGIN: \" + options.email + \"\\n  PASSWORD: \" + options.password + \"\\n\")\n  else\n    # random options if nothing has been set\n    options.username = Meteor.settings?.reaction?.METEOR_USER || \"Administrator\"\n    options.password = Meteor.settings?.reaction?.METEOR_AUTH || Random.secret(8)\n    options.email = Meteor.settings?.reaction?.METEOR_EMAIL || Random.id(8).toLowerCase() + \"@\" + domain\n    ReactionCore.Events.warn (\"\\nIMPORTANT! DEFAULT USER INFO (RANDOM)\\n  EMAIL/LOGIN: \" + options.email + \"\\n  PASSWORD: \" + options.password + \"\\n\")\n\n  accountId = Accounts.createUser options\n  Roles.addUsersToRoles accountId, ['manage-users','owner','admin']\n  shopId = Shops.findOne()._id\n  Shops.update shopId,\n    $set:\n      ownerId: accountId\n      email: options.email\n    $push:\n      members:\n        isAdmin: true\n        userId: accountId\n        permissions: [\n            \"dashboard/customers\",\n            \"dashboard/products\",\n            \"dashboard/settings\",\n            \"dashboard/settings/account\",\n            \"dashboard/orders\"\n            ]\n\n###\n# load core fixture data\n###\nloadFixtures = ->\n  # Load data from json files\n  Fixtures.loadData ReactionCore.Collections.Products\n  Fixtures.loadData ReactionCore.Collections.Shops\n  Fixtures.loadData ReactionCore.Collections.Tags\n  Fixtures.loadI18n ReactionCore.Collections.Translations\n\n  # Load data from settings/json files\n  unless Accounts.loginServiceConfiguration.find().count()\n    if Meteor.settings.public?.facebook?.appId\n      Accounts.loginServiceConfiguration.insert\n        service: \"facebook\",\n        appId: Meteor.settings.public.facebook.appId,\n        secret: Meteor.settings.facebook.secret\n\n  # Loop through ReactionCore.Packages object, which now has all packages added by\n  # calls to register\n  # removes package when removed from meteor, retriggers when package added\n  unless ReactionCore.Collections.Packages.find().count() is Object.keys(ReactionCore.Packages).length\n    _.each ReactionCore.Packages, (config, pkgName) ->\n      Shops.find().forEach (shop) ->\n        ReactionCore.Events.info \"Initializing \"+ pkgName\n        ReactionCore.Collections.Packages.upsert {shopId: shop._id, name: pkgName},\n          $setOnInsert:\n            enabled: !!config.autoEnable\n            settings: config.defaultSettings\n            registry: config\n    # remove unused packages\n    Shops.find().forEach (shop) ->\n      ReactionCore.Collections.Packages.find().forEach (pkg) ->\n        unless _.has(ReactionCore.Packages, pkg.name)\n          ReactionCore.Events.info (\"Removing \"+ pkg.name)\n          ReactionCore.Collections.Packages.remove {shopId: shop._id, name: pkg.name}\n\n  # create default admin user account\n  createDefaultAdminUser() unless Meteor.users.find().count()\n\n###\n# Execute start up fixtures\n###\nMeteor.startup ->\n  loadFixtures()\n  # data conversion:  if ROOT_URL changes update shop domain\n  # for now, we're assuming the first domain is the primary\n  currentDomain = Shops.findOne().domains[0]\n  if currentDomain isnt getDomain()\n    ReactionCore.Events.info \"Updating domain to \" + getDomain()\n    Shops.update({domains:currentDomain},{$set:{\"domains.$\":getDomain()}})\n\n  # data conversion: we now set sessionId or userId, but not both\n  Cart.update {userId: { $exists : true, $ne : null }, sessionId: { $exists : true }}, {$unset: {sessionId: \"\"}}, {multi: true}\n\n  # notifiy that we're done with initialization\n  ReactionCore.Events.info \"Reaction Commerce initialization finished. \"\n","Factory.define 'shop', ReactionCore.Collections.Shops,\n  name: -> Fake.sentence 2\n  description: -> Fake.paragraph 20\n  keywords: -> Fake.sentence 20\n  addressBook: -> [\n    fullName: Fake.sentence 2\n    address1: Fake.sentence 2\n    address2: Fake.sentence 2\n    city: Fake.word()\n    company: Fake.word()\n    phone: \"Phone\"\n    region: Fake.word()\n    postal: _.random 10000, 100000\n    country: \"USA\"\n    isCommercial: false\n    isDefault: true\n    metafields: undefined\n  ]\n  domains: [\"localhost\"]\n  email: 'root@localhost'\n  currency: \"USD\"\n  currencyEngine: undefined\n  currencies: []\n  public: true\n  timezone: '1'\n  baseUOM: \"OZ\"\n  ownerId: '1'\n  members: []\n  metafields: []\n  useCustomEmailSettings: false\n  customEmailSettings:\n    username: ''\n    password: ''\n    host: ''\n    port: 25\n  createdAt: -> new Date()\n  updatedAt: -> new Date()\n\n\nFactory.define 'product', ReactionCore.Collections.Products,\n  shopId: Factory.get 'shop'\n  title: Fake.word\n  pageTitle: -> Fake.sentence 5\n  description: -> Fake.paragraph 20\n  productType: -> Fake.sentence 2\n  vendor: ''\n#   metafields:\n  variants: -> [\n    # TODO: can not do Factory.get 'productVariants' due to RangeError: Maximum call stack size exceeded\n    _id: 1\n    compareAtPrice: _.random 0, 1000\n    weight: _.random 0, 10\n    inventoryManagement: false\n    inventoryPolicy: false\n    lowInventoryWarningThreshold: 1\n    price: _.random 10, 1000\n    title: Fake.word()\n    optionTitle: Fake.word()\n    createdAt: new Date\n    updatedAt: new Date\n  ]\n  requiresShipping: true\n#   parcel:\n  hashtags: []\n#   twitterMsg:\n#   facebookMsg:\n#   instagramMsg:\n#   pinterestMsg:\n#   metaDescription:\n#   handle:\n  isVisible: true\n  publishedAt: -> new Date\n#   publishedScope:\n#   templateSuffix:\n  createdAt: -> new Date\n  updatedAt: -> new Date\n\n\nFactory.define 'productVariants', new Meteor.Collection('ProductVariants'),\n#  parentId: 1\n#  cloneId:\n#  index:\n#  barcode:\n  compareAtPrice: -> _.random 0, 1000\n#  fulfillmentService:\n  weight: -> _.random 0, 1000\n  inventoryManagement: false\n  inventoryPolicy: false\n  lowInventoryWarningThreshold: 1\n  inventoryQuantity: -> _.random 0, 100\n  price: -> _.random 10, 1000\n#  sku:\n#  taxable:\n  title: Fake.word\n  optionTitle: Fake.word\n#  metafields:\n#  positions:\n  createdAt: -> new Date\n  updatedAt: -> new Date\n  minimumOrderQty: -> _.random 0, 1000\n\n\nFactory.define 'tag', ReactionCore.Collections.Tags,\n  name: Fake.word\n  slug: Fake.word\n  position: -> _.random 0, 100000\n#  relatedTagIds: []\n  isTopLevel: true\n  shopId: Factory.get 'shop'\n  createdAt: -> new Date\n  updatedAt: -> new Date\n","Packages = ReactionCore.Collections.Packages\n\nMeteor.methods\n  ###\n  # determine user's countryCode and return locale object\n  ###\n  getLocale: ->\n    @unblock() #prevent waiting for locale\n    result = {}\n    ip = this.connection.httpHeaders['x-forwarded-for']\n\n    try\n      geo = new GeoCoder(geocoderProvider: \"freegeoip\")\n      countryCode = geo.geocode(ip)[0].countryCode.toUpperCase()\n\n    shop = ReactionCore.Collections.Shops.findOne ReactionCore.getShopId()\n\n    unless shop\n      return result\n\n    # local development always returns 'RD' so we default to 'US'\n    # unless shop address has been defined\n    if !countryCode or countryCode is 'RD'\n      if shop.addressBook\n        countryCode = shop.addressBook[0].country\n      else\n        countryCode = 'US'\n\n    try\n      result.locale = shop.locales.countries[countryCode]\n      result.currency = {}\n      # get currency formats for locale, default if none\n      # comma string/list can be used, but for now we're only using one result\n      localeCurrency = shop.locales.countries[countryCode].currency.split(',')\n      for currency in localeCurrency\n        if shop.currencies[currency]\n          result.currency = shop.currencies[currency]\n          if shop.currency isnt currency\n            #TODO Add some alternate configurable services like Open Exchange Rate\n            rateUrl = \"http://rate-exchange.herokuapp.com/fetchRate?from=\" + shop.currency + \"&to=\" + currency\n            exchangeRate = HTTP.get rateUrl\n            result.currency.exchangeRate = exchangeRate.data\n          return result #returning first match.\n\n    return result\n\n  ###\n  # determine user's full location for autopopulating addresses\n  ###\n  locateAddress: (latitude, longitude) ->\n    check latitude, Match.Optional(Number)\n    check longitude, Match.Optional(Number)\n\n    try\n      if latitude? and longitude?\n        geo = new GeoCoder()\n        address = geo.reverse latitude, longitude\n      else\n        ip = this.connection.httpHeaders['x-forwarded-for']\n        if ip\n          geo = new GeoCoder(geocoderProvider: \"freegeoip\")\n          address = geo.geocode ip\n    catch error\n      # something went wrong; we'll use the default location and\n      # log the error on the server\n      if latitude? and longitude?\n        ReactionCore.Events.info \"Error in locateAddress for latitude/longitude lookup (\" + latitude + \",\" + longitude + \"):\" + error.message\n      else\n        ReactionCore.Events.info \"Error in locateAddress for IP lookup (\" + ip + \"):\" + error.message\n\n    if address?.length\n      return address[0]\n    else # default location if nothing found is US\n      return {\n        latitude: null\n        longitude: null\n        country: \"United States\"\n        city: null\n        state: null\n        stateCode: null\n        zipcode: null\n        streetName: null\n        streetNumber: null\n        countryCode: \"US\"\n      }\n\n  ###\n  # method to insert or update tag with hierarchy\n  # tagName will insert\n  # tagName + tagId will update existing\n  # currentTagId will update related/hierarchy\n  ###\n  updateHeaderTags: (tagName, tagId, currentTagId) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    newTag =\n      slug: getSlug tagName\n      name: tagName\n\n    #new tags\n    if tagId #just an update\n      Tags.update tagId, {$set:newTag}\n      ReactionCore.Events.info \"Changed name of tag \" + tagId + \" to \" + tagName\n    else # create a new tag\n      #prevent duplicate tags by checking for existing\n      existingTag = Tags.findOne \"name\":tagName\n      #if a tag already exists with that name\n      if existingTag\n        if currentTagId\n          Tags.update currentTagId, {$addToSet: {\"relatedTagIds\": existingTag._id}}\n          ReactionCore.Events.info 'Added tag \"' + existingTag.name + '\" to the related tags list for tag ' + currentTagId\n        else\n          Tags.update existingTag._id, {$set:{\"isTopLevel\":true}}\n          ReactionCore.Events.info 'Marked tag \"' + existingTag.name + '\" as a top level tag'\n      #if a tag with that name does not exist yet\n      else\n        newTag.isTopLevel = !currentTagId\n        newTag.shopId = ReactionCore.getShopId()\n        newTag.updatedAt = new Date()\n        newTag.createdAt = new Date()\n        newTagId = Tags.insert newTag\n        ReactionCore.Events.info 'Created tag \"' + newTag.name + '\"'\n        if currentTagId\n          Tags.update currentTagId, {$addToSet: {\"relatedTagIds\": newTagId}}\n          ReactionCore.Events.info 'Added tag \"' + newTag.name + '\" to the related tags list for tag ' + currentTagId\n    return;\n\n  removeHeaderTag: (tagId, currentTagId) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    if currentTagId\n      Tags.update(currentTagId, {$pull: {\"relatedTagIds\": tagId}})\n    # if not in use delete from system\n    productCount = Products.find({\"hashtags\":{$in:[tagId]}}).count()\n    relatedTagsCount = Tags.find({\"relatedTagIds\":{$in:[tagId]}}).count()\n\n    if (productCount is 0) and (relatedTagsCount is 0)\n      return Tags.remove(tagId)\n\n  ###\n  # Helper method to remove all translations, and reload from jsonFiles\n  ###\n  flushTranslations: ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    ReactionCore.Collections.Translations.remove({})\n    Fixtures.loadI18n ReactionCore.Collections.Translations\n    ReactionCore.Events.info Meteor.userId() + \" Flushed Translations.\"\n\n\n  ## possible dead method, commenting out pending further review\n\n  # updatePackage: (updateDoc, packageName) ->\n  #   packageId = Packages.findOne({ name: packageName })._id\n\n  #   return false unless packageId\n\n  #   try\n  #     result = Packages.update {_id: packageId}, updateDoc\n  #   catch\n  #     result = false\n  #   return !!result # returns true if updated, false if package doesn't exist or error\n","Meteor.methods\n  ###\n  # when we add an item to the cart, we want to break all relationships\n  # with the existing item. We want to fix price, qty, etc into history\n  # however, we could check reactively for price /qty etc, adjustments on\n  # the original and notify them\n  ###\n  addToCart: (cartSession, productId, variantData, quantity) ->\n    # createCart will create for session if necessary, update user if necessary,\n    # sync all user's carts, and return the cart\n    console.log(variantData)\n    shopId = ReactionCore.getShopId(@)\n    currentCart = createCart cartSession.sessionId, @userId, shopId\n\n    return false unless currentCart\n\n    cartVariantExists = Cart.findOne _id: currentCart._id, \"items.variants._id\": variantData._id\n    if cartVariantExists\n      Cart.update\n        _id: currentCart._id,\n        \"items.variants._id\": variantData._id,\n        { $set: {updatedAt: new Date()}, $inc: {\"items.$.quantity\": quantity}},\n      (error, result) ->\n        ReactionCore.Events.info \"error adding to cart\" if error\n        ReactionCore.Events.info Cart.simpleSchema().namedContext().invalidKeys() if error\n    # add new cart items\n    else\n      Cart.update _id: currentCart._id,\n        $addToSet:\n          items:\n            _id: Random.id()\n            productId: productId\n            quantity: quantity\n            variants: variantData\n      , (error, result) ->\n        ReactionCore.Events.info \"error adding to cart\" if error\n        ReactionCore.Events.warn error if error\n\n  ###\n  # removes a variant from the cart\n  ###\n  removeFromCart: (sessionId, cartId, variantData) ->\n    # We select on sessionId or userId, too, for security\n    return Cart.update\n      _id: cartId\n      $or: [\n        {userId: @userId}\n        {sessionId: sessionId}\n      ]\n    , {$pull: {\"items\": {\"variants\": variantData} } }\n\n  ###\n  # add payment method\n  ###\n  paymentMethod: (sessionId, cartId, paymentMethod) ->\n    # We select on sessionId or userId, too, for security\n    return Cart.update\n      _id: cartId\n      $or: [\n        {userId: @userId}\n        {sessionId: sessionId}\n      ]\n    , {$addToSet:{\"payment.paymentMethod\":paymentMethod}}\n\n  ###\n  # adjust inventory when an order is placed\n  ###\n  inventoryAdjust: (orderId) ->\n    order = Orders.findOne orderId\n    return false unless order\n    for product in order.items\n      Products.update {_id: product.productId, \"variants._id\": product.variants._id}, {$inc: {\"variants.$.inventoryQuantity\": -product.quantity }}\n    return\n\n  ###\n  # when a payment is processed we want to copy the cart\n  # over to an order object, and give the user a new empty\n  # cart. reusing the cart schema makes sense, but integrity of\n  # the order, we don't want to just make another cart item\n  ###\n  copyCartToOrder: (cart) ->\n    currentUserId = Meteor.userId()\n    # Check userId & sessionId against current\n    return false if cart.shopId isnt ReactionCore.getShopId(@) or cart.userId isnt currentUserId\n    #Retrieving cart twice (once on call)to ensure accurate clone from db\n    currentCartId = cart._id\n    # cart = Cart.findOne(cartId)\n    now = new Date()\n    cart.createdAt = now\n    cart.updatedAt = now\n    cart._id = Random.id()\n    cart.state = \"orderCreated\"\n    cart.status = \"new\"\n\n    try\n      Orders.insert cart\n    catch error\n      ReactionCore.Events.info \"error in order insert\"\n      ReactionCore.Events.warn error, Orders.simpleSchema().namedContext().invalidKeys()\n\n    Cart.remove userId: currentUserId\n    return cart._id #new order id\n\n  ###\n  # method to add new addresses to a user's profile\n  ###\n  addressBookAdd: (doc) ->\n    check(doc, ReactionCore.Schemas.Address)\n    @unblock()\n    currentUserId = Meteor.userId()\n    if doc.isDefault\n      Meteor.users.update\n        _id: currentUserId\n        \"profile.addressBook.isDefault\": true\n      ,\n        $set:\n          \"profile.addressBook.$.isDefault\": false\n    # Add new address\n    doc._id = Random.id()\n\n    return Meteor.users.update _id: currentUserId, {$addToSet: {\"profile.addressBook\": doc}}\n\n  ###\n  #method to update existing address in user's profile\n  ###\n  addressBookUpdate: (doc) ->\n    check(doc, ReactionCore.Schemas.Address)\n    @unblock()\n    currentUserId = Meteor.userId()\n    #reset existing default\n    if doc.isDefault\n      Meteor.users.update\n        _id: currentUserId\n        \"profile.addressBook.isDefault\": true\n      ,\n        $set:\n          \"profile.addressBook.$.isDefault\": false\n    # update existing address\n    Meteor.users.update\n      _id: currentUserId\n      \"profile.addressBook._id\": doc._id\n    ,\n      $set:\n        \"profile.addressBook.$\": doc\n\n###\n# create a cart\n# create for session if necessary, update user if necessary,\n# sync all user's carts, and return the cart\n#\n# * There should be one cart for each independent, non logged in user session\n# * When a user logs in that cart now belongs to that user\n# * If they are logged in on more than one devices, regardless of session, that cart will be used\n# * If they had more than one cart, on more than one device, and login at seperate times it should merge the carts\n###\n@createCart = (sessionId, userId, shopId) ->\n  try\n    # Is there a cart for this session?\n    sessionCart = Cart.findOne(sessionId: sessionId, shopId: shopId)\n\n    # Is there a logged in user?\n    if userId?\n\n      # Do we have an existing user cart?\n      userCart = Cart.findOne(userId: userId, shopId: shopId)\n\n      # If there is a cart for this session because we just logged in\n      if sessionCart?\n        # If we also have a user cart\n        if userCart?\n          # Then merge the session cart into the existing user cart\n          # TODO: Might need to merge other values, figure out proper state, etc?\n          Cart.update userCart._id,\n            $addToSet:\n              items:\n                $each: sessionCart.items || []\n          # And then remove the session cart\n          Cart.remove(_id: sessionCart._id)\n          # And return the user cart\n          result = Cart.findOne(_id: userCart._id)\n          ReactionCore.Events.info \"Merged session cart\", sessionCart._id, \"into user cart\", userCart._id\n        # But if we don't already have a user cart\n        else\n          # Then we convert the session cart to a user cart\n          Cart.update sessionCart._id, {$set: {userId: userId}, $unset: {sessionId: \"\"}}\n          # And then return this cart\n          result = Cart.findOne(_id: sessionCart._id)\n          ReactionCore.Events.info \"Converted cart\", sessionCart._id, \"from session cart to user cart\"\n\n      # If there was not a session cart and we are logged in\n      else\n        # We return the existing user cart if there is one\n        if userCart?\n          result = userCart\n          ReactionCore.Events.info \"Using existing user cart\", userCart._id\n        # Or we create a new user cart\n        else\n          newCartId = Cart.insert(userId: userId, shopId: shopId)\n          # And return that\n          result = Cart.findOne(_id: newCartId)\n          ReactionCore.Events.info \"Created new user cart\", newCartId\n\n    # If we don't have a logged in user\n    else\n      # Return the session cart if we already have one\n      if sessionCart?\n        result = sessionCart\n        ReactionCore.Events.info \"Using existing session cart\", sessionCart._id\n      # Otherwise create one\n      else\n        newCartId = Cart.insert {sessionId: sessionId, shopId: shopId}\n        # And then return that\n        result = Cart.findOne(_id: newCartId)\n        ReactionCore.Events.info \"Created new session cart\", newCartId\n\n  catch error\n    ReactionCore.Events.info \"createCart error: \", error\n\n  # Finally, we return the correct cart for convenience\n  return result","###\n# methods typically used for checkout (shipping, taxes, etc)\n###\nMeteor.methods\n  ###\n  # gets shipping rates and updates the users cart methods\n  ###\n  updateCartShippingRates: (cartSession) ->\n    # unless check cartSession, ReactionCore.Schemas.Cart\n    unless cartSession\n      ReactionCore.Events.info \"no cart passed to update rates, return null.\"\n      return null\n    if cartSession.shipping?.address and cartSession.shipping?.shipmentMethods then return\n\n    cart = Cart.findOne(cartSession._id)\n    rates = Meteor.call \"getShippingRates\"\n    #TODO:\n    # Apply rate filters here\n\n    # update users cart\n    if rates.length > 0\n      Cart.update(cartSession._id, { $set: {'shipping.shipmentMethods': rates}})\n\n    # return in the rates object\n    ReactionCore.Events.debug rates\n    return rates\n\n  ###\n  #  just gets rates, without updating anything\n  ###\n  getShippingRates: (cartSession) ->\n    # check cartSession, ReactionCore.Schemas.Cart\n    rates = []\n    shipping = ReactionCore.Collections.Shipping.find({'shopId': ReactionCore.getShopId()})\n    # flat rate / table shipping rates\n    shipping.forEach (shipping) ->\n      ## get all enabled rates\n      for method, index in shipping.methods when method.enabled is true\n        unless method.rate then method.rate = 0 #\n        unless method.handling then method.handling = 0\n        # rules\n\n        # rate is shipping and handling\n        rate = method.rate+method.handling\n        rates.push carrier: shipping.provider.label, method: method, rate: rate\n\n    # TODO:\n    # wire in external shipping methods here, add to rates\n\n    # return in the rates object\n    ReactionCore.Events.info \"getShippingrates returning rates\"\n    return rates","Meteor.methods\n  ###\n  # Adds tracking information to order\n  # Call after any tracking code is generated\n  ###\n  addTracking: (orderId, tracking, variantId) ->\n    check orderId, String #at least make sure it's an ID and not a sneaky selector\n    return Orders.update(orderId, {$set: {\"shipping.shipmentMethod.tracking\":tracking}})\n\n  ###\n  # Save supplied order workflow state\n  ###\n  updateWorkflow: (orderId, currentState) ->\n    check orderId, String #at least make sure it's an ID and not a sneaky selector\n    Orders.update(orderId, {$set: {\"state\":currentState}})\n    return Meteor.call \"updateHistory\", orderId, currentState\n\n  ###\n  # Add files/documents to order\n  # use for packing slips, labels, customs docs, etc\n  ###\n  updateDocuments: (orderId, docId, docType) ->\n    check orderId, String #at least make sure it's an ID and not a sneaky selector\n    return Orders.update orderId,\n      $addToSet:\n        \"documents\":\n          docId: docId\n          docType: docType\n  ###\n  # Add to order event history\n  ###\n  updateHistory: (orderId, event, value) ->\n    check orderId, String #at least make sure it's an ID and not a sneaky selector\n    return Orders.update orderId,\n      $addToSet:\n        \"history\":\n          event: event\n          value: value\n          userId: Meteor.userId()\n          updatedAt: new Date()\n\n  ###\n  # Finalize any payment where mode is \"authorize\"\n  # and status is \"approved\", reprocess as \"capture\"\n  ###\n  processPayments: (orderId) ->\n    check orderId, String #at least make sure it's an ID and not a sneaky selector\n    order = Orders.findOne(orderId)\n    for paymentMethod,index in order.payment.paymentMethod\n      if paymentMethod.mode is 'authorize' and paymentMethod.status is 'approved'\n        Meteor[paymentMethod.processor].capture paymentMethod.transactionId, paymentMethod.amount, (error,result) ->\n          if result.capture?\n            transactionId = paymentMethod.transactionId\n            Orders.update { \"_id\": orderId, \"payment.paymentMethod.transactionId\": transactionId},\n              $set: {\n                \"payment.paymentMethod.$.transactionId\": result.capture.id\n                \"payment.paymentMethod.$.mode\": \"capture\"\n                \"payment.paymentMethod.$.status\": \"completed\"\n              }\n          return\n    return\n","Media = ReactionCore.Collections.Media\n\nMeteor.methods\n  ###\n  # the cloneVariant method copies variants, but will also create and clone child variants (options)\n  # productId,variantId to clone\n  # add parentId to create children\n  ###\n  cloneVariant: (productId, variantId, parentId) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    product = Products.findOne(productId)\n    variant = (variant for variant in product.variants when variant._id is variantId)\n    return false unless variant.length > 0\n\n    clone = variant[0]\n    clone._id = Random.id()\n\n    if parentId\n      ReactionCore.Events.debug \"create child clone\"\n      clone.parentId = variantId\n      delete clone.inventoryQuantity\n      Products.update({_id:productId}, {$push: {variants: clone}}, {validate: false})\n      return clone._id\n\n    #clean clone\n    clone.cloneId = productId\n    delete clone.updatedAt\n    delete clone.createdAt\n    delete clone.inventoryQuantity\n    delete clone.title\n    Products.update({_id:productId}, {$push: {variants: clone}}, {validate: false})\n\n    #make child clones\n    children = (variant for variant in product.variants when variant.parentId is variantId)\n    if children.length > 0\n      ReactionCore.Events.debug \"clone children\"\n      for childClone in children\n        childClone._id = Random.id()\n        childClone.parentId = clone._id\n        Products.update({_id:productId}, {$push: {variants: childClone}}, {validate: false})\n\n    return clone._id\n\n  ###\n  # initializes empty variant template (all others are clones)\n  # should only be seen when all variants have been deleted from a product.\n  ###\n  createVariant: (productId, newVariant) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    newVariantId = Random.id()\n    if newVariant\n      newVariant._id = newVariantId\n      check(newVariant, ReactionCore.Schemas.ProductVariant)\n    else\n      newVariant = { \"_id\": newVariantId, \"title\": \"\", \"price\": \"0.00\" }\n    Products.update({\"_id\": productId}, {$addToSet: {\"variants\": newVariant}}, {validate: false})\n    return newVariantId\n\n  ###\n  # update individual variant with new values, merges into original\n  # only need to supply updated information\n  ###\n  updateVariant: (variant) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    product = Products.findOne \"variants._id\":variant._id\n    if product?.variants\n      for variants,value in product.variants\n        if variants._id is variant._id\n          newVariant = _.extend variants,variant\n      Products.update({\"_id\":product._id,\"variants._id\":variant._id}, {$set: {\"variants.$\": newVariant}}, {validate: false})\n\n\n  ###\n  # update whole variants array\n  ###\n  updateVariants: (variants) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    product = Products.findOne \"variants._id\":variants[0]._id\n    Products.update product._id, $set: variants: variants, {validate: false}\n\n\n  ###\n  # clone a whole product, defaulting visibility, etc\n  # in the future we are going to do an inheritance product\n  # that maintains relationships with the cloned\n  # product tree\n  ###\n  cloneProduct: (product) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    #TODO: Really should be a recursive update of all _id\n    i = 0\n    handleCount = Products.find({\"cloneId\": product._id}).count() + 1\n\n    #clean the product and give it a new ID and title\n    product.cloneId = product._id\n    product._id = Random.id()\n    delete product.updatedAt\n    delete product.createdAt\n    delete product.publishedAt\n    delete product.handle\n    product.isVisible = false\n    if product.title then product.title = product.title + handleCount\n\n    #make new random IDs for all variants and maintain parent/child relationship\n    while i < product.variants.length\n      newVariantId = Random.id()\n      oldVariantId = product.variants[i]._id\n      product.variants[i]._id = newVariantId\n      #clone images for each variant\n      Media.find({'metadata.variantId': oldVariantId}).forEach (fileObj) ->\n        newFile = fileObj.copy()\n        newFile.update({$set: {'metadata.productId': product._id, 'metadata.variantId': newVariantId}})\n      #update any child variants with the newly assigned ID\n      unless product.variants[i].parentId\n        while i < product.variants.length\n          if product.variants[i].parentId == oldVariantId\n            product.variants[i].parentId = newVariantId\n          i++\n      i++\n\n    #create the cloned product\n    return Products.insert(product, {validate: false})\n\n  ###\n  # delete variant, which should also delete child variants\n  ###\n  deleteVariant: (variantId) ->\n    check variantId, String\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    #what will we be deleteing?\n    deleted = Products.find({$or: [{\"variants.parentId\": variantId}, {\"variants._id\": variantId}]}).fetch()\n    #delete variants with this variant as parent\n    Products.update {\"variants.parentId\": variantId}, {$pull: 'variants': {'parentId': variantId}}\n    #delete this variant\n    Products.update {\"variants._id\": variantId}, {$pull: 'variants': {'_id': variantId}}\n    # unlink media\n    _.each deleted, (product) ->\n      _.each product.variants, (variant) ->\n        if variant.parentId is variantId or variant._id is variantId\n          Media.update 'metadata.variantId': variant._id,\n            $unset:\n              'metadata.productId': \"\"\n              'metadata.variantId': \"\"\n              'metadata.priority': \"\"\n          , multi: true\n    return true\n\n  ###\n  # when we create a new product, we create it with\n  # an empty variant. all products have a variant\n  # with pricing and details\n  ###\n  createProduct: () ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    Products.insert\n      _id: Random.id()\n      title: \"\"\n      variants: [\n        _id: Random.id()\n        title: \"\"\n        price: 0.00\n      ]\n    , validate: false\n\n  ###\n  # delete a product and unlink it from all media\n  ###\n  deleteProduct: (id) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    numRemoved = Products.remove id\n    if numRemoved > 0\n      # unlink media\n      Media.update 'metadata.productId': id,\n        $unset:\n          'metadata.productId': \"\"\n          'metadata.variantId': \"\"\n          'metadata.priority': \"\"\n      , multi: true\n      return true\n    else\n      return false\n\n  ###\n  # update single product field\n  ###\n  updateProductField: (productId, field, value) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    # value = Spacebars.SafeString(value)\n    value  = EJSON.stringify value\n    update = EJSON.parse \"{\\\"\" + field + \"\\\":\" + value + \"}\"\n    return Products.update productId, $set: update\n\n  ###\n  # method to insert or update tag with hierachy\n  # tagName will insert\n  # tagName + tagId will update existing\n  ###\n  updateProductTags: (productId, tagName, tagId, currentTagId) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    newTag =\n      slug: getSlug tagName\n      name: tagName\n\n    existingTag = Tags.findOne({\"name\": tagName})\n\n    if existingTag\n      productCount = Products.find({\"_id\": productId, \"hashtags\": {$in:[existingTag._id]}}).count()\n      return false if productCount > 0\n      Products.update(productId, {$push: {\"hashtags\": existingTag._id}})\n    else if tagId\n      Tags.update tagId, {$set: newTag}\n    else # create a new tag\n      # newTag.isTopLevel = !currentTagId\n      newTag.isTopLevel = false\n      newTag.shopId = ReactionCore.getShopId()\n      newTag.updatedAt = new Date()\n      newTag.createdAt = new Date()\n      newTag._id = Tags.insert(newTag)\n      Products.update(productId, {$push: {\"hashtags\": newTag._id}})\n    return\n\n  ###\n  # remove product tag\n  ###\n  removeProductTag: (productId, tagId) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    Products.update(productId, {$pull: {\"hashtags\": tagId}})\n    # if not in use delete from system\n    productCount = Products.find({\"hashtags\": {$in: [tagId]}}).count()\n    relatedTagsCount = Tags.find({\"relatedTagIds\": {$in: [tagId]}}).count()\n\n    if (productCount is 0) and (relatedTagsCount is 0)\n      Tags.remove(tagId)\n\n\n  ###\n  # set or toggle product handle\n  ###\n  setHandleTag: (productId, tagId) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    product = Products.findOne(productId)\n    tag = Tags.findOne(tagId)\n    #if is already assigned, unset (toggle off)\n    if productId.handle is tag.slug\n      Products.update(product._id, {$unset: {\"handle\": \"\"}})\n      return product._id\n    else\n      existingHandles = Products.find({handle: tag.slug}).fetch()\n      #reset any existing handle to product id\n      for currentProduct in existingHandles\n        Products.update(currentProduct._id, {$unset: {\"handle\": \"\"}})\n      #update handle to tag.slug (lowercase tag)\n      Products.update(product._id, {$set: {\"handle\": tag.slug}})\n      return tag.slug\n\n  ###\n  # update product grid positions\n  # position is an object with tag,position,dimensions\n  ###\n  updateProductPosition: (productId, positionData) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    unless Products.findOne({'_id' : productId,\"positions.tag\": positionData.tag})\n      Products.update {_id: productId},\n        {$addToSet: { positions: positionData },$set: {updatedAt: new Date() } },\n      , (error,results) ->\n        ReactionCore.Events.warn error if error\n    else\n      #Collection2 doesn't support elemMatch, use core collection\n      Products.update\n        \"_id\": productId\n        \"positions.tag\": positionData.tag\n        ,\n          $set:\n            \"positions.$.position\": positionData.position\n            \"positions.$.updatedAt\": new Date()\n        ,\n          (error,results) ->\n            ReactionCore.Events.warn error if error\n\n  updateMetaFields: (productId, updatedMeta, meta) ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    if meta\n      Products.update({\"_id\": productId, \"metafields\": meta}, {$set: {\"metafields.$\": updatedMeta} })\n    else\n      Products.update( \"_id\": productId, { \"$addToSet\": { \"metafields\": updatedMeta } })\n","###\n# add social image to user profile upon registration\n###\nAccounts.onCreateUser (options, user) ->\n  user.profile = options.profile || {}\n  if user.services.facebook\n    options.profile.picture = \"http://graph.facebook.com/\" + user.services.facebook.id + \"/picture/?type=small\"\n  user\n\n###\n# setting defaults of mail from shop configuration\n###\nsetMailUrlForShop = (shop) ->\n  mailgun = ReactionCore.Collections.Packages.findOne({shopId:shop._id, name:'reaction-mailgun'})\n  sCES = null\n  if mailgun and mailgun.settings\n    sCES = mailgun.settings\n  else\n    if shop.useCustomEmailSettings\n      sCES = shop.customEmailSettings\n\n  if sCES\n      process.env.MAIL_URL = \"smtp://\" + sCES.username + \":\" + sCES.password + \"@\" + sCES.host + \":\" + sCES.port + \"/\"\n\nMeteor.methods\n  ###\n  # this method is to invite new admin users\n  # (not consumers) to secure access in the dashboard\n  # to permissions as specified in packages/roles\n  ###\n  inviteShopMember: (shopId, email, name) ->\n    shop = Shops.findOne shopId\n    if shop and email and name\n      if ReactionCore.hasOwnerAccess(shop)\n        currentUserName = Meteor.user().profile.name\n        user = Meteor.users.findOne {\"emails.address\": email}\n        unless user # user does not exist, invite him\n          userId = Accounts.createUser\n            email: email\n            profile:\n              name: name\n          user = Meteor.users.findOne(userId)\n          unless user\n            throw new Error(\"Can't find user\")\n          token = Random.id()\n          Meteor.users.update userId,\n            $set:\n              \"services.password.reset\":\n                token: token\n                email: email\n                when: new Date()\n\n          setMailUrlForShop(shop)\n          Email.send\n            to: email\n            from: currentUserName + \" <\" + shop.email + \">\"\n            subject: \"[Reaction] You have been invited to join the \" + shop.name + \" staff\"\n            html: Spacebars.templates['shopMemberInvite']\n              homepage: Meteor.absoluteUrl()\n              shop: shop\n              currentUserName: currentUserName\n              invitedUserName: name\n              url: Accounts.urls.enrollAccount(token)\n        else # user exist, send notification\n          setMailUrlForShop(shop)\n          Email.send\n            to: email\n            from: currentUserName + \" <\" + shop.email + \">\"\n            subject: \"[Reaction] You have been invited to join the \" + shop.name + \" staff\"\n            html: Spacebars.templates['shopMemberNotification']\n              homepage: Meteor.absoluteUrl()\n              shop: shop\n              currentUserName: currentUserName\n              invitedUserName: name\n\n        Shops.update shopId, {$addToSet: {members: {userId: user._id, isAdmin: true}}}\n\n  ###\n  # this method sends an email to consumers on sign up\n  ###\n  sendWelcomeEmail: (shop) ->\n    email = Meteor.user().emails[0].address\n    setMailUrlForShop(shop)\n    Email.send\n      to: email\n      from: shop.email\n      subject: \"Welcome to \" + shop.name + \"!\"\n      html: Spacebars.templates['memberWelcomeNotification']\n        homepage: Meteor.absoluteUrl()\n        shop: shop\n"]}