{"version":3,"sources":["reactioncommerce:core/lib/statemachine/state-machine.js","reactioncommerce:core/common/packageGlobals.js","reactioncommerce:core/common/common.coffee","reactioncommerce:core/common/helpers.coffee","reactioncommerce:core/common/routing.coffee","reactioncommerce:core/common/schemas/packages.coffee","reactioncommerce:core/common/schemas/accounts.coffee","reactioncommerce:core/common/schemas/shops.coffee","reactioncommerce:core/common/schemas/shipping.coffee","reactioncommerce:core/common/schemas/products.coffee","reactioncommerce:core/common/schemas/tags.coffee","reactioncommerce:core/common/schemas/cart.coffee","reactioncommerce:core/common/schemas/orders.coffee","reactioncommerce:core/common/schemas/translations.coffee","reactioncommerce:core/common/schemas/taxes.coffee","reactioncommerce:core/common/schemas/discounts.coffee","reactioncommerce:core/common/collections/collections.coffee","reactioncommerce:core/common/collections/collectionFS.coffee","reactioncommerce:core/common/hooks/hooks.coffee","reactioncommerce:core/server/app.coffee","reactioncommerce:core/server/register.coffee","reactioncommerce:core/server/security.coffee","reactioncommerce:core/server/publications.coffee","reactioncommerce:core/server/fixtures.coffee","reactioncommerce:core/server/factories.coffee","reactioncommerce:core/server/methods/methods.coffee","reactioncommerce:core/server/methods/cart/cart.coffee","reactioncommerce:core/server/methods/cart/shipping.coffee","reactioncommerce:core/server/methods/orders/orders.coffee","reactioncommerce:core/server/methods/products/products.coffee","reactioncommerce:core/server/methods/accounts/accounts.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,E;;AAEA,4F;;AAEA,oE;AACA,8G;;AAEA,E;;AAEA,c;;AAEA,sB;;AAEA,iF;;AAEA,qB;;AAEA,iF;;AAEA,a;AACA,uF;AACA,yF;AACA,yF;AACA,8G;AACA,M;;AAEA,Y;AACA,2G;AACA,2G;AACA,qF;AACA,M;;AAEA,kB;AACA,mB;;AAEA,iF;;AAEA,mC;;AAEA,qM;AACA,sD;AACA,qD;AACA,0C;AACA,6C;AACA,wG;AACA,iG;;AAEA,6B;AACA,gK;AACA,wC;AACA,iD;AACA,4D;AACA,4C;;AAEA,oG;AACA,S;AACA,Q;;AAEA,oB;AACA,mD;AACA,sE;AACA,O;;AAEA,8C;AACA,uB;;AAEA,4B;AACA,qC;AACA,+D;AACA,O;;AAEA,kC;AACA,2C;AACA,qC;AACA,O;;AAEA,+B;AACA,6I;AACA,qK;AACA,qE;AACA,8E;AACA,sE;AACA,sQ;;AAEA,oC;AACA,6B;;AAEA,iB;;AAEA,M;;AAEA,iF;;AAEA,2D;AACA,iB;AACA,a;AACA,gE;AACA,S;AACA,kB;AACA,yJ;AACA,S;AACA,O;AACA,M;;AAEA,oK;AACA,oK;AACA,oK;AACA,oK;AACA,oK;;AAEA,oK;AACA,oK;AACA,oK;AACA,oK;;AAEA,sD;AACA,gF;AACA,8E;AACA,qB;AACA,M;;AAEA,qD;AACA,6D;AACA,6D;AACA,M;;AAEA,qD;AACA,4E;AACA,4E;AACA,sD;AACA,qB;AACA,qF;AACA,kC;AACA,M;;AAEA,qD;AACA,6D;AACA,6D;AACA,M;;AAEA,iF;;AAEA,qC;AACA,yB;;AAEA,iC;AACA,oE;AACA,4F;;AAEA,4B;AACA,0K;;AAEA,8B;AACA,8J;;AAEA,2E;AACA,+C;;AAEA,0B;AACA,8D;AACA,kD;AACA,S;;AAEA,oK;AACA,uB;AACA,sC;AACA,+E;AACA,2B;AACA,8D;AACA,8D;AACA,8D;AACA,+C;AACA,U;AACA,2H;AACA,gC;AACA,6D;AACA,S;;AAEA,wE;AACA,8B;AACA,iC;AAC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","file":"/packages/reactioncommerce_core.js","sourcesContent":["/*\n\n  Javascript State Machine Library - https://github.com/jakesgordon/javascript-state-machine\n\n  Copyright (c) 2012, 2013, 2014, 2015, Jake Gordon and contributors\n  Released under the MIT license - https://github.com/jakesgordon/javascript-state-machine/blob/master/LICENSE\n\n*/\n\n(function () {\n\n  var StateMachine = {\n\n    //---------------------------------------------------------------------------\n\n    VERSION: \"2.3.5\",\n\n    //---------------------------------------------------------------------------\n\n    Result: {\n      SUCCEEDED:    1, // the event transitioned successfully from one state to another\n      NOTRANSITION: 2, // the event was successfull but no state transition was necessary\n      CANCELLED:    3, // the event was cancelled by the caller in a beforeEvent callback\n      PENDING:      4  // the event is asynchronous and the caller is in control of when the transition occurs\n    },\n\n    Error: {\n      INVALID_TRANSITION: 100, // caller tried to fire an event that was innapropriate in the current state\n      PENDING_TRANSITION: 200, // caller tried to fire an event while an async transition was still pending\n      INVALID_CALLBACK:   300 // caller provided callback function threw an exception\n    },\n\n    WILDCARD: '*',\n    ASYNC: 'async',\n\n    //---------------------------------------------------------------------------\n\n    create: function(cfg, target) {\n\n      var initial      = (typeof cfg.initial == 'string') ? { state: cfg.initial } : cfg.initial; // allow for a simple string, or an object with { state: 'foo', event: 'setup', defer: true|false }\n      var terminal     = cfg.terminal || cfg['final'];\n      var fsm          = target || cfg.target  || {};\n      var events       = cfg.events || [];\n      var callbacks    = cfg.callbacks || {};\n      var map          = {}; // track state transitions allowed for an event { event: { from: [ to ] } }\n      var transitions  = {}; // track events allowed from a state            { state: [ event ] }\n\n      var add = function(e) {\n        var from = (e.from instanceof Array) ? e.from : (e.from ? [e.from] : [StateMachine.WILDCARD]); // allow 'wildcard' transition if 'from' is not specified\n        map[e.name] = map[e.name] || {};\n        for (var n = 0 ; n < from.length ; n++) {\n          transitions[from[n]] = transitions[from[n]] || [];\n          transitions[from[n]].push(e.name);\n\n          map[e.name][from[n]] = e.to || from[n]; // allow no-op transition if 'to' is not specified\n        }\n      };\n\n      if (initial) {\n        initial.event = initial.event || 'startup';\n        add({ name: initial.event, from: 'none', to: initial.state });\n      }\n\n      for(var n = 0 ; n < events.length ; n++)\n        add(events[n]);\n\n      for(var name in map) {\n        if (map.hasOwnProperty(name))\n          fsm[name] = StateMachine.buildEvent(name, map[name]);\n      }\n\n      for(var name in callbacks) {\n        if (callbacks.hasOwnProperty(name))\n          fsm[name] = callbacks[name]\n      }\n\n      fsm.current     = 'none';\n      fsm.is          = function(state) { return (state instanceof Array) ? (state.indexOf(this.current) >= 0) : (this.current === state); };\n      fsm.can         = function(event) { return !this.transition && (map[event].hasOwnProperty(this.current) || map[event].hasOwnProperty(StateMachine.WILDCARD)); }\n      fsm.cannot      = function(event) { return !this.can(event); };\n      fsm.transitions = function()      { return transitions[this.current]; };\n      fsm.isFinished  = function()      { return this.is(terminal); };\n      fsm.error       = cfg.error || function(name, from, to, args, error, msg, e) { throw e || msg; }; // default behavior when something unexpected happens is to throw an exception, but caller can override this behavior if desired (see github issue #3 and #17)\n\n      if (initial && !initial.defer)\n        fsm[initial.event]();\n\n      return fsm;\n\n    },\n\n    //===========================================================================\n\n    doCallback: function(fsm, func, name, from, to, args) {\n      if (func) {\n        try {\n          return func.apply(fsm, [name, from, to].concat(args));\n        }\n        catch(e) {\n          return fsm.error(name, from, to, args, StateMachine.Error.INVALID_CALLBACK, \"an exception occurred in a caller-provided callback function\", e);\n        }\n      }\n    },\n\n    beforeAnyEvent:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onbeforeevent'],                       name, from, to, args); },\n    afterAnyEvent:   function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onafterevent'] || fsm['onevent'],      name, from, to, args); },\n    leaveAnyState:   function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onleavestate'],                        name, from, to, args); },\n    enterAnyState:   function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onenterstate'] || fsm['onstate'],      name, from, to, args); },\n    changeState:     function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onchangestate'],                       name, from, to, args); },\n\n    beforeThisEvent: function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onbefore' + name],                     name, from, to, args); },\n    afterThisEvent:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onafter'  + name] || fsm['on' + name], name, from, to, args); },\n    leaveThisState:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onleave'  + from],                     name, from, to, args); },\n    enterThisState:  function(fsm, name, from, to, args) { return StateMachine.doCallback(fsm, fsm['onenter'  + to]   || fsm['on' + to],   name, from, to, args); },\n\n    beforeEvent: function(fsm, name, from, to, args) {\n      if ((false === StateMachine.beforeThisEvent(fsm, name, from, to, args)) ||\n          (false === StateMachine.beforeAnyEvent( fsm, name, from, to, args)))\n        return false;\n    },\n\n    afterEvent: function(fsm, name, from, to, args) {\n      StateMachine.afterThisEvent(fsm, name, from, to, args);\n      StateMachine.afterAnyEvent( fsm, name, from, to, args);\n    },\n\n    leaveState: function(fsm, name, from, to, args) {\n      var specific = StateMachine.leaveThisState(fsm, name, from, to, args),\n          general  = StateMachine.leaveAnyState( fsm, name, from, to, args);\n      if ((false === specific) || (false === general))\n        return false;\n      else if ((StateMachine.ASYNC === specific) || (StateMachine.ASYNC === general))\n        return StateMachine.ASYNC;\n    },\n\n    enterState: function(fsm, name, from, to, args) {\n      StateMachine.enterThisState(fsm, name, from, to, args);\n      StateMachine.enterAnyState( fsm, name, from, to, args);\n    },\n\n    //===========================================================================\n\n    buildEvent: function(name, map) {\n      return function() {\n\n        var from  = this.current;\n        var to    = map[from] || map[StateMachine.WILDCARD] || from;\n        var args  = Array.prototype.slice.call(arguments); // turn arguments into pure array\n\n        if (this.transition)\n          return this.error(name, from, to, args, StateMachine.Error.PENDING_TRANSITION, \"event \" + name + \" inappropriate because previous transition did not complete\");\n\n        if (this.cannot(name))\n          return this.error(name, from, to, args, StateMachine.Error.INVALID_TRANSITION, \"event \" + name + \" inappropriate in current state \" + this.current);\n\n        if (false === StateMachine.beforeEvent(this, name, from, to, args))\n          return StateMachine.Result.CANCELLED;\n\n        if (from === to) {\n          StateMachine.afterEvent(this, name, from, to, args);\n          return StateMachine.Result.NOTRANSITION;\n        }\n\n        // prepare a transition method for use EITHER lower down, or by caller if they want an async transition (indicated by an ASYNC return value from leaveState)\n        var fsm = this;\n        this.transition = function() {\n          fsm.transition = null; // this method should only ever be called once\n          fsm.current = to;\n          StateMachine.enterState( fsm, name, from, to, args);\n          StateMachine.changeState(fsm, name, from, to, args);\n          StateMachine.afterEvent( fsm, name, from, to, args);\n          return StateMachine.Result.SUCCEEDED;\n        };\n        this.transition.cancel = function() { // provide a way for caller to cancel async transition if desired (issue #22)\n          fsm.transition = null;\n          StateMachine.afterEvent(fsm, name, from, to, args);\n        }\n\n        var leave = StateMachine.leaveState(this, name, from, to, args);\n        if (false === leave) {\n          this.transition = null;\n          return StateMachine.Result.CANCELLED;\n        }\n        else if (StateMachine.ASYNC === leave) {\n          return StateMachine.Result.PENDING;\n        }\n        else {\n          if (this.transition) // need to check in case user manually called transition() but forgot to return StateMachine.ASYNC\n            return this.transition();\n        }\n\n      };\n    }\n\n  }; // StateMachine\n\n  //===========================================================================\n\n  //======\n  // NODE\n  //======\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = StateMachine;\n    }\n    exports.StateMachine = StateMachine;\n  }\n  //============\n  // AMD/REQUIRE\n  //============\n  else if (typeof define === 'function' && define.amd) {\n    define(function(require) { return StateMachine; });\n  }\n  //========\n  // BROWSER\n  //========\n  else if (typeof window !== 'undefined') {\n    window.StateMachine = StateMachine;\n  }\n  //===========\n  // WEB WORKER\n  //===========\n  else if (typeof self !== 'undefined') {\n    self.StateMachine = StateMachine;\n  }\n\n}());\n","// exported, global/window scope\nReactionCore = {};\nReactionCore.Schemas = {};\nReactionCore.Collections = {};\nReactionCore.Helpers = {};\nReactionCore.MetaData = {};\nReactionCore.Locale = {};\nReactionCore.Events = {};\n\nif (Meteor.isClient) {\n  ReactionCore.Alerts = {};\n  ReactionCore.Subscriptions = {};\n}\n\n// convenience\nAlerts = ReactionCore.Alerts;\nSchemas = ReactionCore.Schemas;\n\n// not exported to client (private)\nReactionRegistry = {};\nReactionRegistry.Packages = {};\n","###\n# Common settings for CollectionFS\n###\nFS.HTTP.setBaseUrl('/assets')\n\nFS.HTTP.setHeadersForGet([\n  ['Cache-Control', 'public, max-age=31536000']\n])","_.extend ReactionCore,\n  shopIdAutoValue: ->\n    return if @isSet and @isFromTrustedCode\n\n    if Meteor.isClient and @isInsert\n      # will be set correctly on the server\n      return ReactionCore.getShopId() or \"1\"\n    else if Meteor.isServer and (@isInsert or @isUpsert)\n      # forced value for client-initiated inserts\n      # or for server-initiated inserts where shopId isn't set\n      return ReactionCore.getShopId()\n    else\n      # for client-initiated update, be\n      # sure we don't allow changing this property\n      @unset()\n      return\n","###\n# Helper method to set default/parameterized product variant\n###\nsetProduct = (productId, variantId) ->\n  unless productId.match /^[A-Za-z0-9]{17}$/\n    product = Products.findOne({handle: productId.toLowerCase()})\n    productId = product?._id\n\n  setCurrentProduct productId\n  setCurrentVariant variantId\n  return\n\n###\n#  Global Route Configuration\n#  Extend/override in reaction/client/routing.coffee\n###\nRouter.configure\n  notFoundTemplate: \"notFound\"\n  loadingTemplate: \"loading\"\n  onBeforeAction: ->\n    @render \"loading\"\n    Alerts.removeSeen()\n    @next()\n\n\n# we always need to wait on these publications\nRouter.waitOn ->\n  @subscribe \"shops\"\n  @subscribe \"Packages\"\n\n# general reaction controller\n@ShopController = RouteController.extend\n  onAfterAction: ->\n    ReactionCore.MetaData.refresh(@route, @params)\n  layoutTemplate: \"layout\"\n  yieldTemplates:\n    layoutHeader:\n      to: \"layoutHeader\"\n    layoutFooter:\n      to: \"layoutFooter\"\n    dashboard:\n      to: \"dashboard\"\n# local ShopController\nShopController = @ShopController\n\n# admin specific shop controller\n@ShopAdminController = @ShopController.extend\n  layoutTemplate: \"coreLayout\"\n  yieldTemplates:\n    layoutHeader:\n      to: \"layoutHeader\"\n    layoutFooter:\n      to: \"layoutFooter\"\n    dashboard:\n      to: \"dashboard\"\n  onBeforeAction: () ->\n    # could check for roles here for dashboard access\n    unless ReactionCore.hasPermission(@route.getName()) and Meteor.userId()\n      @render('unauthorized')\n    else\n      @next()\n    return\n# local ShopAdminController\nShopAdminController = @ShopAdminController\n\n###\n# General Route Declarations\n###\nRouter.map ->\n  # default index route, normally overriden parent meteor app\n  @route \"products\",\n    controller: ShopAdminController\n    path: \"/products\"\n    name: \"products\"\n    template: \"products\"\n    waitOn: ->\n      @subscribe \"products\"\n\n  @route \"index\",\n    controller: ShopController\n    path: \"/\"\n    name: \"index\"\n    template: \"index\"\n\n  # home page intro screen for reaction-commerce\n  @route 'dashboard',\n    controller: ShopAdminController\n    template: 'dashboardPackages'\n    onBeforeAction: ->\n      Session.set \"dashboard\", true\n      @next()\n\n  @route 'dashboard/settings/shop',\n    controller: ShopAdminController\n    path: '/dashboard/settings/shop'\n    template: 'shopSettings'\n    data: ->\n      Shops.findOne()\n\n  @route 'dashboard/settings/account',\n    controller: ShopAdminController\n    path: '/dashboard/settings/account'\n    template: 'shopAccounts'\n\n  # list page of customer records\n  @route 'dashboard/customers',\n    controller: ShopAdminController\n\n  # list page of shop orders\n  @route 'dashboard/orders',\n    controller: ShopAdminController\n    path: 'dashboard/orders/'\n    template: 'orders'\n    data: ->\n      Orders.find(@params._id)\n\n  # display products by tag\n  @route 'product/tag',\n    controller: ShopAdminController\n    path: 'product/tag/:_id'\n    template: \"products\"\n    waitOn: ->\n      @subscribe \"products\"\n    subscriptions: ->\n      @subscribe \"tags\"\n    data: ->\n      if @ready()\n        id = @params._id\n        if id.match  /^[A-Za-z0-9]{17}$/\n          return tag: Tags.findOne(id)\n        else\n          return tag: Tags.findOne(slug: id.toLowerCase())\n\n  # product view / edit page\n  @route 'product',\n    controller: ShopAdminController\n    path: 'product/:_id/:variant?'\n    template: 'productDetail'\n    waitOn: ->\n      @subscribe 'product', @params._id\n    onBeforeAction: ->\n      variant = @params.variant || @params.query.variant\n      setProduct @params._id, variant\n      @next()\n    data: ->\n      product = selectedProduct()\n      if @ready() and product\n        unless product.isVisible\n          unless ReactionCore.hasPermission(@url)\n            @render 'unauthorized'\n        return product\n      if @ready() and !product\n        @render 'notFound'\n\n  #checkout\n  @route 'cartCheckout',\n    layoutTemplate: \"layout\"\n    path: 'checkout',\n    template: 'cartCheckout'\n    yieldTemplates:\n      checkoutHeader:\n        to: \"layoutHeader\"\n    waitOn: ->\n      @subscribe \"Packages\"\n    subscriptions: ->\n      @subscribe \"products\"\n      @subscribe \"shipping\"\n      @subscribe \"accountOrders\", Session.get(\"sessionId\"), Meteor.userId()\n\n  #completed orders\n  @route 'cartCompleted',\n    controller: ShopAdminController\n    path: 'completed/:_id'\n    template: 'cartCompleted'\n    subscriptions: ->\n      @subscribe \"accountOrders\", Session.get(\"sessionId\"), Meteor.userId()\n    data: ->\n      if @ready()\n        if Orders.findOne(@params._id)\n          return ReactionCore.Collections.Orders.findOne({'_id': @params._id})\n        else\n          @render 'unauthorized'\n      else\n        @render \"loading\"\n\n  #account profile\n  @route 'account/profile',\n    controller: ShopAdminController\n    path: 'account/profile'\n    template: 'accountProfile'\n    subscriptions: ->\n      @subscribe \"accountOrders\", Session.get(\"sessionId\"), Meteor.userId()\n    data: ->\n      if @ready()\n        if Orders.findOne() or Meteor.userId()\n          # if subscription has results or Meteor userId\n          return ReactionCore.Collections.Orders.find({}, {sort: { createdAt: -1 }})\n        else\n          @render 'unauthorized'\n      else\n        @render \"loading\"\n","###\n# Packages\n###\nReactionCore.Schemas.PackageConfig = new SimpleSchema\n  shopId:\n    type: String\n    index: 1\n    autoValue: ReactionCore.shopIdAutoValue\n  name:\n    type: String\n    index: 1\n  enabled:\n    type: Boolean\n    defaultValue: true\n    #configured in fixtures with autoEnable:true\n  settings:\n    type: Object\n    optional: true\n    blackbox: true\n  shopPermissions:\n    type: [Object]\n    optional: true\n    blackbox: true\n  registry:\n    type: [Object]\n    optional: true\n  'registry.$.provides':\n    type: String\n  'registry.$.route':\n    type: String\n    optional: true\n  'registry.$.template':\n    type: String\n    optional: true\n  'registry.$.description':\n    type: String\n    optional: true\n  'registry.$.icon':\n    type: String\n    optional: true\n  'registry.$.label':\n    type: String\n    optional: true\n  'registry.$.container':\n    type: String\n    optional: true\n  'registry.$.cycle':\n    type: Number\n    optional: true\n  'registry.$.enabled':\n    type: Boolean\n    optional: true\n\n###\n# Core Reaction Settings\n###\nReactionCore.Schemas.CorePackageConfig = new SimpleSchema([\n  ReactionCore.Schemas.PackageConfig\n  {\n    \"settings.mail\":\n      type: Object\n      optional:true\n      label: \"Mail Settings\"\n    \"settings.mail.user\":\n      type: String\n      label: \"Username\"\n    \"settings.mail.password\":\n      type: String\n      label: \"Password\"\n    \"settings.mail.host\":\n      type: String\n      label: \"Host\"\n    \"settings.mail.port\":\n      type: String\n      label: \"Port\"\n    \"settings.public\":\n      type: Object\n      optional: true\n    \"settings.public.allowGuestCheckout\":\n      type: Boolean\n      label: \"Allow Guest Checkout\"\n  }\n])\n","###\n# Emails\n###\nReactionCore.Schemas.Email = new SimpleSchema\n  address:\n    type: String\n    regEx: SimpleSchema.RegEx.Email\n  verified:\n    type: Boolean\n    defaultValue: false\n\n###\n# AddressBook\n###\nReactionCore.Schemas.Address = new SimpleSchema\n  _id:\n    type: String\n    defaultValue: Random.id()\n    optional: true\n  fullName:\n    type: String\n    label: 'Full name'\n  address1:\n    label: \"Address 1\"\n    type: String\n  address2:\n    label: \"Address 2\"\n    type: String\n    optional: true\n  city:\n    type: String\n    label: \"City\"\n  company:\n    type: String\n    label: \"Company\"\n    optional: true\n  phone:\n    type: String\n    label: \"Phone\"\n  region:\n    label: \"State/Province/Region\"\n    type: String\n  postal:\n    label: \"ZIP/Postal Code\"\n    type: String\n  country:\n    type: String\n    label: \"Country\"\n  isCommercial:\n    label: \"This is a commercial address.\"\n    type: Boolean\n    # defaultValue: false\n  isBillingDefault:\n    label: \"Make this your default billing address?\"\n    type: Boolean\n  isShippingDefault:\n    label: \"Make this your default shipping address?\"\n    type: Boolean\n    # defaultValue: true\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n\n\n###\n# Accounts\n###\nReactionCore.Schemas.Accounts = new SimpleSchema\n  userId:\n    type: String\n    optional: true\n    regEx: SimpleSchema.RegEx.Id\n  sessions:\n    type: [String]\n    optional: true\n    index: 1\n  shopId:\n    type: String\n    autoValue: ReactionCore.shopIdAutoValue\n    regEx: SimpleSchema.RegEx.Id\n  emails:\n    type: [ReactionCore.Schemas.Email]\n    optional: true\n  acceptsMarketing:\n    type: Boolean\n    defaultValue: false\n    optional: true\n  state:\n    type: String\n    defaultValue: \"new\"\n    optional: true\n  note:\n    type: String\n    optional: true\n  profile:\n    type: Object\n    optional: true\n  'profile.addressBook':\n    type: [ReactionCore.Schemas.Address]\n    optional: true\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n  createdAt:\n    type: Date\n    autoValue: ->\n      if @isInsert\n        return new Date\n      else if @isUpsert\n        return $setOnInsert: new Date\n    # denyUpdate: true\n  updatedAt:\n    type: Date\n    autoValue: ->\n      if @isUpdate\n        return $set: new Date\n      else if @isUpsert\n        return $setOnInsert: new Date\n    optional: true\n","###\n# Shops\n###\nReactionCore.Schemas.ShopMember = new SimpleSchema\n  userId:\n    type: String\n  isAdmin:\n    type: Boolean\n    optional: true\n  permissions:\n    type: [String]\n    optional: true\n\nReactionCore.Schemas.CustomEmailSettings = new SimpleSchema\n  username:\n    type: String\n    optional: true\n  password:\n    type: String\n    optional: true\n  host:\n    type: String\n    optional: true\n  port:\n    type: Number\n    allowedValues: [25, 587, 465, 475, 2525]\n    optional: true\n\nReactionCore.Schemas.Metafield = new SimpleSchema\n  key:\n    type: String\n    max: 30\n    optional: true\n  namespace:\n    type: String\n    max: 20\n    optional: true\n  scope:\n    type: String\n    optional: true\n  value:\n    type: String\n    optional: true\n  valueType:\n    type: String\n    optional: true\n  description:\n    type: String\n    optional: true\n\nReactionCore.Schemas.Currency = new SimpleSchema\n  symbol:\n    type: String\n    defaultValue: \"$\"\n  format:\n    type: String\n    defaultValue: \"%s%v\"\n  precision:\n    type: String\n    defaultValue: \"0\"\n    optional: true\n  decimal:\n    type: String\n    defaultValue: \".\"\n    optional: true\n  thousand:\n    type: String\n    defaultValue: \",\"\n    optional: true\n\nReactionCore.Schemas.Country = new SimpleSchema\n  name:\n    type: String\n  code:\n    type: String\n\nReactionCore.Schemas.Shop = new SimpleSchema\n  _id:\n    type: String\n    optional: true\n  name:\n    type: String\n    index: 1\n  description:\n    type: String\n    optional: true\n  keywords:\n    type: String\n    optional: true\n  addressBook:\n    type: [ReactionCore.Schemas.Address]\n  domains:\n    type: [String]\n    defaultValue: [\"localhost\"] #see simple schema issue #73\n  emails:\n    type: [ReactionCore.Schemas.Email]\n    optional: true\n  currency:\n    type: String\n    defaultValue: \"USD\"\n  currencies:\n    type: [ReactionCore.Schemas.Currency]\n  public:\n    type: String\n    optional: true\n  timezone:\n    type: String\n  baseUOM:\n    type: String\n    optional: true\n    defaultValue: \"OZ\"\n    label: \"Base Unit of Measure\"\n  allowGuestCheckout:\n    type: Boolean\n    defaultValue: false\n  ownerId:\n    type: String\n  members:\n    type: [ReactionCore.Schemas.ShopMember]\n    index: 1\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n  createdAt:\n    type: Date\n  updatedAt:\n    type: Date\n    autoValue : ->\n      new Date()  if @isUpdate\n    optional: true\n","ReactionCore.Schemas.ShipmentQuote = new SimpleSchema\n  carrier:\n    type: String\n  method:\n    type: ReactionCore.Schemas.ShippingMethod\n  rate:\n    type: Number\n    decimal: true\n    defaultValue: \"0.00\"\n  tracking:\n    type: String\n    optional: true\n\nReactionCore.Schemas.Shipment = new SimpleSchema\n  address:\n    type: ReactionCore.Schemas.Address\n    label: \"Destination\"\n    optional: true\n  shipmentMethod:\n    type: ReactionCore.Schemas.ShipmentQuote\n    label:\"Selected Rate\"\n    optional: true\n  shipmentQuotes:\n    type: [ReactionCore.Schemas.ShipmentQuote]\n    label: \"Rate Quotes\"\n    optional: true\n\n\nReactionCore.Schemas.ShippingProvider = new SimpleSchema\n  name:\n    type: String\n    label: \"Service Code\"\n  label:\n    type: String\n    label: \"Public Label\"\n  enabled:\n    type: Boolean\n    defaultValue: true\n  serviceAuth:\n    type: String\n    label: \"Auth\"\n    optional: true\n  serviceSecret:\n    type: String\n    label: \"Secret\"\n    optional: true\n  serviceUrl:\n    type: String\n    label: \"Service URL\"\n    optional: true\n\nReactionCore.Schemas.ShippingParcel = new SimpleSchema\n  containers:\n    type: String\n    optional: true\n  length:\n    type: Number\n    optional: true\n  width:\n    type: Number\n    optional: true\n  height:\n    type: Number\n    optional: true\n  weight:\n    type: Number\n    optional: true\n\n\nReactionCore.Schemas.ShippingMethod = new SimpleSchema\n  name:\n    type: String\n    label: \"Method Code\"\n  label:\n    type: String\n    label: \"Public Label\"\n  group:\n    type: String\n    label: \"Group\"\n  cost:\n    type: Number\n    label: \"Cost\"\n    decimal: true\n    optional: true\n  handling:\n    type: Number\n    label: \"Handling\"\n    optional: true\n    decimal: true\n    defaultValue: 0\n    min: 0\n  rate:\n    type: Number\n    label: \"Rate\"\n    decimal: true\n    min: 0\n  enabled:\n    type: Boolean\n    label: \"Enabled\"\n    defaultValue: true\n  validRanges:\n    type: Array\n    optional: true\n    label: \"Matching Cart Ranges\"\n  'validRanges.$':\n    type: Object\n    optional: true\n  'validRanges.$.begin':\n    type: Number\n    decimal: true\n    label: \"Begin\"\n    optional: true\n  'validRanges.$.end':\n    type: Number\n    decimal: true\n    label: \"End\"\n    optional: true\n  validLocales:\n    type: Array\n    optional: true\n    label: \"Matching Locales\"\n  'validLocales.$':\n    type: Object\n    optional: true\n  'validLocales.$.origination':\n    type: String\n    label: \"From\"\n    optional: true\n  'validLocales.$.destination':\n    type: String\n    label: \"To\"\n    optional: true\n  'validLocales.$.deliveryBegin':\n    type: Number\n    label: \"Shipping Est.\"\n    optional: true\n  'validLocales.$.deliveryEnd':\n    type: Number\n    label: \"Delivery Est.\"\n    optional: true\n\n# load the complete schema last as order matters.\nReactionCore.Schemas.Shipping = new SimpleSchema\n  shopId:\n    type: String\n    index: 1\n    autoValue: ReactionCore.shopIdAutoValue\n  provider:\n    type: ReactionCore.Schemas.ShippingProvider\n  methods:\n    type: [ReactionCore.Schemas.ShippingMethod]\n    optional: true\n","###\n# Products\n###\nReactionCore.Schemas.VariantMedia = new SimpleSchema\n  mediaId:\n    type: String\n    optional: true\n  priority:\n    type: Number\n    optional: true\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n  updatedAt:\n    type: Date\n    optional: true\n  createdAt:\n    type: Date\n\nReactionCore.Schemas.ProductPosition = new SimpleSchema\n  tag:\n    type: String\n    optional: true\n  position:\n    type: Number\n    optional: true\n  weight:\n    type: Number\n    optional: true\n  updatedAt:\n    type: Date\n\nReactionCore.Schemas.ProductVariant = new SimpleSchema\n  _id:\n    type: String\n  parentId:\n    type: String\n    optional: true\n  cloneId:\n    type: String\n    optional: true\n  index:\n    type: String\n    optional: true\n  barcode:\n    label: \"Barcode\"\n    type: String\n    optional: true\n  compareAtPrice:\n    label: \"MSRP\"\n    type: Number\n    optional: true\n    decimal: true\n    min: 0\n  fulfillmentService:\n    label: \"Fulfillment service\"\n    type: String\n    optional: true\n  weight:\n    label: \"Weight\"\n    type: Number\n    min: 0\n  inventoryManagement:\n    type: Boolean\n    label: \"Inventory Tracking\"\n  inventoryPolicy:\n    type: Boolean\n    label: \"Deny when out of stock\"\n  lowInventoryWarningThreshold:\n    type: Number\n    label: \"Warn @\"\n    min: 0\n    optional: true\n  inventoryQuantity:\n    type: Number\n    label: \"Quantity\"\n    optional: true\n    custom: ->\n      if Meteor.isClient\n        if checkChildVariants(@.docId) is 0 and !@.value then return \"required\"\n  price:\n    label: \"Price\"\n    type: Number\n    decimal: true\n    min: 0\n    optional: true\n    custom: -> #required if no child variants (options) present\n      if Meteor.isClient\n        if checkChildVariants(@.docId) is 0 and !@.value then return \"required\"\n  sku:\n    label: \"SKU\"\n    type: String\n    optional: true\n  taxable:\n    label: \"Taxable\"\n    type: Boolean\n    optional: true\n  title:\n    label: \"Label\"\n    type: String\n  optionTitle:\n    label: \"Option\"\n    type: String\n    optional: true\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n  createdAt:\n    label: \"Created at\"\n    type: Date\n    optional: true\n  updatedAt:\n    label: \"Updated at\"\n    type: Date\n    optional: true\n\nReactionCore.Schemas.Product = new SimpleSchema\n  _id:\n    type: String\n    optional: true\n  cloneId:\n    type: String\n    optional: true\n  shopId:\n    type: String\n    autoValue: ReactionCore.shopIdAutoValue\n  title:\n    type: String\n  pageTitle:\n    type: String\n    optional: true\n  description:\n    type: String\n    optional: true\n  productType:\n    type: String\n  vendor:\n    type: String\n    optional: true\n  positions:\n    type: [ReactionCore.Schemas.ProductPosition]\n    optional: true\n  metafields:\n    type: [ReactionCore.Schemas.Metafield]\n    optional: true\n  positions:\n    type: [ReactionCore.Schemas.ProductPosition]\n    optional: true    \n  variants:\n    type: [ReactionCore.Schemas.ProductVariant]\n  requiresShipping:\n    label: \"Require a shipping address\"\n    type: Boolean\n    defaultValue: true\n    optional: true\n  parcel:\n    type: ReactionCore.Schemas.ShippingParcel\n    optional: true\n  hashtags:\n    type: [String]\n    optional: true\n    index: 1\n  twitterMsg:\n    type: String\n    optional: true\n    max: 140\n  facebookMsg:\n    type: String\n    optional: true\n    max: 255\n  googleplusMsg:\n    type: String\n    optional: true\n    max: 255\n  pinterestMsg:\n    type: String\n    optional: true\n    max: 255\n  metaDescription:\n    type: String\n    optional: true\n  handle:\n    type: String\n    optional: true\n    index: 1\n  isVisible:\n    type: Boolean\n    index: 1\n  publishedAt:\n    type: Date\n    optional: true\n  publishedScope:\n    type: String\n    optional: true\n  templateSuffix:\n    type: String\n    optional: true\n  createdAt:\n    type: Date\n  updatedAt:\n    type: Date\n    autoValue : ->\n      new Date() if @isUpdate\n    optional: true\n","###\n# Tags\n###\nReactionCore.Schemas.Tag = new SimpleSchema\n  name:\n    type: String\n    index: 1\n  slug:\n    type: String\n  position:\n    type: Number\n    optional: true\n  relatedTagIds:\n    type: [String]\n    optional: true\n    index: 1\n  isTopLevel:\n    type: Boolean\n  shopId:\n    type: String\n    index: 1\n    autoValue: ReactionCore.shopIdAutoValue\n  createdAt:\n    type: Date\n  updatedAt:\n    type: Date\n","###\n# Carts\n###\nReactionCore.Schemas.CartItem = new SimpleSchema\n  _id:\n    type: String\n  productId:\n    type: String\n  shopId:\n    type: String\n    autoValue: ReactionCore.shopIdAutoValue\n  quantity:\n    label: \"Quantity\"\n    type: Number\n    min: 0\n  variants:\n    type: ReactionCore.Schemas.ProductVariant\n\nReactionCore.Schemas.Cart = new SimpleSchema\n  shopId:\n    type: String\n    index: 1\n    autoValue: ReactionCore.shopIdAutoValue\n    index: 1\n  userId:\n    type: String\n    optional: true\n    index: 1\n  sessions:\n    type: [String]\n    optional: true\n    index: 1\n  email:\n    type: String\n    optional: true\n    index: 1\n    regEx: SimpleSchema.RegEx.Email\n  items:\n    type: [ReactionCore.Schemas.CartItem]\n    optional: true\n  requiresShipping:\n    label: \"Require a shipping address\"\n    type: Boolean\n    defaultValue: true\n    optional: true\n  shipping:\n    type: ReactionCore.Schemas.Shipment\n    optional: true\n    blackbox: true\n  payment:\n    type: ReactionCore.Schemas.Payment\n    optional: true\n    blackbox: true\n  totalPrice:\n    label: \"Total Price\"\n    type: Number\n    optional: true\n    decimal: true\n    min: 0\n  state:\n    type: String\n    defaultValue: \"new\"\n    optional: true\n  createdAt:\n    type: Date\n    autoValue: ->\n      if @isInsert\n        return new Date\n      else if @isUpsert\n        return $setOnInsert: new Date\n    denyUpdate: true\n  updatedAt:\n    type: Date\n    autoValue: ->\n      if @isUpdate\n        return $set: new Date\n      else if @isUpsert\n        return $setOnInsert: new Date\n    optional: true\n","\n###\n# Payments Schema\n###\nReactionCore.Schemas.PaymentMethod = new SimpleSchema\n  processor:\n    type: String\n  storedCard:\n    type: String\n    optional: true\n  method:\n    type: String\n    optional: true\n  transactionId:\n    type: String\n  status:\n    type: String\n    allowedValues: [\"created\", \"approved\", \"failed\", \"canceled\", \"expired\", \"pending\", \"voided\", \"settled\"]\n  mode:\n    type: String\n    allowedValues: [\"authorize\", 'capture','refund','void']\n  createdAt:\n    type: Date\n    optional: true\n  updatedAt:\n    type: Date\n    optional :true\n  authorization:\n    type: String\n    optional: true\n  amount:\n    type: Number\n    decimal: true\n  transactions:\n    type: [Object]\n    optional: true\n    blackbox: true\n\nReactionCore.Schemas.Invoice = new SimpleSchema\n  transaction:\n    type: String\n    optional: true\n  shipping:\n    type: Number\n    decimal: true\n    optional: true\n  taxes:\n    type: Number\n    decimal: true\n    optional: true\n  subtotal:\n    type: Number\n    decimal: true\n  discounts:\n    type: Number\n    decimal: true\n    optional: true\n  total:\n    type: Number\n    decimal: true\n\n\nReactionCore.Schemas.Payment = new SimpleSchema\n  address:\n    type: ReactionCore.Schemas.Address\n    optional: true\n  paymentMethod:\n    type: [ReactionCore.Schemas.PaymentMethod]\n    optional: true\n  invoices:\n    type: [ReactionCore.Schemas.Invoice]\n    optional: true\n\n\n###\n# Orders\n###\nReactionCore.Schemas.Document = new SimpleSchema\n  docId:\n    type: String\n  docType:\n    type: String\n    optional: true\n\nReactionCore.Schemas.History = new SimpleSchema\n    event:\n      type: String\n    userId:\n      type: String\n    updatedAt:\n      type: Date\n\n###\n# ReactionCore.Schemas.OrderItems\n# merges with ReactionCore.Schemas.Cart, ReactionCore.Schemas.OrderItems]\n# to create Orders collection\n###\nReactionCore.Schemas.OrderItems = new SimpleSchema\n  additionalField:\n    type: String\n    optional: true\n  status:\n    type: String\n  history:\n    type: [ReactionCore.Schemas.History]\n    optional: true\n  documents:\n    type: [ReactionCore.Schemas.Document]\n    optional: true\n\nReactionCore.Schemas.Order = new SimpleSchema\n  cartId:\n    type: String\n    optional: true\n  history:\n    type: [ReactionCore.Schemas.History]\n    optional: true\n  documents:\n    type: [ReactionCore.Schemas.Document]\n    optional: true\n","# Translations\nReactionCore.Collections.Translations = new Mongo.Collection \"Translations\"\n","# Tax Rates\nReactionCore.Schemas.TaxRates = new SimpleSchema\n  country:\n    type: String\n  county:\n    type: String\n    optional: true\n  rate:\n    type: Number\n\n# Tax Methods\nReactionCore.Schemas.Taxes = new SimpleSchema\n  shopId:\n    type: String\n    autoValue: ReactionCore.shopIdAutoValue\n  cartMethod:\n    label: \"Calculation Method\"\n    type: String\n    allowedValues: ['unit','row','total']\n  taxLocale:\n    label: \"Taxation Location\"\n    type: String\n    allowedValues: ['shipping','billing', 'origination', 'destination']\n  taxShipping:\n    label: \"Tax Shipping\"\n    type: Boolean,\n    defaultValue: false\n  taxIncluded:\n    label: \"Taxes included in product prices\"\n    type: Boolean\n    defaultValue: false\n  discountsIncluded:\n    label: \"Tax before discounts\"\n    type: Boolean\n    defaultValue: false\n  rates:\n    label: \"Tax Rate\"\n    type: [ReactionCore.Schemas.TaxRates]\n","# Discount Types\nReactionCore.Schemas.DiscountType = new SimpleSchema\n  percentage:\n    type: Number\n    optional: true\n    label: \"Percentage\"\n  fixed:\n    type: Number\n    optional: true\n    label: \"Price Discount\"\n  shipping:\n    type: Boolean\n    label: \"Free Shipping\"\n    optional: true\n\n# Discount Rules\nReactionCore.Schemas.DiscountRules = new SimpleSchema\n  validUses:\n    type: Number\n    optional: true\n  products:\n    type: [String]\n    optional: true\n  codes:\n    type: [String]\n    optional: true\n  range:\n    type: [Object]\n    optional: true\n  'range.$.begin':\n    type: Number\n    optional: true\n  'range.$.end':\n    type: Number\n    optional: true\n\n# Discounts\nReactionCore.Schemas.Discounts = new SimpleSchema\n  shopId:\n    type: String\n    autoValue: ReactionCore.shopIdAutoValue\n  beginDate:\n    type: Date\n    optional: true\n  endDate:\n    type: Date\n    optional: true\n  discount:\n    type: ReactionCore.Schemas.DiscountType\n  rules:\n    type: ReactionCore.Schemas.DiscountRules\n\n\n\n\n","###\n# Cart\n#\n# methods to return cart calculated values\n# cartCount, cartSubTotal, cartShipping, cartTaxes, cartTotal\n# are calculated by a transformation on the collection\n# and are available to use in template as cart.xxx\n# in template: {{cart.cartCount}}\n# in code: ReactionCore.Collections.Cart.findOne().cartTotal()\n###\nReactionCore.Collections.Cart = Cart = @Cart = new Mongo.Collection \"Cart\",\n  transform: (cart) ->\n    cart.cartCount = ->\n      count = 0\n      ((count += items.quantity) for items in cart.items) if cart?.items\n      return count\n\n    cart.cartShipping = ->\n      shipping = 0\n      if cart?.shipping?.shipmentMethod?.rate\n        shipping = cart?.shipping?.shipmentMethod?.rate\n      else ((shipping += shippingMethod.rate) for shippingMethod in cart.shipping.shipmentMethod) if cart?.shipping?.shipmentMethod.length > 0\n      return shipping\n\n    cart.cartSubTotal = ->\n      subtotal = 0\n      ((subtotal += (items.quantity * items.variants.price)) for items in cart.items) if cart?.items\n      subtotal = subtotal.toFixed(2)\n      return subtotal\n\n    cart.cartTaxes = ->\n      ###\n      # TODO: lookup cart taxes, and apply rules here\n      ###\n      return \"0.00\"\n\n    cart.cartDiscounts = ->\n      ###\n      # TODO: lookup discounts, and apply rules here\n      ###\n      return \"0.00\"\n\n    cart.cartTotal = ->\n      subtotal = 0\n      ((subtotal += (items.quantity * items.variants.price)) for items in cart.items) if cart?.items\n      shipping = 0\n      if cart?.shipping?.shipmentMethod?.rate\n        shipping = cart?.shipping?.shipmentMethod?.rate\n      else ((shipping += shippingMethod.rate) for shippingMethod in cart.shipping.shipmentMethod) if cart?.shipping?.shipmentMethod.length > 0\n      shipping = parseFloat shipping\n      subtotal = (subtotal + shipping) unless isNaN(shipping)\n      total = subtotal.toFixed(2)\n      return total\n    return cart\n\nReactionCore.Collections.Cart.attachSchema ReactionCore.Schemas.Cart\n\n# Accounts\nReactionCore.Collections.Accounts = Accounts = @Accounts = new Mongo.Collection \"Accounts\"\nReactionCore.Collections.Accounts.attachSchema ReactionCore.Schemas.Accounts\n\n# Orders\nReactionCore.Collections.Orders = Orders = @Orders = new Mongo.Collection \"Orders\",\n  transform: (order) ->\n    order.itemCount = ->\n      count = 0\n      ((count += items.quantity) for items in order.items) if order?.items\n      return count\n    return order\n\nReactionCore.Collections.Orders.attachSchema [ReactionCore.Schemas.Cart, ReactionCore.Schemas.Order, ReactionCore.Schemas.OrderItems]\n\n# Packages\nReactionCore.Collections.Packages = new Mongo.Collection \"Packages\"\nReactionCore.Collections.Packages.attachSchema ReactionCore.Schemas.PackageConfig\n\n# Products\nReactionCore.Collections.Products = Products = @Products = new Mongo.Collection \"Products\"\nReactionCore.Collections.Products.attachSchema ReactionCore.Schemas.Product\n\n# Shipping\nReactionCore.Collections.Shipping = new Mongo.Collection \"Shipping\"\nReactionCore.Collections.Shipping.attachSchema ReactionCore.Schemas.Shipping\n\n# Taxes\nReactionCore.Collections.Taxes = new Mongo.Collection \"Taxes\"\nReactionCore.Collections.Taxes.attachSchema ReactionCore.Schemas.Taxes\n\n# Discounts\nReactionCore.Collections.Discounts = new Mongo.Collection \"Discounts\"\nReactionCore.Collections.Discounts.attachSchema ReactionCore.Schemas.Discounts\n\n# Shops\nReactionCore.Collections.Shops = Shops = @Shops = new Mongo.Collection \"Shops\",\n  transform: (shop) ->\n    for index, member of shop.members\n      member.index = index\n      member.user = Meteor.users.findOne member.userId\n    return shop\n\nReactionCore.Collections.Shops.attachSchema ReactionCore.Schemas.Shop\n\n# Tags\nReactionCore.Collections.Tags = Tags = @Tags = new Mongo.Collection \"Tags\"\nReactionCore.Collections.Tags.attachSchema ReactionCore.Schemas.Tag\n","###\n# Define CollectionFS collection\n# See: https://github.com/CollectionFS/Meteor-CollectionFS\n###\nReactionCore.Collections.Media = new FS.Collection \"media\",\n  stores: [\n    new FS.Store.GridFS(\"image\"), #default unaltered image\n    new FS.Store.GridFS(\"large\", #large PDP image\n      transformWrite: (fileObj, readStream, writeStream) ->\n        if gm.isAvailable  # requires installation of imagemagick\n          # Store 1000x1000 px images for the products\n          gm(readStream, fileObj.name).resize(\"1000\", \"1000\").stream().pipe writeStream\n        else\n          readStream.pipe(writeStream);\n        return\n    ),\n    new FS.Store.GridFS(\"medium\", #large PDP image\n      transformWrite: (fileObj, readStream, writeStream) ->\n        if gm.isAvailable  # requires installation of imagemagick\n          # Store 600x600 px images for the product grids (optional)\n          gm(readStream, fileObj.name).resize(\"600\", \"600\").stream().pipe writeStream\n        else\n          readStream.pipe(writeStream);\n        return\n    ),\n    new FS.Store.GridFS(\"small\", #cart image\n      transformWrite: (fileObj, readStream, writeStream) ->\n        if gm.isAvailable # requires installation of imagemagick\n          # Store 235x235 px images for the cart\n          gm(readStream).resize(\"235\", \"235\" + '^').gravity('Center').extent(\"235\", \"235\").stream('PNG').pipe(writeStream);\n        else\n          readStream.pipe(writeStream);\n        return\n    ),\n    new FS.Store.GridFS(\"thumbnail\", #checkout & admin image\n      transformWrite: (fileObj, readStream, writeStream) ->\n        if gm.isAvailable # requires installation of imagemagick\n          # Store 100x100 px images for the cart\n          gm(readStream).resize(\"100\", \"100\" + '^').gravity('Center').extent(\"100\", \"100\").stream('PNG').pipe(writeStream);\n        else\n          readStream.pipe(writeStream);\n        return\n    )\n  ]\n  filter:\n    allow:\n      contentTypes: [\"image/*\"]\n","applyVariantDefaults = (variant) ->\n  _.defaults(variant,\n    _id: Random.id()\n    inventoryManagement: true\n    inventoryPolicy: true\n    updatedAt: new Date()\n    createdAt: new Date()\n  )\n\nProducts.before.insert (userId, product) ->\n  product.shopId = product.shopId || ReactionCore.getCurrentShop()._id # avoid calling if present\n  _.defaults(product,\n    productType: \"Simple\"\n    handle: getSlug product.title\n    isVisible: false\n    updatedAt: new Date()\n    createdAt: new Date()\n  )\n  for variant in product.variants\n    applyVariantDefaults(variant)\n\nProducts.before.update (userId, product, fieldNames, modifier, options) ->\n  #set default variants\n  updatedAt: new Date()\n\n  if modifier.$push\n    if modifier.$push.variants\n      applyVariantDefaults(modifier.$push.variants)\n\n  # keep quantity of parent variants in sync with the aggregate quantity of\n  # of their children\n  if modifier.$set?['variants.$']?.inventoryQuantity >= 0\n    qty = modifier.$set['variants.$'].inventoryQuantity || 0\n    for variant in product.variants when variant._id isnt modifier.$set['variants.$']._id and variant.parentId is modifier.$set['variants.$'].parentId\n      qty += variant.inventoryQuantity || 0\n    parentVariant = (variant for variant in product.variants when variant._id is modifier.$set['variants.$'].parentId)[0]\n    if parentVariant?.inventoryQuantity isnt qty\n      Products.direct.update({'_id': product._id, 'variants._id':modifier.$set['variants.$'].parentId }, {$set: {'variants.$.inventoryQuantity':qty } })\n\n  unless _.indexOf(fieldNames, 'positions') is -1\n    addToSet = modifier.$addToSet?.positions\n    if addToSet\n      createdAt = new Date()\n      updatedAt = new Date()\n      if addToSet.$each\n        for position of addToSet.$each\n          createdAt = new Date()\n          updatedAt = new Date()\n      else\n        addToSet.updatedAt = updatedAt\n  if modifier.$set then modifier.$set.updatedAt = new Date()\n  # if modifier.$addToSet then modifier.$addToSet.updatedAt = new Date()\n\n  if modifier.$addToSet?.variants\n    modifier.$addToSet.variants.createdAt = new Date()  unless modifier.$addToSet.variants.createdAt\n    modifier.$addToSet.variants.updatedAt = new Date()  unless modifier.$addToSet.variants.updatedAt","###\n# configure bunyan logging module for reaction server\n# See: https://github.com/trentm/node-bunyan#levels\n###\nisDebug = Meteor.settings.isDebug\n\n# acceptable levels\nlevels = [\"FATAL\",\"ERROR\",\"WARN\", \"INFO\", \"DEBUG\", \"TRACE\"]\n\n#\n# if debug is true, or NODE_ENV development environment and not false\n# set to lowest level, or any defined level set to level\n#\nif isDebug is true or ( process.env.NODE_ENV is \"development\" and isDebug isnt false )\n  # set logging levels from settings\n  if typeof isDebug isnt 'boolean' and typeof isDebug isnt 'undefined' then isDebug = isDebug.toUpperCase()\n  unless _.contains levels, isDebug\n    isDebug = \"WARN\"\n\n# Define bunyan levels and output to Meteor console\nReactionCore.Events = logger.bunyan.createLogger(\n  name: \"core\"\n  serializers: logger.bunyan.stdSerializers\n  streams: [\n    {\n      level: \"debug\"\n      stream: (unless isDebug is \"DEBUG\" then logger.bunyanPretty() else process.stdout )\n    }\n  ]\n)\n# set bunyan logging level\nReactionCore.Events.level(isDebug)\n\n###\n# Global reaction shop permissions methods\n###\n_.extend ReactionCore,\n  getCurrentShopCursor: (client) ->\n    domain = @getDomain(client)\n    cursor = Shops.find({domains: domain}, {limit: 1})\n    if !cursor.count()\n      ReactionCore.Events.info \"Reaction Configuration: Add a domain entry to shops for: \", domain\n    return cursor\n\n  getCurrentShop: (client) ->\n    cursor = @getCurrentShopCursor(client)\n    return cursor.fetch()[0]\n\n  getShopId: (client) ->\n    return @getCurrentShop(client)?._id\n\n  getDomain: (client) ->\n    #todo: eventually we want to use the host domain to determine\n    #which shop from the shops collection to use here, hence the unused client arg\n    return Meteor.absoluteUrl().split('/')[2].split(':')[0]\n\n  findMember: (shop, userId) ->\n    shop = @getCurrentShop() unless shop\n    userId = Meteor.userId() unless userId\n    return _.find shop.members, (member) ->\n      userId is member.userId\n\n  hasPermission: (permissions, shop, userId) ->\n    return false unless permissions\n    shop = @getCurrentShop() unless shop\n    userId = Meteor.userId() unless userId\n    permissions = [permissions] unless _.isArray(permissions)\n    has = @hasOwnerAccess(shop, userId)\n    unless has\n      member = @findMember(shop, userId)\n      if member\n        has = member.isAdmin or _.intersection(permissions, member.permissions).length\n    return has\n\n  hasOwnerAccess: (shop, userId) ->\n    shop = @getCurrentShop() unless shop\n    userId = Meteor.userId() unless userId\n    return Roles.userIsInRole(userId, \"admin\") or userId is shop.ownerId\n","# Define register method\n# this will get inserted by fixtures on fresh package install\n#\nReactionCore.registerPackage = (packageInfo) ->\n  ReactionRegistry.Packages[packageInfo.name] = packageInfo\n\n# Register core packages\nReactionCore.registerPackage\n  name: 'core'\n  autoEnable: true\n  settings:\n    public:\n      allowGuestCheckout: false\n    mail:\n      user: \"\"\n      password: \"\"\n      host: \"localhost\"\n      port: \"25\"\n  # app registry\n  registry: [\n    {\n      route: \"dashboard\"\n      provides: 'dashboard'\n      label: 'Core'\n      description: 'Reaction Commerce Core'\n      icon: 'fa fa-th'\n      cycle: 1\n      container: \"dashboard\"\n    }\n    {\n      route: \"dashboard\"\n      provides: 'shortcut'\n      label: 'Dashboard'\n      icon: 'fa fa-th'\n      cycle: 1\n    }\n    {\n      route: \"dashboard\"\n      label: 'Dashboard'\n      provides: 'console'\n    }\n    {\n      route: \"dashboard/settings/shop\"\n      provides: 'settings'\n      icon: \"fa fa-cog fa-2x fa-fw\"\n      container: 'dashboard'\n    }\n    # orders\n    {\n      route: \"dashboard/orders\"\n      provides: 'dashboard'\n      label: 'Orders'\n      description: 'Fulfill your orders'\n      icon: 'fa fa-sun-o'\n      cycle: 3\n      container: \"orders\"\n    }\n    {\n      route: \"dashboard/orders\"\n      provides: 'shortcut'\n      label: 'Orders'\n      description: 'Fulfill your orders'\n      icon: 'fa fa-sun-o'\n      cycle: 3\n    }\n    {\n      route: \"dashboard/orders\"\n      label: 'Orders'\n      provides: 'console'\n    }\n    # order widgets\n    {\n      template: \"coreOrderWidgets\"\n      provides: 'widget'\n    }\n    # products\n    {\n      route: 'createProduct'\n      label: 'Create'\n      icon: 'fa fa-plus'\n      provides: 'shortcut'\n    }\n    # users\n    {\n      route: 'dashboard/settings/account'\n      label: 'Organization Users'\n      description: 'Manage administrative access to shop.'\n      icon: 'fa fa-users'\n      provides: 'dashboard'\n      cycle: 3\n    }\n    # account profiles\n    {\n      route: 'account/profile'\n      label: 'Profile'\n      icon: 'fa fa-info-circle'\n      provides: 'userAccountDropdown'\n    }\n  ]\n  # permissions map to shopPermissions\n  permissions: [\n    {\n      label: \"Customers\"\n      permission: \"dashboard/customers\"\n      group: \"Shop Management\"\n    }\n    {\n      label: \"Promotions\"\n      permission: \"dashboard/promotions\"\n      group: \"Shop Management\"\n    }\n    {\n      label: \"Products\"\n      permission: \"dashboard/products\"\n      group: \"Shop Content\"\n    }\n    {\n      label: \"Shop Settings\"\n      permission: \"dashboard/settings\"\n      group: \"Shop Settings\"\n    }\n    {\n      label: \"Dashboard Access\"\n      permission: \"dashboard/settings/account\"\n      group: \"Shop Settings\"\n    }\n    {\n      label: \"Orders\"\n      permission: \"dashboard/orders\"\n      group: \"Shop Management\"\n    }\n  ]\n","###\n# The following security definitions use the ongoworks:security package.\n# Rules within a single chain stack with AND relationship. Multiple\n# chains for the same collection stack with OR relationship.\n# See https://github.com/ongoworks/meteor-security\n#\n# It's important to note that these security rules are for inserts,\n# updates, and removes initiated from untrusted (client) code.\n# Thus there may be other actions that certain roles are allowed to\n# take, but they do not necessarily need to be listed here if the\n# database operation is executed in a server method.\n###\n\n###\n# Assign to some local variables to keep code\n# short and sweet\n###\nCart = ReactionCore.Collections.Cart\nCustomers = ReactionCore.Collections.Customers\nDiscounts = ReactionCore.Collections.Discounts\nMedia = ReactionCore.Collections.Media\nOrders = ReactionCore.Collections.Orders\nPackages = ReactionCore.Collections.Packages\nProducts = ReactionCore.Collections.Products\nShipping =  ReactionCore.Collections.Shipping\nShops = ReactionCore.Collections.Shops\nTags = ReactionCore.Collections.Tags\nTaxes = ReactionCore.Collections.Taxes\nTranslations = ReactionCore.Collections.Translations\n\n###\n# Define some additional rule chain methods\n###\n\nSecurity.defineMethod 'ifShopIdMatches',\n  fetch: []\n  deny: (type, arg, userId, doc) ->\n    return doc.shopId isnt ReactionCore.getShopId()\n\nSecurity.defineMethod 'ifShopIdMatchesThisId',\n  fetch: []\n  deny: (type, arg, userId, doc) ->\n    return doc._id isnt ReactionCore.getShopId()\n\nSecurity.defineMethod 'ifFileBelongsToShop',\n  fetch: []\n  deny: (type, arg, userId, doc) ->\n    return doc.metadata.shopId isnt ReactionCore.getShopId()\n\n# If userId prop matches userId or both are not set\nSecurity.defineMethod 'ifUserIdMatches',\n  fetch: []\n  deny: (type, arg, userId, doc) ->\n    return (userId and doc.userId and doc.userId isnt userId) or (doc.userId and !userId)\n\n# Generic check for userId against any prop\n# TODO might be good to have this in the\n# ongoworks:security pkg as a built-in rule\nSecurity.defineMethod 'ifUserIdMatchesProp',\n  fetch: []\n  deny: (type, arg, userId, doc) ->\n    return doc[arg] isnt userId\n\n###\n# Define all security rules\n###\n\n###\n# Permissive security for users with the 'admin' role\n###\nSecurity.permit(['insert', 'update', 'remove'])\n  .collections([\n    Products,\n    Tags,\n    Translations,\n    Discounts,\n    Taxes,\n    Shipping,\n    Orders,\n    Packages\n  ])\n  .ifHasRole('admin')\n  .ifShopIdMatches()\n  .exceptProps(['shopId'])\n  .apply()\n\n###\n# Permissive security for users with the 'admin' role for FS.Collections\n###\nSecurity.permit(['insert', 'update', 'remove'])\n  .collections([Media])\n  .ifHasRole('admin')\n  .ifFileBelongsToShop()\n  # TODO should be a check here or elsewhere to\n  # make sure we don't allow editing metadata.shopId\n  .apply()\n\n###\n# Users with the 'admin' or 'owner' role may update and\n# remove their shop but may not insert one.\n###\nShops.permit(['update', 'remove'])\n  .ifHasRole(['admin', 'owner'])\n  .ifShopIdMatchesThisId()\n  .ifUserIdMatchesProp('ownerId')\n  .apply()\n\n###\n# Users with the 'owner' role may remove orders for their shop\n###\nOrders.permit('remove')\n  .ifHasRole('owner')\n  .ifUserIdMatchesProp('ownerId')\n  .ifShopIdMatches()\n  .exceptProps(['shopId'])\n  .apply()\n\n###\n# Can update cart from client. Must insert/remove carts using\n# server methods.\n# Can update all session carts if not logged in or user cart if logged in as that user\n# XXX should verify session match, but doesn't seem possible? Might have to move all cart updates to server methods, too?\n###\nCart.permit('update').ifUserIdMatches().exceptProps(['shopId']).apply()\n\n# Allow anonymous file downloads\n# XXX This is probably not actually how we want to handle file download security.\n_.each [ Media ], (fsCollection) ->\n  fsCollection.allow\n    download: -> return true\n\nBrowserPolicy.content.allowOriginForAll('*.bootstrapcdn.com');\nBrowserPolicy.content.allowOriginForAll('*.googleapis.com');\nBrowserPolicy.content.allowOriginForAll('*.fonts.gstatic.com');\n","Cart  = ReactionCore.Collections.Cart\nAccounts = ReactionCore.Collections.Accounts\nDiscounts = ReactionCore.Collections.Discounts\nMedia = ReactionCore.Collections.Media\nOrders = ReactionCore.Collections.Orders\nPackages = ReactionCore.Collections.Packages\nProducts = ReactionCore.Collections.Products\nShipping =  ReactionCore.Collections.Shipping\nShops = ReactionCore.Collections.Shops\nTags = ReactionCore.Collections.Tags\nTaxes = ReactionCore.Collections.Taxes\nTranslations = ReactionCore.Collections.Translations\n\n###\n# Reaction Server / amplify permanent sessions\n# If no id is passed we create a new session\n# Load the session\n# If no session is loaded, creates a new one\n###\n@ServerSessions = new Mongo.Collection(\"Sessions\")\nMeteor.publish 'Sessions', (id) ->\n  check id, Match.OneOf(String, null)\n\n  created = new Date().getTime()\n  id = ServerSessions.insert(created: created) unless id\n  serverSession = ServerSessions.find(id)\n\n  if serverSession.count() is 0\n    id = ServerSessions.insert(created: created)\n    serverSession = ServerSessions.find(id)\n  return serverSession\n\n###\n# CollectionFS - Image/Video Publication\n###\nMeteor.publish \"media\", ->\n  return Media.find({ 'metadata.shopId': ReactionCore.getShopId(@) }, {sort: {\"metadata.priority\": 1}})\n\n###\n# i18n - translations\n###\nMeteor.publish \"Translations\", (sessionLanguage) ->\n  check sessionLanguage, String\n  return Translations.find({ $or: [{'i18n':'en'},{'i18n': sessionLanguage}] })\n\n###\n# userProfile\n# get any user name,social profile image\n# should be limited, secure information\n###\nMeteor.publish \"UserProfile\", (profileId) ->\n  check profileId, Match.OneOf(String, null)\n\n  if profileId?\n    if Roles.userIsInRole(this.userId, ['dashboard/orders','owner','admin','dashboard/customers'])\n      return Meteor.users.find _id: profileId,\n        fields:\n          profile: 1\n          emails: 1\n    else\n      ReactionCore.Events.info \"user profile access denied\"\n      return []\n  else\n    ReactionCore.Events.info \"profileId not defined. access denied\"\n    return []\n\n###\n#  Packages contains user specific configuration\n#  settings, package access rights\n###\nMeteor.publish \"Packages\", ->\n  shop = ReactionCore.getCurrentShop(this)\n  if shop\n    if Roles.userIsInRole(this.userId, ['dashboard','owner','admin'])\n      return Packages.find shopId: shop._id\n    else\n      # settings.public published\n      # other access to settings,etc is blocked\n      # for non administrative views\n      return Packages.find { shopId: shop._id},\n        fields:\n          name: true\n          enabled: true\n          registry: true\n          shopId: true\n          'settings.public': true\n      # TODO Filter roles/security here for package routes/template access.\n  else\n    return []\n\n###\n# shops\n###\nMeteor.publish 'shops', ->\n  ReactionCore.getCurrentShopCursor(@)\n\nMeteor.publish 'shopMembers', ->\n  self = @\n  handle = ReactionCore.getCurrentShopCursor(self).observeChanges\n    added: (id) ->\n      shop = Shops.findOne id\n      memberIds = _.pluck shop.members, \"userId\"\n      Meteor.users.find({_id: {$in: memberIds}}, {fields: {emails: 1, profile: 1 }}).forEach (user) ->\n        self.added(\"users\", user._id, user)\n    changed: (id) ->\n      shop = Shops.findOne id\n      memberIds = _.pluck shop.members, \"userId\"\n      Meteor.users.find({_id: {$in: memberIds}}, {fields: {emails: 1, profile: 1 }}).forEach (user) ->\n        self.added(\"users\", user._id, user)\n  self.ready()\n  self.onStop ->\n    handle.stop()\n  return\n\n###\n# products\n###\nMeteor.publish 'products', (userId, shops) ->\n  shop = ReactionCore.getCurrentShop(@)\n  if shop\n    selector = {shopId: shop._id}\n    ## add additional shops\n    if shops\n      selector = {shopId: {$in: shops}}\n    unless Roles.userIsInRole(this.userId, ['admin'])\n      selector.isVisible = true\n    return Products.find(selector)\n  else\n    return []\n\nMeteor.publish 'product', (productId) ->\n  check productId, String\n\n  shop = ReactionCore.getCurrentShop(@) #todo: wire in shop\n  if productId.match /^[A-Za-z0-9]{17}$/\n    return Products.find(productId)\n  else\n    return Products.find({handle: { $regex : productId, $options:\"i\" } })\n\n###\n# orders\n###\nMeteor.publish 'orders', (userId) ->\n  check userId, Match.Optional(String)\n  # only admin can get all orders\n  if Roles.userIsInRole(this.userId, ['admin','owner'])\n    return Orders.find( shopId: ReactionCore.getShopId(@) )\n  else\n    return []\n\n###\n# account orders\n###\nMeteor.publish 'accountOrders', (sessionId, userId) ->\n  check sessionId, Match.OptionalOrNull(String)\n  check userId, Match.OptionalOrNull(String)\n  shopId = ReactionCore.getShopId(@)\n  # cure for null query match and added check\n  if userId and userId isnt @.userId then return []\n  unless userId then userId = ''\n  unless sessionId then sessionId = ''\n  # publish user / session orders\n  return Orders.find({'shopId': shopId, $or: [{'userId': userId}, 'sessions': $in: [ sessionId ]] })\n\n###\n# cart\n###\nMeteor.publish 'cart', (sessionId, userId) ->\n  check sessionId, Match.OptionalOrNull(String)\n  check userId, Match.OptionalOrNull(String)\n  if !sessionId then return\n  shopId = ReactionCore.getShopId(@)\n\n  # getCurrentCart returns cart cursor\n  currentCart = getCurrentCart sessionId, shopId, @userId\n  ReactionCore.Events.debug \"Publishing cart sessionId:\" + sessionId\n  return currentCart\n\n###\n# accounts\n###\nMeteor.publish 'accounts', (sessionId, userId) ->\n  check sessionId, Match.OneOf(String, null)\n  check userId, Match.OneOf(String, null)\n  shopId = ReactionCore.getShopId(@)\n\n  # admin gets it all\n  if Roles.userIsInRole(this.userId, ['admin','owner'])\n    return Accounts.find shopId: shopId\n  # returns userId (authenticated account)\n  else\n    ReactionCore.Events.debug \"subscribe account\", sessionId, this.userId\n    # get current account\n    if @userId # userAccount\n      accountId = ReactionCore.Collections.Accounts.findOne('userId': this.userId)?._id\n    else # sessionAccount\n      accountId = ReactionCore.Collections.Accounts.findOne('sessions': sessionId)?._id\n    unless accountId\n      accountId = ReactionCore.Collections.Accounts.insert 'sessions': [sessionId], 'userId': userId\n\n    #return accountId\n    ReactionCore.Events.info \"publishing account\", accountId\n    return ReactionCore.Collections.Accounts.find accountId\n\n###\n# tags\n###\nMeteor.publish \"tags\", ->\n  return Tags.find(shopId: ReactionCore.getShopId())\n\n###\n# shipping\n###\nMeteor.publish \"shipping\", ->\n  return Shipping.find(shopId: ReactionCore.getShopId())\n\n###\n# taxes\n###\nMeteor.publish \"taxes\", ->\n  return Taxes.find(shopId: ReactionCore.getShopId())\n\n###\n# discounts\n###\nMeteor.publish \"discounts\", ->\n  return Discounts.find(shopId: ReactionCore.getShopId())\n","###\n# Fixtures is a global server object that it can be reused in packages\n# assumes collection data in reaction-core/private/data, optionally jsonFile\n# use jsonFile when calling from another package, as we can't read the assets from here\n###\nPackageFixture = ->\n  # loadData inserts json into collections on app initilization\n  # ex:\n  #   jsonFile =  Assets.getText(\"private/data/Shipping.json\")\n  #   Fixtures.loadData ReactionCore.Collections.Shipping, jsonFile\n  #\n  loadData: (collection, jsonFile) ->\n    #check collection, ReactionCore.Schemas[collection._name]\n    check jsonFile, Match.Optional(String)\n    if collection.find().count() > 0 then return\n\n   # load fixture data\n    ReactionCore.Events.info \"Loading fixture data for \"+collection._name\n    unless jsonFile\n      json = EJSON.parse Assets.getText(\"private/data/\"+collection._name+\".json\")\n    else\n      json = EJSON.parse jsonFile\n\n    # loop through and import\n    for item, index in json\n      collection._collection.insert item, (error, result) ->\n        if error\n          ReactionCore.Events.info (error + \"Error adding \" + index + \" items to \" + collection._name)\n          return false\n    if index > 0\n      ReactionCore.Events.info (\"Success adding \" + index + \" items to \" + collection._name)\n      return\n    else\n      ReactionCore.Events.info (\"No data imported to \" + collection._name)\n      return\n\n  #\n  # updates package settings, accepts json string\n  # example:\n  #  Fixtures.loadSettings Assets.getText(\"settings/reaction.json\")\n  #\n  # This basically \"hardcodes\" all the settings. You can change them\n  # via admin etc for the session, but when the server restarts they'll\n  # be restored back to the supplied json\n  #\n  loadSettings: (json) ->\n    check json, String\n    validatedJson = EJSON.parse json\n    # warn if this isn't an array of packages\n    unless _.isArray(validatedJson[0])\n      ReactionCore.Events.warn \"Load Settings is not an array. Failed to load settings.\"\n      return\n    # loop through and import\n    for pkg in validatedJson\n      for item in pkg\n        exists = ReactionCore.Collections.Packages.findOne('name': item.name)\n        if exists\n          result = ReactionCore.Collections.Packages.upsert(\n            { 'name': item.name }, {\n              $set:\n                'settings': item.settings\n                'enabled': item.enabled\n            },\n            multi: true\n            upsert: true\n            validate: false)\n          ReactionCore.Events.info \"loaded local package data: \" + item.name\n      #   return\n      # return\n\n  #\n  # loadI18n for defined shops language source json\n  # ex: Fixtures.loadI18n()\n  #\n  loadI18n: (collection = ReactionCore.Collections.Translations) ->\n    languages = []\n    return if collection.find().count() > 0\n    # load languages from shops array\n    shop = ReactionCore.Collections.Shops.findOne()\n    # find every file in private/data/i18n where <i18n>.json\n    ReactionCore.Events.info \"Loading fixture data for \" + collection._name\n    # ensures that a language file is loaded if all translations are missing\n    unless shop?.languages then shop.languages = [{'i18n':'en'}]\n\n    for language in shop.languages\n      json = EJSON.parse Assets.getText(\"private/data/i18n/\" + language.i18n + \".json\")\n\n      for item in json\n        collection._collection.insert item, (error, result) ->\n          if error\n            ReactionCore.Events.info (error + \"Error adding \" + language.i18n + \" items to \" + collection._name)\n            return\n        ReactionCore.Events.info (\"Success adding \"+ language.i18n + \" to \" + collection._name)\n    return\n\n\n# instantiate fixtures\n@Fixtures = new PackageFixture\n\n# helper for creating admin users\ngetDomain = (url) ->\n  unless url then url = process.env.ROOT_URL\n  domain = url.match(/^https?\\:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1]\n  return domain\n\n###\n# Three methods to create users default (empty db) admin user\n###\ncreateDefaultAdminUser = ->\n  # options from set env variables\n  options = {}\n  options.email = process.env.METEOR_EMAIL #set in env if we want to supply email\n  options.username = process.env.METEOR_USER\n  options.password = process.env.METEOR_AUTH\n  domain = getDomain()\n\n  # options from mixing known set ENV production variables\n  if process.env.METEOR_EMAIL\n    url = process.env.MONGO_URL #pull from default db connect string\n    options.username = \"Administrator\"\n    unless options.password then options.password = url.substring(url.indexOf(\"/\") + 2,url.indexOf(\"@\")).split(\":\")[1]\n    ReactionCore.Events.warn (\"\\nIMPORTANT! DEFAULT USER INFO (ENV)\\n  EMAIL/LOGIN: \" + options.email + \"\\n  PASSWORD: \" + options.password + \"\\n\")\n  else\n    # random options if nothing has been set\n    options.username = Meteor.settings?.reaction?.METEOR_USER || \"Administrator\"\n    options.password = Meteor.settings?.reaction?.METEOR_AUTH || Random.secret(8)\n    options.email = Meteor.settings?.reaction?.METEOR_EMAIL || Random.id(8).toLowerCase() + \"@\" + domain\n    ReactionCore.Events.warn (\"\\nIMPORTANT! DEFAULT USER INFO (RANDOM)\\n  EMAIL/LOGIN: \" + options.email + \"\\n  PASSWORD: \" + options.password + \"\\n\")\n  # newly created admin user\n  accountId = Accounts.createUser options\n  # add default roles and update shop with admin user\n  Roles.addUsersToRoles accountId, ['manage-users','owner','admin']\n  shopId = Shops.findOne()._id\n  Shops.update shopId,\n    $set:\n      ownerId: accountId\n    $addToSet:\n      emails: {'address': options.email, 'verified': true}\n      domains: Meteor.settings.ROOT_URL\n    $push:\n      members:\n        isAdmin: true\n        userId: accountId\n        permissions: [\n            \"dashboard/customers\",\n            \"dashboard/products\",\n            \"dashboard/settings\",\n            \"dashboard/settings/account\",\n            \"dashboard/orders\"\n            ]\n\n###\n# load core fixture data\n###\nloadFixtures = ->\n  # Load data from json files\n  Fixtures.loadData ReactionCore.Collections.Shops\n  Fixtures.loadData ReactionCore.Collections.Products\n  Fixtures.loadData ReactionCore.Collections.Tags\n  Fixtures.loadI18n ReactionCore.Collections.Translations\n\n  # if ROOT_URL update shop domain\n  # for now, we're assuming the first domain is the primary\n  currentDomain = Shops.findOne().domains[0]\n  if currentDomain isnt getDomain()\n    ReactionCore.Events.info \"Updating domain to \" + getDomain()\n    Shops.update({domains:currentDomain},{$set:{\"domains.$\":getDomain()}})\n\n\n  # Load data from settings/json files\n  unless Accounts.loginServiceConfiguration.find().count()\n    if Meteor.settings.public?.facebook?.appId\n      Accounts.loginServiceConfiguration.insert\n        service: \"facebook\",\n        appId: Meteor.settings.public.facebook.appId,\n        secret: Meteor.settings.facebook.secret\n\n  # Loop through ReactionRegistry.Packages object, which now has all packages added by\n  # calls to register\n  # removes package when removed from meteor, retriggers when package added\n  unless ReactionCore.Collections.Packages.find().count() is Object.keys(ReactionRegistry.Packages).length\n    _.each ReactionRegistry.Packages, (config, pkgName) ->\n      Shops.find().forEach (shop) ->\n        ReactionCore.Events.info \"Initializing \"+ pkgName\n        ReactionCore.Collections.Packages.upsert {shopId: shop._id, name: pkgName},\n          $setOnInsert:\n            enabled: !!config.autoEnable\n            settings: config.settings\n            registry: config.registry\n            shopPermissions: config.permissions\n            services: config.services\n\n    # remove unused packages\n    Shops.find().forEach (shop) ->\n      ReactionCore.Collections.Packages.find().forEach (pkg) ->\n        unless _.has(ReactionRegistry.Packages, pkg.name)\n          ReactionCore.Events.info (\"Removing \"+ pkg.name)\n          ReactionCore.Collections.Packages.remove {shopId: shop._id, name: pkg.name}\n\n  # create default admin user account\n  createDefaultAdminUser() unless Meteor.users.find().count()\n\n###\n# Execute start up fixtures\n###\nMeteor.startup ->\n  loadFixtures()\n\n  # notifiy that we're done with initialization\n  ReactionCore.Events.info \"Reaction Commerce initialization finished. \"\n","Factory.define 'shop', ReactionCore.Collections.Shops,\n  name: -> Fake.sentence 2\n  description: -> Fake.paragraph 20\n  keywords: -> Fake.sentence 20\n  addressBook: -> [\n    fullName: Fake.sentence 2\n    address1: Fake.sentence 2\n    address2: Fake.sentence 2\n    city: Fake.word()\n    company: Fake.word()\n    phone: \"Phone\"\n    region: Fake.word()\n    postal: _.random 10000, 100000\n    country: \"USA\"\n    isCommercial: false\n    isShippingDefault: true\n    isBillingDefault: true\n    metafields: undefined\n  ]\n  domains: [\"localhost\"]\n  email: 'root@localhost'\n  currency: \"USD\"\n  currencies: []\n  public: true\n  timezone: '1'\n  baseUOM: \"OZ\"\n  ownerId: '1'\n  members: []\n  metafields: []\n  createdAt: -> new Date()\n  updatedAt: -> new Date()\n\n\nFactory.define 'product', ReactionCore.Collections.Products,\n  shopId: Factory.get 'shop'\n  title: Fake.word\n  pageTitle: -> Fake.sentence 5\n  description: -> Fake.paragraph 20\n  productType: -> Fake.sentence 2\n  vendor: ''\n#   metafields:\n  variants: -> [\n    # TODO: can not do Factory.get 'productVariants' due to RangeError: Maximum call stack size exceeded\n    _id: 1\n    compareAtPrice: _.random 0, 1000\n    weight: _.random 0, 10\n    inventoryManagement: false\n    inventoryPolicy: false\n    lowInventoryWarningThreshold: 1\n    price: _.random 10, 1000\n    title: Fake.word()\n    optionTitle: Fake.word()\n    createdAt: new Date\n    updatedAt: new Date\n  ]\n  requiresShipping: true\n#   parcel:\n  hashtags: []\n#   twitterMsg:\n#   facebookMsg:\n#   googleplusMsg:\n#   pinterestMsg:\n#   metaDescription:\n#   handle:\n  isVisible: true\n  publishedAt: -> new Date\n#   publishedScope:\n#   templateSuffix:\n  createdAt: -> new Date\n  updatedAt: -> new Date\n\n\nFactory.define 'productVariants', new Meteor.Collection('ProductVariants'),\n#  parentId: 1\n#  cloneId:\n#  index:\n#  barcode:\n  compareAtPrice: -> _.random 0, 1000\n#  fulfillmentService:\n  weight: -> _.random 0, 1000\n  inventoryManagement: false\n  inventoryPolicy: false\n  lowInventoryWarningThreshold: 1\n  inventoryQuantity: -> _.random 0, 100\n  price: -> _.random 10, 1000\n#  sku:\n#  taxable:\n  title: Fake.word\n  optionTitle: Fake.word\n#  metafields:\n#  positions:\n  createdAt: -> new Date\n  updatedAt: -> new Date\n\n\nFactory.define 'tag', ReactionCore.Collections.Tags,\n  name: Fake.word\n  slug: Fake.word\n  position: -> _.random 0, 100000\n#  relatedTagIds: []\n  isTopLevel: true\n  shopId: Factory.get 'shop'\n  createdAt: -> new Date\n  updatedAt: -> new Date\n","Packages = ReactionCore.Collections.Packages\n\nMeteor.methods\n  ###\n  # determine user's countryCode and return locale object\n  ###\n  getLocale: ->\n    @unblock() #prevent waiting for locale\n    result = {}\n    ip = this.connection.httpHeaders['x-forwarded-for']\n\n    try\n      geo = new GeoCoder(geocoderProvider: \"freegeoip\")\n      countryCode = geo.geocode(ip)[0].countryCode.toUpperCase()\n\n    shop = ReactionCore.Collections.Shops.findOne ReactionCore.getShopId()\n\n    unless shop\n      return result\n\n    # local development always returns 'RD' so we default to 'US'\n    # unless shop address has been defined\n    if !countryCode or countryCode is 'RD'\n      if shop.addressBook\n        countryCode = shop.addressBook[0].country\n      else\n        countryCode = 'US'\n\n    try\n      result.locale = shop.locales.countries[countryCode]\n      result.currency = {}\n      # get currency formats for locale, default if none\n      # comma string/list can be used, but for now we're only using one result\n      localeCurrency = shop.locales.countries[countryCode].currency.split(',')\n      for currency in localeCurrency\n        if shop.currencies[currency]\n          result.currency = shop.currencies[currency]\n          if shop.currency isnt currency\n            #TODO Add some alternate configurable services like Open Exchange Rate\n            rateUrl = \"http://rate-exchange.herokuapp.com/fetchRate?from=\" + shop.currency + \"&to=\" + currency\n            exchangeRate = HTTP.get rateUrl\n            result.currency.exchangeRate = exchangeRate.data\n          return result #returning first match.\n\n    return result\n\n  ###\n  # determine user's full location for autopopulating addresses\n  ###\n  locateAddress: (latitude, longitude) ->\n    check latitude, Match.Optional(Number)\n    check longitude, Match.Optional(Number)\n\n    try\n      if latitude? and longitude?\n        geo = new GeoCoder()\n        address = geo.reverse latitude, longitude\n      else\n        ip = this.connection.httpHeaders['x-forwarded-for']\n        if ip\n          geo = new GeoCoder(geocoderProvider: \"freegeoip\")\n          address = geo.geocode ip\n    catch error\n      # something went wrong; we'll use the default location and\n      # log the error on the server\n      if latitude? and longitude?\n        ReactionCore.Events.info \"Error in locateAddress for latitude/longitude lookup (\" + latitude + \",\" + longitude + \"):\" + error.message\n      else\n        ReactionCore.Events.info \"Error in locateAddress for IP lookup (\" + ip + \"):\" + error.message\n\n    if address?.length\n      return address[0]\n    else # default location if nothing found is US\n      return {\n        latitude: null\n        longitude: null\n        country: \"United States\"\n        city: null\n        state: null\n        stateCode: null\n        zipcode: null\n        streetName: null\n        streetNumber: null\n        countryCode: \"US\"\n      }\n\n  ###\n  # method to insert or update tag with hierarchy\n  # tagName will insert\n  # tagName + tagId will update existing\n  # currentTagId will update related/hierarchy\n  ###\n  updateHeaderTags: (tagName, tagId, currentTagId) ->\n    check tagName, String\n    check tagId, Match.OneOf(String, null, undefined)\n    check currentTagId, Match.Optional(String)\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    newTag =\n      slug: getSlug tagName\n      name: tagName\n\n    #new tags\n    if tagId #just an update\n      Tags.update tagId, {$set:newTag}\n      ReactionCore.Events.info \"Changed name of tag \" + tagId + \" to \" + tagName\n    else # create a new tag\n      #prevent duplicate tags by checking for existing\n      existingTag = Tags.findOne \"name\":tagName\n      #if a tag already exists with that name\n      if existingTag\n        if currentTagId\n          Tags.update currentTagId, {$addToSet: {\"relatedTagIds\": existingTag._id}}\n          ReactionCore.Events.info 'Added tag \"' + existingTag.name + '\" to the related tags list for tag ' + currentTagId\n        else\n          Tags.update existingTag._id, {$set:{\"isTopLevel\":true}}\n          ReactionCore.Events.info 'Marked tag \"' + existingTag.name + '\" as a top level tag'\n      #if a tag with that name does not exist yet\n      else\n        newTag.isTopLevel = !currentTagId\n        newTag.shopId = ReactionCore.getShopId()\n        newTag.updatedAt = new Date()\n        newTag.createdAt = new Date()\n        newTagId = Tags.insert newTag\n        ReactionCore.Events.info 'Created tag \"' + newTag.name + '\"'\n        if currentTagId\n          Tags.update currentTagId, {$addToSet: {\"relatedTagIds\": newTagId}}\n          ReactionCore.Events.info 'Added tag \"' + newTag.name + '\" to the related tags list for tag ' + currentTagId\n    return;\n\n  removeHeaderTag: (tagId, currentTagId) ->\n    check tagId, String\n    check currentTagId, String\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    Tags.update(currentTagId, {$pull: {\"relatedTagIds\": tagId}})\n    # if not in use delete from system\n    productCount = Products.find({\"hashtags\":{$in:[tagId]}}).count()\n    relatedTagsCount = Tags.find({\"relatedTagIds\":{$in:[tagId]}}).count()\n\n    if (productCount is 0) and (relatedTagsCount is 0)\n      return Tags.remove(tagId)\n\n  ###\n  # Helper method to remove all translations, and reload from jsonFiles\n  ###\n  flushTranslations: ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    ReactionCore.Collections.Translations.remove({})\n    Fixtures.loadI18n()\n    ReactionCore.Events.info Meteor.userId() + \" Flushed Translations.\"\n","# Additional match method Optional or null, undefined\nMatch.OptionalOrNull = (pattern) -> Match.OneOf undefined, null, pattern\n\n###\n#  getCurrentCart(sessionId)\n#  create, merge the session and user carts and return cart cursor\n#\n# There should be one cart for each independent, non logged in user session\n# When a user logs in that cart now belongs to that user and we use the a single user cart.\n# If they are logged in on more than one devices, regardless of session, the user cart will be used\n# If they had more than one cart, on more than one device,logged in at seperate times then merge the carts\n#\n###\n@getCurrentCart = (sessionId, shopId, userId) ->\n  check sessionId, String\n  check shopId, Match.OptionalOrNull(String)\n  check userId, Match.OptionalOrNull(String)\n\n  shopid = shopId || ReactionCore.getShopId(@)\n  userId = userId || \"\" # no null\n\n  Cart = ReactionCore.Collections.Cart\n  currentCarts = Cart.find 'shopId': shopId, 'sessions': $in: [ sessionId ]\n  #\n  # if sessionCart just logged out, remove sessionId and create new sessionCart\n  #\n  if currentCarts.count() is 0\n    newCartId = Cart.insert  sessions: [sessionId], shopId: shopId, userId: userId\n    ReactionCore.Events.debug \"Created new session cart\", newCartId\n    currentCart = Cart.find newCartId\n    return currentCart\n\n  # check for user carts and merge if necessary\n  currentCarts.forEach (cart) ->\n    #\n    # if user just logged out, remove sessionId and create new sessionCart\n    # leave the userId so we can merge with this cart when user logs back in\n    #\n    if cart.userId and !userId\n      Cart.update cart._id, $pull: 'sessions': sessionId\n      ReactionCore.Events.debug \"Logging out. Removed session from cart.\"\n    #\n    # if sessionCart is first time authenticated add user to cart\n    # add sessionId to any existing userCart\n    # and then merge session cart into userCart\n    # and remove sessionCart so that the user has clean cart on logout\n    #\n    if userId\n      userCart = Cart.findOne\n        'userId': userId\n        'shopId': shopId\n        'sessions': $nin: [ sessionId ]\n\n      # merge session cart into usercart\n      if userCart and !cart.userId\n        # catch undefined items\n        unless cart.items then cart.items = []\n        # update userCart and remove sessionCart\n        Cart.update userCart._id,\n            $set:\n              userId: userId\n            $addToSet:\n              items: $each: cart.items\n              sessions: $each: cart.sessions\n        Cart.remove cart._id\n        ReactionCore.Events.debug \"Updated user cart\", cart._id, \"with sessionId: \" + sessionId\n        return Cart.find userCart._id\n      # neither a user existing user cart, just add userId\n      else if !userCart and !cart.userId\n        Cart.update cart._id,\n          $set:\n            userId: userId\n        return Cart.find cart._id\n\n  # if no user cart actions, just return current cart\n  if currentCarts.count() is 1\n    cart = currentCarts.fetch()\n    ReactionCore.Events.debug \"getCurrentCart returned sessionId:\" + sessionId + \" cartId: \" + cart[0]._id\n    currentCarts = Cart.find cart[0]._id\n    return currentCarts\n\n  # if all patterns failed.\n  ReactionCore.Events.debug \"getCurrentCart error:\", currentCarts\n  return currentCarts\n\n###\n#  Cart Methods\n###\nMeteor.methods\n  ###\n  # when we add an item to the cart, we want to break all relationships\n  # with the existing item. We want to fix price, qty, etc into history\n  # however, we could check reactively for price /qty etc, adjustments on\n  # the original and notify them\n  ###\n  addToCart: (cartId, productId, variantData, quantity) ->\n    check cartId, String\n    check productId, String\n    check variantData, Object\n    check quantity, String\n\n    shopId = ReactionCore.getShopId(@)\n    currentCart = Cart.findOne cartId\n\n    # TODO: refactor to check currentCart instead of another findOne\n    cartVariantExists = Cart.findOne _id: currentCart._id, \"items.variants._id\": variantData._id\n    if cartVariantExists\n      Cart.update\n        _id: currentCart._id,\n        \"items.variants._id\": variantData._id,\n        { $set: {updatedAt: new Date()}, $inc: {\"items.$.quantity\": quantity}},\n      (error, result) ->\n        ReactionCore.Events.info \"error adding to cart\" if error\n        ReactionCore.Events.info Cart.simpleSchema().namedContext().invalidKeys() if error\n    # add new cart items\n    else\n      product = ReactionCore.Collections.Products.findOne productId\n      Cart.update _id: currentCart._id,\n        $addToSet:\n          items:\n            _id: Random.id()\n            shopId: product.shopId\n            productId: productId\n            quantity: quantity\n            variants: variantData\n      , (error, result) ->\n        ReactionCore.Events.info \"error adding to cart\" if error\n        ReactionCore.Events.warn error if error\n\n  ###\n  # removes a variant from the cart\n  ###\n  removeFromCart: (sessionId, cartId, variantData) ->\n    check sessionId, String\n    check cartId, String\n    check variantData, Object\n\n    # We select on sessionId or userId, too, for security\n    return Cart.update\n      _id: cartId\n      $or: [\n        {userId: @userId}\n        {sessionId: sessionId}\n      ]\n    , {$pull: {\"items\": {\"variants\": variantData} } }\n\n\n  ###\n  # adjust inventory when an order is placed\n  ###\n  inventoryAdjust: (orderId) ->\n    check orderId, String\n\n    order = Orders.findOne orderId\n    return false unless order\n    for product in order.items\n      Products.update {_id: product.productId, \"variants._id\": product.variants._id}, {$inc: {\"variants.$.inventoryQuantity\": -product.quantity }}\n    return\n\n  ###\n  # when a payment is processed we want to copy the cart\n  # over to an order object, and give the user a new empty\n  # cart. reusing the cart schema makes sense, but integrity of\n  # the order, we don't want to just make another cart item\n  #\n  # TODO:  Partial order processing, shopId processing\n  #\n  ###\n  copyCartToOrder: (cartId) ->\n    check cartId, String\n    # extra validation + transform methods\n    cart = ReactionCore.Collections.Cart.findOne(cartId)\n    invoice = {}\n\n    # transform cart pricing into order invoice\n    invoice.shipping = cart.cartShipping()\n    invoice.subtotal = cart.cartSubTotal()\n    invoice.taxes = cart.cartTaxes()\n    invoice.discounts = cart.cartDiscounts()\n    invoice.total =  cart.cartTotal()\n    cart.payment.invoices = [invoice]\n\n    # attach an email if user cart\n    if cart.userId and !cart.email\n      cart.email = Meteor.user(cart.userId).emails[0].address\n\n    # todo: these defaults should be done in schema\n    now = new Date()\n    cart.createdAt = now\n    cart.updatedAt = now\n\n    # set workflow status\n    cart.state = \"orderCreated\"\n    cart.status = \"new\"\n\n    # update orderId\n    cart._id = Random.id()\n    cart.cartId = cartId\n\n    ###\n    # final sanity check\n    # todo add `check cart, ReactionCore.Schemas.Order`\n    # and add some additional validation that all is good\n    # and no tampering has occurred\n    ###\n\n    try\n      orderId = Orders.insert cart\n      if orderId\n        Cart.remove _id: cartId\n        ReactionCore.Events.info \"Completed cart for \" + cartId\n\n    catch error\n      ReactionCore.Events.info \"error in order insert\"\n      ReactionCore.Events.warn error, Orders.simpleSchema().namedContext().invalidKeys()\n      return error\n\n    # return new orderId\n    return orderId\n","###\n# methods typically used for checkout (shipping, taxes, etc)\n###\nMeteor.methods\n  ###\n  # gets shipping rates and updates the users cart methods\n  # TODO: add orderId argument/fallback\n  ###\n  updateShipmentQuotes: (cartId) ->\n    return unless cartId\n    check cartId, String\n    @unblock\n    cart = ReactionCore.Collections.Cart.findOne(cartId)\n    if cart\n      # get fresh quotes\n      # TODO: Apply rate filters here\n      rates = Meteor.call \"getShippingRates\", cart\n\n      # update users cart\n      if rates.length > 0\n        ReactionCore.Collections.Cart.update '_id': cartId,\n          $set:\n            'shipping.shipmentQuotes': rates\n\n      # return in the rates object\n      ReactionCore.Events.debug rates\n      return\n\n\n  ###\n  #  just gets rates, without updating anything\n  ###\n  getShippingRates: (options) ->\n    check options, Object\n    # get shipping rates for each provider\n    rates = []\n    selector = {shopId:  ReactionCore.getShopId()}\n    # if we have products from multiple shops in the cart.items we have to select the shipping options from those shops\n    shops = []\n    for product in options.items\n      if product.shopId not in shops\n        shops.push product.shopId\n\n    # not sure if this is the correct condition since it will most certainly always be positive, if there are any products in the cart\n    shops.push ReactionCore.getShopId() if ReactionCore.getShopId() not in shops\n    if shops?.length > 0\n      selector = {shopId: {$in: shops}}\n    shipping = ReactionCore.Collections.Shipping.find(selector);\n    # flat rate / table shipping rates\n    shipping.forEach (shipping) ->\n      ## get all enabled rates\n      for method, index in shipping.methods when method.enabled is true\n        unless method.rate then method.rate = 0 #\n        unless method.handling then method.handling = 0\n        # rules\n\n        # rate is shipping and handling\n        rate = method.rate+method.handling\n        rates.push carrier: shipping.provider.label, method: method, rate: rate, shopId: shipping.shopId\n\n    # TODO:\n    # wire in external shipping methods here, add to rates\n\n    # return in the rates object\n    ReactionCore.Events.info \"getShippingrates returning rates\"\n    ReactionCore.Events.debug \"rates\", rates\n    return rates\n\n  ###\n  # add payment method\n  ###\n  paymentMethod: (cartId, paymentMethod) ->\n    check cartId, String\n    check paymentMethod, Object\n    return Cart.update _id: cartId, {$addToSet:{\"payment.paymentMethod\":paymentMethod}}\n","Meteor.methods\n  ###\n  # Adds tracking information to order\n  # Call after any tracking code is generated\n  ###\n  addTracking: (orderId, tracking) ->\n    check orderId, String #at least make sure it's an ID and not a sneaky selector\n    check tracking, String\n    #update tracking\n    return Orders.update(orderId, {$set: {\"shipping.shipmentMethod.tracking\":tracking}})\n\n  ###\n  # adds email to existing order\n  ###\n  addOrderEmail: (orderId, email) ->\n    check orderId, String #at least make sure it's an ID and not a sneaky selector\n    check email, String\n    #todo: regex email, update Accounts email with matching sessionId\n    return Orders.update(orderId, {$set: {\"email\":email}})\n\n  ###\n  # Save supplied order workflow state\n  ###\n  updateWorkflow: (orderId, currentState) ->\n    check orderId, String\n    check currentState, String\n    # update order status\n    Orders.update(orderId, {$set: {\"state\":currentState}})\n    return Meteor.call \"updateHistory\", orderId, currentState\n\n  ###\n  # Add files/documents to order\n  # use for packing slips, labels, customs docs, etc\n  ###\n  updateDocuments: (orderId, docId, docType) ->\n    check orderId, String\n    check docId, String\n    check docType, String\n    #update docs\n    return Orders.update orderId,\n      $addToSet:\n        \"documents\":\n          docId: docId\n          docType: docType\n  ###\n  # Add to order event history\n  ###\n  updateHistory: (orderId, event, value) ->\n    check orderId, String\n    check event, String\n    check value, String\n    # update history\n    return Orders.update orderId,\n      $addToSet:\n        \"history\":\n          event: event\n          value: value\n          userId: Meteor.userId()\n          updatedAt: new Date()\n\n  ###\n  # Finalize any payment where mode is \"authorize\"\n  # and status is \"approved\", reprocess as \"capture\"\n  # TODO: add tests working with new payment methods\n  # TODO: refactor to use non Meteor.namespace\n  ###\n  processPayments: (orderId) ->\n    check orderId, String\n    # process payment\n    order = Orders.findOne(orderId)\n    for paymentMethod,index in order.payment.paymentMethod\n      if paymentMethod.mode is 'authorize' and paymentMethod.status is 'approved'\n        Meteor[paymentMethod.processor].capture paymentMethod.transactionId, paymentMethod.amount, (error,result) ->\n          if result.capture?\n            transactionId = paymentMethod.transactionId\n            Orders.update { \"_id\": orderId, \"payment.paymentMethod.transactionId\": transactionId},\n              $set: {\n                \"payment.paymentMethod.$.transactionId\": result.capture.id\n                \"payment.paymentMethod.$.mode\": \"capture\"\n                \"payment.paymentMethod.$.status\": \"completed\"\n              }\n          return\n    return\n","Media = ReactionCore.Collections.Media\n\nMeteor.methods\n  ###\n  # the cloneVariant method copies variants, but will also create and clone child variants (options)\n  # productId,variantId to clone\n  # add parentId to create children\n  ###\n  cloneVariant: (productId, variantId, parentId) ->\n    check productId, String\n    check variantId, String\n    check parentId, Match.Optional(String)\n    # clone variant\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    product = Products.findOne(productId)\n    variant = (variant for variant in product.variants when variant._id is variantId)\n    return false unless variant.length > 0\n\n    clone = variant[0]\n    clone._id = Random.id()\n\n    if parentId\n      ReactionCore.Events.debug \"create child clone\"\n      clone.parentId = variantId\n      delete clone.inventoryQuantity\n      Products.update({_id:productId}, {$push: {variants: clone}}, {validate: false})\n      return clone._id\n\n    #clean clone\n    clone.cloneId = productId\n    delete clone.updatedAt\n    delete clone.createdAt\n    delete clone.inventoryQuantity\n    delete clone.title\n    Products.update({_id:productId}, {$push: {variants: clone}}, {validate: false})\n\n    #make child clones\n    children = (variant for variant in product.variants when variant.parentId is variantId)\n    if children.length > 0\n      ReactionCore.Events.debug \"clone children\"\n      for childClone in children\n        childClone._id = Random.id()\n        childClone.parentId = clone._id\n        Products.update({_id:productId}, {$push: {variants: childClone}}, {validate: false})\n\n    return clone._id\n\n  ###\n  # initializes empty variant template (all others are clones)\n  # should only be seen when all variants have been deleted from a product.\n  ###\n  createVariant: (productId, newVariant) ->\n    check productId, String\n    check newVariant, Match.OneOf(Object, undefined)\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    #create variant\n    newVariantId = Random.id()\n    if newVariant\n      newVariant._id = newVariantId\n      check(newVariant, ReactionCore.Schemas.ProductVariant)\n    else\n      newVariant = { \"_id\": newVariantId, \"title\": \"\", \"price\": \"0.00\" }\n    Products.update({\"_id\": productId}, {$addToSet: {\"variants\": newVariant}}, {validate: false})\n    return newVariantId\n\n  ###\n  # update individual variant with new values, merges into original\n  # only need to supply updated information\n  ###\n  updateVariant: (variant, updateDoc, currentDoc) ->\n    check variant, Object\n    check updateDoc, Match.OptionalOrNull(Object)\n    check currentDoc, Match.OptionalOrNull(String)\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    product = Products.findOne \"variants._id\":variant._id\n    if product?.variants\n      for variants,value in product.variants\n        if variants._id is variant._id\n          newVariant = _.extend variants,variant\n      Products.update({\"_id\":product._id,\"variants._id\":variant._id}, {$set: {\"variants.$\": newVariant}}, {validate: false})\n\n\n  ###\n  # update whole variants array\n  ###\n  updateVariants: (variants) ->\n    check variants, [Object]\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    product = Products.findOne \"variants._id\":variants[0]._id\n    Products.update product._id, $set: variants: variants, {validate: false}\n\n\n  ###\n  # delete variant, which should also delete child variants\n  ###\n  deleteVariant: (variantId) ->\n    check variantId, String\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    #what will we be deleteing?\n    deleted = Products.find({$or: [{\"variants.parentId\": variantId}, {\"variants._id\": variantId}]}).fetch()\n    #delete variants with this variant as parent\n    Products.update {\"variants.parentId\": variantId}, {$pull: 'variants': {'parentId': variantId}}\n    #delete this variant\n    Products.update {\"variants._id\": variantId}, {$pull: 'variants': {'_id': variantId}}\n    # unlink media\n    _.each deleted, (product) ->\n      _.each product.variants, (variant) ->\n        if variant.parentId is variantId or variant._id is variantId\n          Media.update 'metadata.variantId': variant._id,\n            $unset:\n              'metadata.productId': \"\"\n              'metadata.variantId': \"\"\n              'metadata.priority': \"\"\n          , multi: true\n    return true\n\n\n  ###\n  # clone a whole product, defaulting visibility, etc\n  # in the future we are going to do an inheritance product\n  # that maintains relationships with the cloned\n  # product tree\n  ###\n  cloneProduct: (product) ->\n    check product, Object\n    #check product, ReactionCore.Schemas.Product\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    #TODO: Really should be a recursive update of all _id\n    i = 0\n    handleCount = Products.find({\"cloneId\": product._id}).count() + 1\n\n    #clean the product and give it a new ID and title\n    product.cloneId = product._id\n    product._id = Random.id()\n    delete product.updatedAt\n    delete product.createdAt\n    delete product.publishedAt\n    delete product.handle\n    product.isVisible = false\n    if product.title then product.title = product.title + handleCount\n\n    #make new random IDs for all variants and maintain parent/child relationship\n    while i < product.variants.length\n      newVariantId = Random.id()\n      oldVariantId = product.variants[i]._id\n      product.variants[i]._id = newVariantId\n      #clone images for each variant\n      Media.find({'metadata.variantId': oldVariantId}).forEach (fileObj) ->\n        newFile = fileObj.copy()\n        newFile.update({$set: {'metadata.productId': product._id, 'metadata.variantId': newVariantId}})\n      #update any child variants with the newly assigned ID\n      unless product.variants[i].parentId\n        while i < product.variants.length\n          if product.variants[i].parentId == oldVariantId\n            product.variants[i].parentId = newVariantId\n          i++\n      i++\n\n    #create the cloned product\n    return Products.insert(product, {validate: false})\n\n  ###\n  # when we create a new product, we create it with\n  # an empty variant. all products have a variant\n  # with pricing and details\n  ###\n  createProduct: () ->\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    Products.insert\n      _id: Random.id()\n      title: \"\"\n      variants: [\n        _id: Random.id()\n        title: \"\"\n        price: 0.00\n      ]\n    , validate: false\n\n  ###\n  # delete a product and unlink it from all media\n  ###\n  deleteProduct: (productId) ->\n    check productId, String\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    # delete product\n    numRemoved = Products.remove productId\n    if numRemoved > 0\n      # unlink media\n      Media.update 'metadata.productId': productId,\n        $unset:\n          'metadata.productId': \"\"\n          'metadata.variantId': \"\"\n          'metadata.priority': \"\"\n      , multi: true\n      return true\n    else\n      return false\n\n  ###\n  # update single product field\n  ###\n  updateProductField: (productId, field, value) ->\n    check productId, String\n    check field, String\n    check value, String\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    # value = Spacebars.SafeString(value)\n    value  = EJSON.stringify value\n    update = EJSON.parse \"{\\\"\" + field + \"\\\":\" + value + \"}\"\n    return Products.update productId, $set: update\n\n  ###\n  # method to insert or update tag with hierachy\n  # tagName will insert\n  # tagName + tagId will update existing\n  ###\n  updateProductTags: (productId, tagName, tagId, currentTagId) ->\n    check productId, String\n    check tagName, String\n    check tagId, Match.OneOf(String, null)\n    check currentTagId, Match.Optional(String)\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    newTag =\n      slug: getSlug tagName\n      name: tagName\n\n    existingTag = Tags.findOne({\"name\": tagName})\n\n    if existingTag\n      productCount = Products.find({\"_id\": productId, \"hashtags\": {$in:[existingTag._id]}}).count()\n      return false if productCount > 0\n      Products.update(productId, {$push: {\"hashtags\": existingTag._id}})\n    else if tagId\n      Tags.update tagId, {$set: newTag}\n    else # create a new tag\n      # newTag.isTopLevel = !currentTagId\n      newTag.isTopLevel = false\n      newTag.shopId = ReactionCore.getShopId()\n      newTag.updatedAt = new Date()\n      newTag.createdAt = new Date()\n      newTag._id = Tags.insert(newTag)\n      Products.update(productId, {$push: {\"hashtags\": newTag._id}})\n    return\n\n  ###\n  # remove product tag\n  ###\n  removeProductTag: (productId, tagId) ->\n    check productId, String\n    check tagId, String\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    Products.update(productId, {$pull: {\"hashtags\": tagId}})\n    # if not in use delete from system\n    productCount = Products.find({\"hashtags\": {$in: [tagId]}}).count()\n    relatedTagsCount = Tags.find({\"relatedTagIds\": {$in: [tagId]}}).count()\n\n    if (productCount is 0) and (relatedTagsCount is 0)\n      Tags.remove(tagId)\n\n\n  ###\n  # set or toggle product handle\n  ###\n  setHandleTag: (productId, tagId) ->\n    check productId, String\n    check tagId, String\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    product = Products.findOne(productId)\n    tag = Tags.findOne(tagId)\n    #if is already assigned, unset (toggle off)\n    if productId.handle is tag.slug\n      Products.update(product._id, {$unset: {\"handle\": \"\"}})\n      return product._id\n    else\n      existingHandles = Products.find({handle: tag.slug}).fetch()\n      #reset any existing handle to product id\n      for currentProduct in existingHandles\n        Products.update(currentProduct._id, {$unset: {\"handle\": \"\"}})\n      #update handle to tag.slug (lowercase tag)\n      Products.update(product._id, {$set: {\"handle\": tag.slug}})\n      return tag.slug\n\n  ###\n  # update product grid positions\n  # position is an object with tag,position,dimensions\n  ###\n  updateProductPosition: (productId, positionData) ->\n    check productId, String\n    check positionData, Object\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n\n    unless Products.findOne({'_id' : productId,\"positions.tag\": positionData.tag})\n      Products.update {_id: productId},\n        {$addToSet: { positions: positionData },$set: {updatedAt: new Date() } },\n      , (error,results) ->\n        ReactionCore.Events.warn error if error\n    else\n      #Collection2 doesn't support elemMatch, use core collection\n      Products.update\n        \"_id\": productId\n        \"positions.tag\": positionData.tag\n        ,\n          $set:\n            \"positions.$.position\": positionData.position\n            \"positions.$.updatedAt\": new Date()\n        ,\n          (error,results) ->\n            ReactionCore.Events.warn error if error\n\n  updateMetaFields: (productId, updatedMeta, meta) ->\n    check productId, String\n    check updatedMeta, Object\n    check meta, Match.OptionalOrNull(Object)\n\n    unless Roles.userIsInRole Meteor.userId(), ['admin']\n      throw new Meteor.Error 403, \"Access Denied\"\n    if meta\n      Products.update({\"_id\": productId, \"metafields\": meta}, {$set: {\"metafields.$\": updatedMeta} })\n    else\n      Products.update( \"_id\": productId, { \"$addToSet\": { \"metafields\": updatedMeta } })\n","Accounts.onCreateUser (options, user) ->\n  # create or clone profile,email to Accounts\n  userAccount  = ReactionCore.Collections.Accounts.findOne('userId': user._id)\n  unless userAccount\n    account = _.clone(user)\n    account.userId = user._id\n    accountId = ReactionCore.Collections.Accounts.insert(account)\n    ReactionCore.Events.info \"Created account: \" + accountId + \" for user: \" + user._id\n  # return to meteor accounts\n  return user\n\n@setMailUrlForShop = (shop) ->\n  coreMail = ReactionCore.Collections.Packages.findOne(name: \"core\").settings.mail\n  if coreMail.user and coreMail.password\n    mailUrl = \"smtp://\" + coreMail.user + \":\" + coreMail.password + \"@\" + coreMail.host + \":\" + coreMail.port + \"/\"\n    process.env.MAIL_URL = process.env.MAIL_URL || mailUrl\n  else\n    ReactionCore.Events.warn 'Core Mail Settings not set. Unable to send email.'\n    throw new Meteor.Error( 403, '<a href=\"/dashboard/settings/shop#mail\">Core Mail Settings</a> not set. Unable to send email.')\n    return\n\nMeteor.methods\n  ###\n  # add new addresses to an account\n  ###\n  addressBookAdd: (doc, accountId) ->\n    @unblock()\n    check doc, ReactionCore.Schemas.Address\n    check accountId, String\n    ReactionCore.Schemas.Address.clean(doc)\n\n    if doc.isShippingDefault or doc.isBillingDefault\n      # set shipping default & clear existing\n      if doc.isShippingDefault\n        ReactionCore.Collections.Accounts.update\n          \"_id\": accountId\n          \"profile.addressBook.isShippingDefault\": true\n        ,\n          $set:\n            \"profile.addressBook.$.isShippingDefault\": false\n\n      # set billing default & clear existing\n      if doc.isBillingDefault\n        ReactionCore.Collections.Accounts.update\n          '_id': accountId\n          \"profile.addressBook.isBillingDefault\": true\n        ,\n          $set:\n            \"profile.addressBook.$.isBillingDefault\": false\n\n    # add address book entry\n    ReactionCore.Collections.Accounts.upsert accountId, {$addToSet: {\"profile.addressBook\": doc}}\n    return doc\n\n  ###\n  # update existing address in user's profile\n  ###\n  addressBookUpdate: (doc, accountId) ->\n    @unblock()\n    check doc, ReactionCore.Schemas.Address\n    check accountId, String\n\n    # reset existing address defaults\n    if doc.isShippingDefault or doc.isBillingDefault\n      if doc.isShippingDefault\n        ReactionCore.Collections.Accounts.update\n          \"_id\": accountId\n          \"profile.addressBook.isShippingDefault\": true\n        ,\n          $set:\n            \"profile.addressBook.$.isShippingDefault\": false\n      if doc.isBillingDefault\n        ReactionCore.Collections.Accounts.update\n          \"_id\": accountId\n          \"profile.addressBook.isBillingDefault\": true\n        ,\n          $set:\n            \"profile.addressBook.$.isBillingDefault\": false\n\n    # update existing address\n    ReactionCore.Collections.Accounts.update\n      \"_id\": accountId\n      \"profile.addressBook._id\": doc._id\n    ,\n      $set:\n        \"profile.addressBook.$\": doc\n    return doc\n\n  ###\n  # invite new admin users\n  # (not consumers) to secure access in the dashboard\n  # to permissions as specified in packages/roles\n  ###\n  inviteShopMember: (shopId, email, name) ->\n    check shopId, String\n    check email, String\n    check name, String\n    @unblock()\n\n    shop = Shops.findOne shopId\n    if shop and email and name\n      if ReactionCore.hasOwnerAccess(shop)\n        currentUserName = Meteor.user()?.profile?.name || Meteor.user()?.username || \"Admin\"\n        user = Meteor.users.findOne {\"emails.address\": email}\n        unless user # user does not exist, invite user\n          userId = Accounts.createUser\n            email: email\n            profile:\n              name: name\n          user = Meteor.users.findOne(userId)\n          unless user\n            throw new Error(\"Can't find user\")\n          token = Random.id()\n          Meteor.users.update userId,\n            $set:\n              \"services.password.reset\":\n                token: token\n                email: email\n                when: new Date()\n\n          setMailUrlForShop(shop)\n          SSR.compileTemplate('shopMemberInvite', Assets.getText('server/emailTemplates/shopMemberInvite.html'))\n          Email.send\n            to: email\n            from: currentUserName + \" <\" + shop.email + \">\"\n            subject: \"You have been invited to join \" + shop.name\n            html: SSR.render 'shopMemberInvite',\n              homepage: Meteor.absoluteUrl()\n              shop: shop\n              currentUserName: currentUserName\n              invitedUserName: name\n              url: Accounts.urls.enrollAccount(token)\n        else # user exist, send notification\n          setMailUrlForShop(shop)\n          SSR.compileTemplate('shopMemberInvite', Assets.getText('server/emailTemplates/shopMemberInvite.html'))\n          Email.send\n            to: email\n            from: currentUserName + \" <\" + shop.email + \">\"\n            subject: \"You have been invited to join the \" + shop.name\n            html: SSR.render 'shopMemberInvite',\n              homepage: Meteor.absoluteUrl()\n              shop: shop\n              currentUserName: currentUserName\n              invitedUserName: name\n              url: Meteor.absoluteUrl()\n\n        Shops.update shopId, {$addToSet: {members: {userId: user._id, isAdmin: true}}}\n\n  ###\n  # send an email to consumers on sign up\n  ###\n  sendWelcomeEmail: (shop) ->\n    check shop, Object\n    @unblock()\n\n    email = Meteor.user().emails[0].address\n    setMailUrlForShop(shop)\n    SSR.compileTemplate('welcomeNotification', Assets.getText('server/emailTemplates/welcomeNotification.html'))\n    Email.send\n      to: email\n      from: shop.email\n      subject: \"Welcome to \" + shop.name + \"!\"\n      html: SSR.render 'welcomeNotification',\n        homepage: Meteor.absoluteUrl()\n        shop: shop\n        user: Meteor.user()\n"]}