{"version":3,"sources":["reactioncommerce:reaction-auth-net/common/register.coffee","reactioncommerce:reaction-auth-net/common/collections.coffee","reactioncommerce:reaction-auth-net/lib/authnet.coffee","reactioncommerce:reaction-auth-net/server/authnet.coffee"],"names":[],"mappings":"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","file":"/packages/reactioncommerce:reaction-auth-net.js","sourcesContent":["ReactionCore.registerPackage\n  name: 'reaction-auth-net'\n  provides: ['paymentMethod']\n  paymentTemplate: \"authnetPaymentForm\"\n  label: 'AuthNet'\n  description: 'Accept AuthNet'\n  icon: 'fa fa-shopping-cart'\n  settingsRoute: 'authnet'\n  defaultSettings:\n    mode: false\n    client_id: \"\"\n    client_secret: \"\"\n  priority: '2'\n  hasWidget: true\n  shopPermissions: [\n    {\n      label: \"Authorize.net\"\n      permission: \"dashboard/payments\"\n      group: \"Shop Settings\"\n    }\n  ]\n","###\n#  Meteor.settings.authnet =\n#    mode: false  #sandbox\n#    client_id: \"\"\n#    client_secret: \"\"\n#  see: https://developer.authnet.com/webapps/developer/docs/api/\n#  see: https://github.com/authnet/rest-api-sdk-nodejs\n###\n\nReactionCore.Schemas.AuthNetPackageConfig = new SimpleSchema([\n  ReactionCore.Schemas.PackageConfig\n  {\n    \"settings.mode\":\n      type: Boolean\n      defaultValue: false\n    \"settings.client_id\":\n      type: String\n      label: \"API Client ID\"\n      min: 60\n    \"settings.client_secret\":\n      type: String\n      label: \"API Secret\"\n      min: 60\n  }\n])\n\nReactionCore.Schemas.AuthNetPayment = new SimpleSchema\n  payerName:\n    type: String\n    label: \"Cardholder name\",\n    regEx: /^\\w+\\s\\w+$/\n  cardNumber:\n    type: String\n    min: 16\n    label: \"Card number\"\n  expireMonth:\n    type: String\n    max: 2\n    label: \"Expiration month\"\n  expireYear:\n    type: String\n    max: 4\n    label: \"Expiration year\"\n  cvv:\n    type: String\n    max: 4\n    label: \"CVV\"\n\nReactionCore.Schemas.AuthNetPayment.messages\n  \"regEx payerName\": \"[label] must include both first and last name\"\n","Meteor.AuthNet =\n  accountOptions: ->\n    settings = ReactionCore.Collections.Packages.findOne(\"name\" : \"reaction-auth-net\").settings\n    if settings?.mode is true then mode = 'secure.authorize.net' else mode = 'test.authorize.net'\n    options =\n      level: mode\n      login: settings?.client_id || Meteor.settings.authnet.client_id\n      tran_key: settings?.client_secret || Meteor.settings.authnet.client_secret\n    return options\n\n  #authorize submits a payment authorization to AuthNet\n  authorize: (cardInfo, paymentInfo, callback) ->\n    Meteor.call \"authnetSubmit\", \"authorize\", cardInfo, paymentInfo, callback\n    return\n\n  # purchase: function(card_info, payment_info, callback){\n  #   Meteor.call('authnetSubmit', 'sale', card_info, payment_info, callback);\n  # },\n  capture: (transactionId, amount, callback) ->\n    console.log(\"Capture Info: \" + transactionId + amount + callback)\n    captureDetails =\n      amount:\n        currency: \"USD\"\n        total: amount\n      is_final_capture: true\n\n    Meteor.call \"authnetCapture\", transactionId, captureDetails, callback\n    return\n\n  #config is for the authnet configuration settings.\n  config: (options) ->\n    @accountOptions = options\n    return\n\n  paymentObj: ->\n    intent: \"sale\"\n    payer:\n      payment_method: \"CC\"\n      funding_instruments: []\n    transactions: []\n\n  parseCardData: (data) ->\n    console.log(\"Parsing card data:\" + data)\n    type: data.type\n    number: data.number\n    first_name: data.first_name\n    last_name: data.last_name\n    cvv2: data.cvv2\n    expire_month: data.expire_month\n    expire_year: data.expire_year\n\n  #parsePaymentData splits up the card data and gets it into a authnet friendly format.\n  parsePaymentData: (data) ->\n    console.log(\"Parsing payment data: \" + data.total + data.currency)\n    amount:\n      total: data.total\n      currency: data.currency\n","AuthNet = Npm.require(\"paynode\").use(\"authorizenet\")\nFiber = Npm.require(\"fibers\")\nFuture = Npm.require(\"fibers/future\")\n\nMeteor.methods\n  #submit (sale, authorize)\n  authnetSubmit: (transactionType, cardData, paymentData) ->\n    console.log(\"authnetSubmit: \" + transactionType + cardData + paymentData)\n    paymentObj = Meteor.AuthNet.paymentObj()\n    paymentObj.intent = transactionType\n    paymentObj.payer.funding_instruments.push Meteor.AuthNet.parseCardData(cardData)\n    paymentObj.transactions.push Meteor.AuthNet.parsePaymentData(paymentData)\n    console.log(paymentObj.transactions)\n\n    client = AuthNet.createClient Meteor.AuthNet.accountOptions()\n\n    fut = new Future()\n    @unblock()\n    client.performAimTransaction(\n      x_type: \"AUTH_CAPTURE\"\n      x_method: \"CC\"\n      x_card_num: \"4111111111111111\"\n      x_exp_date: \"0115\"\n      x_amount: \"19.99\"\n      x_description: \"Sample Transaction\"\n      x_first_name: \"John\"\n      x_last_name: \"Doe\"\n      x_address: \"1234 Street\"\n      x_state: \"WA\"\n      x_zip: \"98004\"\n    ).on(\"success\", (err, result) ->\n      console.log(\"Processed successfully.\")\n      fut.return\n        saved: true\n        result: result\n      return\n    , (e) ->\n      console.error e\n      return\n    # fut.wait()\n    ).on \"failure\", (err, result) ->\n      console.log(\"Encountered an error\")\n      fut.return\n        saved: false\n        error: result.responsereasontext\n      return\n    , (e) ->\n      console.error e\n      return\n    fut.wait()\n\n\n  # capture (existing authorization)\n  authnetCapture: (transactionId, captureDetails) ->\n    console.log(\"Capture Info: \" + transactionId, captureDetails)\n    client = AuthNet.createClient(\n      level: AuthNet.levels.sandbox\n      login: \"2CxyF7b3njd\"\n      tran_key: \"75Bm5295n53Rr5CA\"\n    )\n\n    fut = new Future()\n    @unblock()\n    AuthNet.authorization.capture transactionId, captureDetails, (error, capture) ->\n      if error\n        fut.return\n          saved: false\n          error: error\n      else\n        fut.return\n          saved: true\n          capture: capture\n      return\n    fut.wait()\n"]}