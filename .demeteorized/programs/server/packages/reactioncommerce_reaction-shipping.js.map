{"version":3,"sources":["reactioncommerce:reaction-shipping/common/collections.coffee","reactioncommerce:reaction-shipping/common/routing.coffee","reactioncommerce:reaction-shipping/server/register.coffee","reactioncommerce:reaction-shipping/server/methods.coffee","reactioncommerce:reaction-shipping/server/fixtures.coffee"],"names":[],"mappings":"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","file":"/packages/reactioncommerce_reaction-shipping.js","sourcesContent":["ReactionCore.Schemas.ShippingPackageConfig = new SimpleSchema([\n  ReactionCore.Schemas.PackageConfig\n  {\n    \"settings.name\":\n      type: String\n      defaultValue: \"Flat Rate Service\"\n  }\n])\n","Router.map ->\n  @route 'shipping',\n    controller: ShopAdminController\n    path: 'dashboard/settings/shipping',\n    template: 'shipping'\n    waitOn: ->\n      return ReactionCore.Subscriptions.Packages\n    subscriptions: ->\n      return Meteor.subscribe \"shipping\"","ReactionCore.registerPackage\n  name: 'reaction-shipping'\n  autoEnable: true\n  settings:\n    name: \"Flat Rate Service\"\n  registry: [\n    {\n      provides: 'dashboard'\n      label: 'Basic Shipping'\n      description: 'Use flat rates for shipping calculations'\n      icon: 'fa fa-truck'\n      cycle: 3\n      group: \"reaction-shipping\"\n    }\n    {\n      route: 'shipping'\n      provides: 'settings'\n      group: \"reaction-shipping\"\n    }\n    {\n      template: 'flatRateCheckoutShipping'\n      provides: 'shippingMethod'\n    }\n  ]\n  permissions: [\n    {\n      label: \"Shipping\"\n      permission: \"dashboard/shipping\"\n      group: \"Shop Settings\"\n    }\n  ]\n","Match.OptionalOrNull = (pattern) -> Match.OneOf undefined, null, pattern\n\nMeteor.methods\n  ###\n  # add new shipping methods\n  ###\n  addShippingMethod: (insertDoc, updateDoc, currentDoc) ->\n    check insertDoc, Object\n    check currentDoc, String\n    check updateDoc, Object\n\n    unless Roles.userIsInRole(Meteor.userId(), ['admin','shipping']) then return false\n    # updates\n    return ReactionCore.Collections.Shipping.update({'_id': currentDoc}, {$addToSet:{'methods': insertDoc}})\n\n  ###\n  # Update Shipping methods for a provider\n  ###\n  updateShippingMethods: (docId, currentDoc, updateDoc) ->\n    check docId, String\n    check currentDoc, Object\n    check updateDoc, Object\n\n    unless Roles.userIsInRole(Meteor.userId(), ['admin','shipping']) then return false\n    # updates\n    updateDoc = ReactionCore.Collections.Shipping.update({'_id': docId, 'methods': currentDoc}, {$set: {'methods.$': updateDoc}})\n    return updateDoc\n\n  ###\n  # remove shipping method\n  ###\n  removeShippingMethod: (providerId, removeDoc) ->\n    check providerId, String\n    check removeDoc, Object\n\n    unless Roles.userIsInRole(Meteor.userId(), ['admin','shipping']) then return false\n    # pull shippingMethod\n    ReactionCore.Collections.Shipping.update({'_id': providerId, 'methods': removeDoc}, {$pull: {'methods': removeDoc}})\n\n  ###\n  # add / insert shipping provider\n  ###\n  addShippingProvider: (insertDoc, updateDoc, currentDoc) ->\n    check insertDoc, Object\n    check updateDoc, Object\n    check currentDoc, Match.OptionalOrNull(String)\n\n    unless Roles.userIsInRole(Meteor.userId(), ['admin','shipping']) then return false\n    # insert provider\n    return ReactionCore.Collections.Shipping.insert(insertDoc)\n\n  ###\n  # update shipping provider\n  ###\n  updateShippingProvider: (insertDoc, updateDoc, currentDoc) ->\n    check insertDoc, Object\n    check updateDoc, Object\n    check currentDoc, String\n\n    unless Roles.userIsInRole(Meteor.userId(), ['admin','shipping']) then return false\n    # insert provider\n    return ReactionCore.Collections.Shipping.update('_id': currentDoc, updateDoc)\n","###\n# Fixture - we always want a record\n###\nMeteor.startup ->\n  jsonFile =  Assets.getText(\"private/data/Shipping.json\")\n  Fixtures.loadData ReactionCore.Collections.Shipping, jsonFile"]}