{"version":3,"sources":["reactioncommerce:reaction-shipping/common/register.coffee","reactioncommerce:reaction-shipping/common/collections.coffee","reactioncommerce:reaction-shipping/common/routing.coffee","reactioncommerce:reaction-shipping/server/methods.coffee","reactioncommerce:reaction-shipping/server/fixtures.coffee"],"names":[],"mappings":"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","file":"/packages/reactioncommerce:reaction-shipping.js","sourcesContent":["ReactionCore.registerPackage\n  name: 'reaction-shipping'\n  provides: ['shippingMethod']\n  shippingTemplate: \"flatRateCheckoutShipping\"\n  label: 'Basic Shipping'\n  description: 'Use flat rates for shipping calculations'\n  icon: 'fa fa-truck'\n  settingsRoute: 'shipping'\n  defaultSettings:\n    name: \"Flat Rate Service\"\n  priority: '2'\n  hasWidget: true\n  autoEnable: true\n  shopPermissions: [\n    {\n      label: \"Shipping\"\n      permission: \"dashboard/shipping\"\n      group: \"Shop Settings\"\n    }\n  ]","###\n#  Meteor.settings.paypal =\n#    mode: false  #sandbox\n#    client_id: \"\"\n#    client_secret: \"\"\n#  see: https://developer.paypal.com/webapps/developer/docs/api/\n#  see: https://github.com/paypal/rest-api-sdk-nodejs\n###\n\nReactionCore.Schemas.ShippingPackageConfig = new SimpleSchema([\n  ReactionCore.Schemas.PackageConfig\n  {\n    \"settings.name\":\n      type: String\n      defaultValue: \"Flat Rate Service\"\n  }\n])","Router.map ->\n  @route 'shipping',\n    controller: ShopAdminController\n    path: 'dashboard/settings/shipping',\n    template: 'shipping'\n    waitOn: ->\n      return ReactionCore.Subscriptions.Packages\n    subscriptions: ->\n      return Meteor.subscribe \"shipping\"","Meteor.methods\n  ###\n  # add new shipping methods\n  ###\n  addShippingMethod: (insertDoc, updateDoc, currentDoc) ->\n    # check providerId, String\n    unless Roles.userIsInRole(Meteor.userId(), ['admin','shipping']) then return false\n    # updates\n    return ReactionCore.Collections.Shipping.update({'_id': currentDoc}, {$addToSet:{'methods': insertDoc}})\n\n  ###\n  # Update Shipping methods for a provider\n  ###\n  updateShippingMethods: (docId, currentDoc, updateDoc) ->\n    # validation, permissions\n    check docId, String\n    unless Roles.userIsInRole(Meteor.userId(), ['admin','shipping']) then return false\n    # updates\n    return ReactionCore.Collections.Shipping.update({'_id': docId, 'methods': currentDoc}, {$set: {'methods.$': updateDoc}})\n\n  ###\n  # remove shipping method\n  ###\n  removeShippingMethod: (providerId, removeDoc) ->\n    # validation, permissions\n    check providerId, String\n    unless Roles.userIsInRole(Meteor.userId(), ['admin','shipping']) then return false\n    # pull shippingMethod\n    ReactionCore.Collections.Shipping.update({'_id': providerId, 'methods': removeDoc}, {$pull: {'methods': removeDoc}})\n\n  ###\n  # add / insert shipping provider\n  ###\n  addShippingProvider: (insertDoc, updateDoc, currentDoc) ->\n    # validation, permissions\n    unless Roles.userIsInRole(Meteor.userId(), ['admin','shipping']) then return false\n    # insert provider\n    return ReactionCore.Collections.Shipping.insert(insertDoc)\n\n  ###\n  # update shipping provider\n  ###\n  updateShippingProvider: (insertDoc, updateDoc, currentDoc) ->\n    # validation, permissions\n    unless Roles.userIsInRole(Meteor.userId(), ['admin','shipping']) then return false\n    # insert provider\n    return ReactionCore.Collections.Shipping.update('_id': currentDoc, updateDoc)\n","###\n# Fixture - we always want a record\n###\nMeteor.startup ->\n  jsonFile =  Assets.getText(\"private/data/Shipping.json\")\n  Fixtures.loadData ReactionCore.Collections.Shipping, jsonFile"]}