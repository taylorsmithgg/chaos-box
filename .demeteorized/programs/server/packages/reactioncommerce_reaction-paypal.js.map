{"version":3,"sources":["reactioncommerce:reaction-paypal/common/register.coffee","reactioncommerce:reaction-paypal/common/collections.coffee","reactioncommerce:reaction-paypal/lib/paypal.coffee","reactioncommerce:reaction-paypal/server/paypal.coffee"],"names":[],"mappings":"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","file":"/packages/reactioncommerce:reaction-paypal.js","sourcesContent":["ReactionCore.registerPackage\n  name: 'reaction-paypal'\n  provides: ['paymentMethod']\n  paymentTemplate: \"paypalPaymentForm\"\n  label: 'PayPal'\n  description: 'Accept PayPal'\n  icon: 'fa fa-shopping-cart'\n  settingsRoute: 'paypal'\n  defaultSettings:\n    mode: false\n    client_id: \"\"\n    client_secret: \"\"\n  priority: '2'\n  hasWidget: true\n  shopPermissions: [\n    {\n      label: \"Pay Pal\"\n      permission: \"dashboard/payments\"\n      group: \"Shop Settings\"\n    }\n  ]","###\n#  Meteor.settings.paypal =\n#    mode: false  #sandbox\n#    client_id: \"\"\n#    client_secret: \"\"\n#  see: https://developer.paypal.com/webapps/developer/docs/api/\n#  see: https://github.com/paypal/rest-api-sdk-nodejs\n###\n\nReactionCore.Schemas.PaypalPackageConfig = new SimpleSchema([\n  ReactionCore.Schemas.PackageConfig\n  {\n    \"settings.mode\":\n      type: Boolean\n      defaultValue: false\n    \"settings.client_id\":\n      type: String\n      label: \"API Client ID\"\n      min: 60\n    \"settings.client_secret\":\n      type: String\n      label: \"API Secret\"\n      min: 60\n  }\n])\n\nReactionCore.Schemas.PaypalPayment = new SimpleSchema\n  payerName:\n    type: String\n    label: \"Cardholder name\",\n    regEx: /^\\w+\\s\\w+$/\n  cardNumber:\n    type: String\n    min: 16\n    label: \"Card number\"\n  expireMonth:\n    type: String\n    max: 2\n    label: \"Expiration month\"\n  expireYear:\n    type: String\n    max: 4\n    label: \"Expiration year\"\n  cvv:\n    type: String\n    max: 4\n    label: \"CVV\"\n\nReactionCore.Schemas.PaypalPayment.messages\n  \"regEx payerName\": \"[label] must include both first and last name\"\n","Meteor.Paypal =\n  accountOptions: ->\n    settings = ReactionCore.Collections.Packages.findOne(name: \"reaction-paypal\").settings\n    if settings?.mode is true then mode = \"live\" else mode = \"sandbox\"\n    options =\n      mode: mode\n      client_id: settings?.client_id || Meteor.settings.paypal.client_id\n      client_secret: settings?.client_secret || Meteor.settings.paypal.client_secret\n    return options\n\n  #authorize submits a payment authorization to Paypal\n  authorize: (cardInfo, paymentInfo, callback) ->\n    Meteor.call \"paypalSubmit\", \"authorize\", cardInfo, paymentInfo, callback\n    return\n\n  # purchase: function(card_info, payment_info, callback){\n  #   Meteor.call('paypalSubmit', 'sale', card_info, payment_info, callback);\n  # },\n  capture: (transactionId, amount, callback) ->\n    captureDetails =\n      amount:\n        currency: \"USD\"\n        total: amount\n      is_final_capture: true\n\n    Meteor.call \"paypalCapture\", transactionId, captureDetails, callback\n    return\n\n  #config is for the paypal configuration settings.\n  config: (options) ->\n    @accountOptions = options\n    return\n\n  paymentObj: ->\n    intent: \"sale\"\n    payer:\n      payment_method: \"credit_card\"\n      funding_instruments: []\n    transactions: []\n\n  #parseCardData splits up the card data and puts it into a paypal friendly format.\n  parseCardData: (data) ->\n    credit_card:\n      type: data.type\n      number: data.number\n      first_name: data.first_name\n      last_name: data.last_name\n      cvv2: data.cvv2\n      expire_month: data.expire_month\n      expire_year: data.expire_year\n\n  #parsePaymentData splits up the card data and gets it into a paypal friendly format.\n  parsePaymentData: (data) ->\n    amount:\n      total: data.total\n      currency: data.currency\n","PayPal = Npm.require(\"paypal-rest-sdk\")\nFiber = Npm.require(\"fibers\")\nFuture = Npm.require(\"fibers/future\")\n\nMeteor.methods\n  #submit (sale, authorize)\n  paypalSubmit: (transactionType, cardData, paymentData) ->\n    PayPal.configure Meteor.Paypal.accountOptions()\n    paymentObj = Meteor.Paypal.paymentObj()\n    paymentObj.intent = transactionType\n    paymentObj.payer.funding_instruments.push Meteor.Paypal.parseCardData(cardData)\n    paymentObj.transactions.push Meteor.Paypal.parsePaymentData(paymentData)\n\n    fut = new Future()\n    @unblock()\n    PayPal.payment.create paymentObj, Meteor.bindEnvironment((err, payment) ->\n      if err\n        fut.return\n          saved: false\n          error: err\n      else\n        fut.return\n          saved: true\n          payment: payment\n      return\n    , (e) ->\n      ReactionCore.Events.warn e\n      return\n    )\n    fut.wait()\n\n\n  # capture (existing authorization)\n  paypalCapture: (transactionId, captureDetails) ->\n    PayPal.configure Meteor.Paypal.accountOptions()\n\n    fut = new Future()\n    @unblock()\n    PayPal.authorization.capture transactionId, captureDetails, (error, capture) ->\n      if error\n        fut.return\n          saved: false\n          error: error\n      else\n        fut.return\n          saved: true\n          capture: capture\n      return\n    fut.wait()\n"]}