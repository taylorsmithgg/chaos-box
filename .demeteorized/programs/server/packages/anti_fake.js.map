{"version":3,"file":"/packages/anti:fake.js","sources":["anti:fake/fake.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA,uE;AACA,mB;AACA,uE;;;AAGA,8C;;AAEA,gB;AACA,qI;AACA,4I;AACA,6I;AACA,6I;AACA,wJ;AACA,sJ;AACA,iJ;AACA,E;;AAEA,qC;;AAEA,yD;;AAEA,a;AACA,8C;AACA,gD;AACA,+C;AACA,gD;AACA,qD;AACA,0C;AACA,+C;AACA,0C;AACA,kD;AACA,8C;AACA,sD;AACA,yD;AACA,0C;AACA,6C;AACA,2C;AACA,8C;AACA,2C;AACA,4C;AACA,+C;AACA,4C;AACA,E;;AAEA,mB;AACA,yH;;AAEA,c;AACA,2D;AACA,oD;AACA,+D;AACA,2E;AACA,0E;AACA,oE;AACA,kE;AACA,E;;;AAGA,+B;;AAEA,qB;;AAEA,e;AACA,iC;AACA,iC;AACA,E;;AAEA,sC;;AAEA,mB;AACA,O;AACA,sB;AACA,a;AACA,O;AACA,G;AACA,E;;AAEA,yC;;AAEA,qB;AACA,K;AACA,K;AACA,K;AACA,K;;AAEA,K;AACA,K;AACA,K;AACA,K;;AAEA,K;AACA,K;AACA,M;AACA,M;;AAEA,M;AACA,M;AACA,M;AACA,M;AACA,E;;;;AAIA,uE;AACA,qB;AACA,uE;;;AAGA,gC;AACA,mE;AACA,E;;AAEA,0B;AACA,wD;AACA,E;;AAEA,kC;AACA,2D;AACA,yC;AACA,yC;AACA,gB;AACA,mC;AACA,8D;AACA,wD;AACA,G;AACA,c;AACA,E;;AAEA,4B;AACA,6D;AACA,E;;AAEA,qC;AACA,yD;AACA,E;;;AAGA,uB;;AAEA,wB;AACA,oB;AACA,I;;AAEA,2B;AACA,0B;AACA,I;;AAEA,4B;AACA,0C;AACA,I;;AAEA,yB;AACA,sD;AACA,I;;AAEA,4B;AACA,yD;AACA,I;AACA,E;AACA,oC;AACA,gB;AACA,0E;AACA,M;AACA,I;;AAEA,kC;AACA,iB;AACA,qC;AACA,M;AACA,I;;AAEA,E;;AAEA,iE;;AAEA,uE;AACA,sB;AACA,uE;;;AAGA,U;;;;AAIA,8B;AACA,a;;AAEA,+B;AACA,2B;AACA,U;AACA,+B;AACA,G;;AAEA,c;AACA,oB;AACA,oC;AACA,wB;AACA,I;;AAEA,kB;;AAEA,wB;AACA,kC;AACA,+C;AACA,G;;AAEA,gB;AACA,E;;AAEA,wB;AACA,yB;AACA,4E;AACA,gB;AACA,E;;AAEA,kC;AACA,e;AACA,mD;AACA,G;AACA,gF;AACA,yB;AACA,2E;AACA,mC;AACA,8B;AACA,G;AACA,yB;AACA,E;;;AAGA,mC;AACA,e;AACA,+C;AACA,G;AACA,+B;AACA,mC;AACA,oC;AACA,G;AACA,gB;AACA,E;;;;AAIA,oC;AACA,8B;AACA,E;;AAEA,yB;AACA,+B;AACA,E","sourcesContent":["\n\n\n\n/* ---------- ---------- ---------- ---------- ---------- ---------- */\n/* Source arrays */\n/* ---------- ---------- ---------- ---------- ---------- ---------- */\n\n\n/* Most common syllabes in English language */\n\nvar syllabes = [\n  'the','ing','er','a','ly','ed','i','es','re','tion','in','e','con','y','ter','ex','al','de','com','o','di','en','an','ty','ry','u',\n  'ti','ri','be','per','to','pro','ac','ad','ar','ers','ment','or','tions','ble','der','ma','na','si','un','at','dis','ca','cal','man','ap',\n  'po','sion','vi','el','est','la','lar','pa','ture','for','is','mer','pe','ra','so','ta','as','col','fi','ful','get','low','ni','par','son',\n  'tle','day','ny','pen','pre','tive','car','ci','mo','an','aus','pi','se','ten','tor','ver','ber','can','dy','et','it','mu','no','ple','cu',\n  'fac','fer','gen','ic','land','light','ob','of','pos','tain','den','ings','mag','ments','set','some','sub','sur','ters','tu','af','au','cy','fa','im',\n  'li','lo','men','min','mon','op','out','rec','ro','sen','side','tal','tic','ties','ward','age','ba','but','cit','cle','co','cov','daq','dif','ence',\n  'ern','eve','hap','ies','ket','lec','main','mar','mis','my','nal','ness','ning','nu','oc','pres','sup','te','ted','tem','tin','tri','tro','up',\n];\n\nvar syllabesLength = syllabes.length;\n\n/* Popular names in several English-speaking countries */\n\nvar names = [\n  'Abigail','Alice','Amelia','Angelina','Ann',\n  'Ashley','Avery','Barbara','Brianna','Camila',\n  'Chloe','Dorothy','Elizabeth','Ella','Emily',\n  'Emma','Fiona','Florence','Gabrielle','Haley',\n  'Hannah','Isabella','Jasmine','Jennifer','Jessica',\n  'Juliette','Kate','Leah','Lily','Linda',\n  'Lea','Madison','Makayla','Margaret','Maria',\n  'Mariana','Mary','Megan','Mia','Olivia',\n  'Patricia','Rachel','Samantha','Sarah','Sophie',\n  'Susan','Taylor','Valeria','Victoria','Zoe',\n  'Alexander','Anthony','Benjamin','Brandon','Carter',\n  'Charles','Charlie','Christian','Christopher','Daniel',\n  'David','Deven','Dylan','Elijah','Eric',\n  'Ethan','Felix','Gabriel','George','Harry',\n  'Hudson','Hunter','Jack','Jacob','James',\n  'Jason','Jayden','Jeremiah','John','Joseph',\n  'Joshua','Justin','Kevin','Liam','Logan',\n  'Lucas','Matthew','Michael','Neil','Noah',\n  'Oliver','Owen','Raphael','Richard','Robert',\n  'Ryan','Samuel','Thomas','Tyler','William'\n];\n\n/* Sample colors */\n/* TODO: Split them to several palettes and allow choice of which palettes to use, ie. warm, cool, grays, greens, etc. */\n\nvar colors = [\n  'antiquewhite', 'brown', 'chocolate', 'coral', 'crimson',\n  'darkgray', 'darkred', 'darkorange', 'darksalmon',\n  'firebrick', 'floralwhite', 'gainsboro', 'gold', 'goldenrod',\n  'gray', 'indianred', 'khaki', 'lightcoral', 'lightsalmon', 'lightyellow',\n  'maroon', 'mistyrose', 'navajowhite', 'mocassin', 'orange', 'orangered',\n  'peru', 'red', 'rosybrown', 'saddlebrown', 'sandybrown', 'sienna',\n  'silver', 'slategray', 'tan', 'tomato', 'yeal', 'navy', 'black',\n];\n\n\nvar namesLength = names.length;\n\n/* Domain suffixes */\n\nvar domains = [\n  '.net', '.org', '.edu', '.com',\n  '.com', '.com', '.com', '.com',\n];\n\n/* Frequency table for word lengths */\n\nvar wordLengths = [\n  1, 1,\n  2, 2, 2, 2, 2, 2, 2,\n  3, 3, 3, 3,\n  4, 4,\n  5\n];\n\n/* Frequency table for random syllabes */\n\nvar syllabeCounts = [\n  10,\n  15,\n  20,\n  25,\n\n  30,\n  35,\n  40,\n  45,\n\n  50,\n  75,\n  100,\n  125,\n\n  150,\n  175,\n  175,\n  175,\n];\n\n\n\n/* ---------- ---------- ---------- ---------- ---------- ---------- */\n/* Utility methods */\n/* ---------- ---------- ---------- ---------- ---------- ---------- */\n\n\nvar capitalize = function(str) {\n  return str.slice(0,1).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nvar getName = function() {\n  return names[Math.floor(Math.random() * namesLength)];\n};\n\nvar getWord = function(min, max) {\n  var length = wordLengths[Math.floor(Math.random() * 16)];\n  if(min && (length < min)) length = min;\n  if(max && (length > max)) length = max;\n  var word = '';\n  for(var i = 0; i < length; ++i) {\n    var count = syllabeCounts[Math.floor(Math.random() * 16)];\n    word += syllabes[Math.floor(Math.random() * count)];\n  }\n  return word;\n};\n\nvar getDomain = function() {\n  return getWord(2) + domains[Math.floor(Math.random() * 8)];\n};\n\nvar randomElement = function(array) {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\n\nvar attachUserField = {\n\n  name: function(u, o) {\n    o.name = u.name;\n  },\n\n  surname: function(u, o) {\n    o.surname = u.surname;\n  },\n\n  fullname: function(u, o) {\n    o.fullname = u.name + ' ' + u.surname;\n  },\n\n  email: function(u, o) {\n    o.email = (u.name + '@' + u.domain).toLowerCase();\n  },\n\n  username: function(u, o) {\n    o.username = (u.name + '@' + u.domain).toLowerCase();\n  },\n  \n  'emails.address': function(u, o) {\n    o.emails = [\n      {address: (u.name + '@' + u.domain).toLowerCase(), validated: false}\n    ];\n  },\n\n  'profile.name': function(u, o) {\n    o.profile = {\n      name: u.name + ' ' + u.surname,\n    };\n  },\n\n};\n\nvar defaultUserFields = ['name', 'surname', 'fullname', 'email'];\n\n/* ---------- ---------- ---------- ---------- ---------- ---------- */\n/* Exported methods */\n/* ---------- ---------- ---------- ---------- ---------- ---------- */\n\n\nFake = {};\n\n\n\nFake.user = function(params) {\n  var fields;\n\n  if(params && params.fields) {\n    fields = params.fields;\n  } else {\n    fields = defaultUserFields;\n  }\n\n  var user = {\n    name: getName(),\n    surname: capitalize(getWord(3)),\n    domain: getDomain(),\n  };\n\n  var result = {};\n\n  for(var i in fields) {\n    if(attachUserField[fields[i]])\n      attachUserField[fields[i]](user, result);\n  }\n\n  return result;\n};\n\nFake.word = function() {\n  var result = getWord();\n  result = result.slice(0,1).toUpperCase() + result.slice(1).toLowerCase();;\n  return result;\n};\n\nFake.sentence = function(length) {\n  if(!length) {\n    var length = 4 + Math.floor(Math.random() * 8);\n  }\n  var ending = (Math.random() < 0.95) ? '.' : (Math.random() < 0.5) ? '!' : '?';\n  var result = getWord();\n  result = result.slice(0,1).toUpperCase() + result.slice(1).toLowerCase();\n  for(var i = 1; i < length; ++i) {\n    result += ' ' + getWord();\n  }\n  return result + ending;\n};\n\n\nFake.paragraph = function(length) {\n  if(!length) {\n    length = 6 + Math.floor(Math.random() * 8);\n  }\n  var result = Fake.sentence();\n  for(var i = 1; i < length; ++i) {\n    result += ' ' + Fake.sentence();\n  }\n  return result;\n};\n\n\n\nFake.fromArray = function(array) {  \n  return randomElement(array);\n};\n\nFake.color = function() {\n  return randomElement(colors);\n};\n\n\n\n\n\n\n"]}