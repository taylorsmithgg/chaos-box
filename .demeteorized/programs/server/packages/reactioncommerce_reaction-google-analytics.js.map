{"version":3,"sources":["reactioncommerce:reaction-google-analytics/common/routing.coffee","reactioncommerce:reaction-google-analytics/common/collections.coffee","reactioncommerce:reaction-google-analytics/server/security/AnalyticsEvents.coffee","reactioncommerce:reaction-google-analytics/server/security/browserPolicy.coffee","reactioncommerce:reaction-google-analytics/server/publications.coffee","reactioncommerce:reaction-google-analytics/server/register.coffee"],"names":[],"mappings":"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","file":"/packages/reactioncommerce_reaction-google-analytics.js","sourcesContent":["Router.map ->\n  @route 'googleAnalytics',\n    controller: ShopAdminController\n    path: 'dashboard/settings/googleAnalytics'\n    template: 'googleAnalytics'\n\n# Use onRun instead of afterAction so that tracking only happens once per page.\n# See: https://github.com/iron-meteor/iron-router/tree/0.9#custom-actions-and-hooks\nRouter.onRun ->\n  gaConfig = ReactionCore.Collections.Packages.findOne({name: \"reaction-google-analytics\", 'enabled': true})\n  trackingID = gaConfig.settings.public.api_key if gaConfig\n  # Check to make sure GA exists before triggering pageview sends.\n  if trackingID\n    ga(\"send\", \"pageview\", Iron.Location.get().path ) # per https://github.com/iron-meteor/iron-router/issues/289\n  @next() #https://github.com/iron-meteor/iron-router/issues/1089\n  return\n","###\n#   Google Analytics\n#   api_key: \"UA-XXXXX-X\" (this is your tracking ID)\n###\n\n# Init AnalyticsEvent Collection\nReactionCore.Collections.AnalyticsEvents = new Meteor.Collection \"AnalyticsEvents\"\n\nReactionCore.Schemas.GoogleAnalyticsPackageConfig = new SimpleSchema([\n  ReactionCore.Schemas.PackageConfig\n  {\n    \"settings.public.api_key\":\n      type: String\n      label: \"Tracking ID\"\n  }\n])\n","ReactionCore.Collections.AnalyticsEvents.allow\n  insert: (userId, analyticsEvent) ->\n    analyticsEvent.shopId = ReactionCore.getShopId()\n    return true\n  update: (userId, analyticsEvent, fields, modifier) ->\n    if modifier.$set && modifier.$set.shopId\n      return false\n    return true\n  remove: (userId, analyticsEvent) ->\n    if analyticsEvent.shopId != ReactionCore.getShopId()\n      return false\n    return true\n","Meteor.startup ->\n  # set browser policy\n  BrowserPolicy.content.allowOriginForAll(\"www.google-analytics.com\")\n  BrowserPolicy.content.allowOriginForAll(\"*.doubleclick.net\")\n","Meteor.publish \"AnalyticsEvents\", ->\n  return ReactionCore.Collections.AnalyticsEvents.find shopId: ReactionCore.getShopId(@)\n","ReactionCore.registerPackage\n  name: 'reaction-google-analytics'\n  autoEnable: false\n  settings: # private package settings config (blackbox)\n    public:\n      api_key: \"\" # Tracking ID - using api_key to maintain compatability\n  registry: [\n    # all options except route and template\n    # are used to describe the\n    # dashboard 'app card'.\n    {\n      provides: 'dashboard'\n      label: 'Google Analytics'\n      description: \"Event tracking and analytics with Google Analytics\"\n      icon: \"fa fa-bar-chart-o\" # glyphicon/fa\n      cycle: '3' # Core, Stable, Testing (currently testing)\n      container: 'dashboard'  #group this with settings\n    }\n    # configures settings link for app card\n    # use 'group' to link to dashboard card\n    {\n      route: 'googleAnalytics'\n      provides: 'settings'\n      container: 'dashboard'\n    }\n  ]\n  # array of permission objects\n  permissions: [\n    {\n      label: \"Google Analytics\"\n      permission: \"dashboard/settings\"\n      group: \"Shop Settings\"\n    }\n  ]\n"]}